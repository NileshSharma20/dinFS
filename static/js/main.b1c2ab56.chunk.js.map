{"version":3,"sources":["features/template/templateService.js","features/template/templateSlice.js","features/products/productService.js","features/auth/authService.js","features/users/usersService.js","features/users/usersSlice.js","features/auth/authSlice.js","features/products/productSlice.js","features/orders/orderService.js","features/orders/orderSlice.js","app/store.js","components/Navbar/Navbar.jsx","components/Forms/CopyForm.jsx","pages/IndiaMartRes/QuickRes.jsx","components/Dropdown/Dropdown.jsx","components/Loader/Loader.jsx","pages/Products/Products.jsx","hooks/useAuth.js","pages/Landing/Landing.jsx","components/Forms/ProductForm.jsx","pages/Products/Product.jsx","pages/NotFound/NotFound.jsx","components/Forms/LoginForm.jsx","pages/Login/Login.jsx","components/Modals/LoginAgainModal.jsx","components/Forms/UserForm.jsx","components/Cards/UserCard.jsx","pages/UserManagement/Users.jsx","components/Footer/Footer.jsx","components/Forms/QuickProdSearchForm.jsx","components/Dropdown/UserDropdown.js","components/Cards/DemandSlipCard.jsx","components/Forms/UpdateOrderForm.jsx","components/Cards/DemandSlipEditCard.jsx","pages/DemandSlip/AllOrderPagination.jsx","pages/DemandSlip/DemandSlip.jsx","App.js","index.js"],"names":["templateService","formSubmit","formRes","returnData","customer_name","pricePerUnit","unit","initialState","formResponseData","pricePerUnitOE","excDeliveryCharge","product","responseTemplate","isError","isSuccess","isLoading","message","formResponseSubmit","createAsyncThunk","async","formResponse","thunkAPI","error","response","data","toString","rejectWithValue","templateSlice","createSlice","name","reducers","resetTemplate","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","prod_URI","main_URI","productService","createProductDataJSON","csvFileData","length","console","log","map","prod","sku","metaData","iC","itemCode","toUpperCase","replace","cleanedVM","spaceRemovedVM","vehicleModel","delimitedVM","split","slice","vM","spaceRemovedBC","brandCompany","bC","spaceRemovedPN","partNum","pN","join","delimitedCM","compatibileModels","prodClone","Object","assign","mrp","getProducts","axios","get","concat","itemData","searchProducts","searchKey","item","productFullName","productName","searchSKUProducts","skuOnlyFlag","post","updateProduct","token","_ref","config","headers","Authorization","patch","prodInfo","auth_URI","authService","healthCheck","setUserCredentials","userData","sessionStorage","setItem","JSON","stringify","refreshToken","logoutUser","removeItem","users_URI","usersService","getAllUsers","updateUser","userInfo","usersList","_","getState","auth","err","status","dispatch","usersSlice","resetUser","_JSON$parse","parse","getItem","accessToken","username","roles","res","errorStatus","refreshResult","logOutUser","resetProducts","authSlice","resetAuth","verified","prodCodeList","productData","productSKUData","noMatch","searchSKUProductsOnly","productSlice","resetSearchProducts","order_URI","orderService","getAllDemandSlips","getFilteredDemandSlips","filterParams","fullDate","accessLevel","filterQueryString","filterDate","filterPublisherUsername","filterStatus","filterTicketNum","currDate","Date","ticketDate","getDate","ticketMonth","getMonth","ticketYear","getFullYear","generateDemandSlip","demandSlipData","updateDemandSlip","updatedData","_ref2","ticketNumber","orderData","pendingOrderList","partialOrderList","failedOrderList","fulfilledOrderList","newDemandSlip","updatedDataFlag","arguments","undefined","orderSlice","resetOrders","resetAfterNewDemandSlip","filter","order","store","configureStore","reducer","authReducer","productReducer","template","templateReducer","users","usersReducer","orders","ordersReducer","Navbar","navigate","useNavigate","useDispatch","useSelector","_jsxs","className","style","justifyContent","children","_jsx","BiMenu","onClick","BiLogOut","CopyForm","formData","setFormData","useState","excDeliveryCharges","onChange","e","prevState","target","value","_Fragment","onSubmit","preventDefault","type","id","placeholder","autoComplete","htmlFor","QuickRes","successPopup","setSuccessPopup","ResponseList","text","index","copyText","navigator","clipboard","writeText","setTimeout","AnimatePresence","motion","div","initial","opacity","animate","exit","transition","duration","Dropdown","dataList","passItemCode","boxRef","useRef","isActive","setIsActive","selectedItem","setSelectedItem","useEffect","handler","event","current","contains","document","addEventListener","removeEventListener","ref","saveFile","handleItemClick","Loader","Products","showSKUFlag","setShowSKUFlag","prodNavFlag","setProdNavFlag","searchInput","setSearchInput","setItemData","skuData","setSKUData","onSKUChange","debouncedResults","debouce","cancel","width","fontWeight","AiOutlineSearch","alert","backgroundColor","_Object$keys","handleProductClick","compatibleModels","i","keys","k","useAuth","isManager","isAdmin","isEmployee","decoded","jwtDecode","UserInfo","includes","Landing","pathname","path","handleNavigation","ProductForm","initialValue","setFlag","qty","updatedMetaData","setUpdatedMetaData","updatedModels","setUpdatedModels","onMetaDataChange","padding","border","display","flexDirection","model","onModelItemChange","modelList","splice","handleItemDelete","AiOutlineClose","handleAddItem","AiOutlinePlus","alignItems","field","React","Fragment","Product","params","useParams","editFlag","setEditFlag","filteredProduct","FiEdit2","NotFound","LoginForm","password","showPasswordFlag","setShowPasswordFlag","Login","LoginAgainModal","UserForm","_id","firstname","lastname","active","checkList","setCheckList","handleRoles","marginBottom","Array","isArray","defaultChecked","UserCard","_info$roles","info","role","Users","Footer","QuickProdSearchForm","_newDemandSlip$ordere","setToggleFlag","passNextFlag","newDSFlag","setNewDSFlag","deliveryPartnerName","distributorName","orderedProductList","quantity","updatedOrderList","setUpdatedOrderList","onOrderItemChange","orderList","orderItem","numValue","date","emptyOrderListObj","orderInfo","marginRight","alignSelf","newItem","addItemfromSearch","UserDropdown","passUsername","FaAngleDown","user","DemandSlipCard","_info$orderedProductL","partialFlag","statusColour","setStatusColour","createdTimeString","createdAt","updatedTimeString","updatedAt","totalCost","_info$recievedProduct","recievedProductList","UpdateOrderForm","allQtyZeroBool","noQtyChangeBool","updatedInfo","onRecievedListChange","tempList","intInputValue","parseInt","tempItem","justifySelf","DemandSlipEditCard","pdfBodyData","handlePDFGenerate","doc","jsPDF","setProperties","title","autoTable","startY","margin","left","top","rowPageBreak","tableWidth","theme","headStyles","halign","columnStyles","cellWidth","head","body","pageCount","internal","getNumberOfPages","setFont","setPage","setFontSize","pageSize","align","String","height","addHeaderAndFooter","output","filename","save","AllOrderPagination","isLoaded","pendingPageFlag","dots","currentPage","setCurrentPage","lastIndex","firstIndex","displayDataList","numPages","Math","ceil","nums","paginationArray","setPaginationArray","handlePrevClick","handleNextClick","handleCurrentClick","pageNum","leftPageNumArray","from","middlePageNumArray","rightPageNumArray","FaAngleLeft","fontSize","number","color","FaAngleRight","key","gridColumn","DemandSlip","dateInputRef","usernameList","createFlag","setCreateFlag","allFlag","setAllFlag","pendingFlag","setPendingFlag","fulfilledFlag","setFulfilledFlag","failedFlag","setFailedFlag","setPartialFlag","legendFlag","setLegendFlag","setFilterParams","rawDate","filterUsername","setFilterUsername","handleLegendClick","handleDateFilter","rawData","inputYear","inputMonth","fD","App","HashRouter","Routes","Route","element","container","getElementById","createRoot","render","StrictMode","Provider"],"mappings":"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","file":"static/js/main.b1c2ab56.chunk.js","sourcesContent":["\n// Form Submit\nconst formSubmit = (formRes) => {\n    let returnData = {}\n    if(formRes.customer_name===null \n        || formRes.pricePerUnit===null \n        || formRes.unit===null){\n        returnData = {\n            customer_name:\"\",\n            pricePerUnit:\"\",\n            unit:\"\"\n        }\n    }else{\n        returnData = formRes\n    }\n\n    return returnData\n  }\n\n  const templateService = {\n    formSubmit,\n    \n  }\n  \n  export default templateService","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport templateService from './templateService'\n\nconst initialState = {\n    formResponseData: {\n        customer_name:\"\",\n        pricePerUnit:\"\",\n        pricePerUnitOE:\"\",\n        excDeliveryCharge:\"\",\n        unit:\"\",\n        product:'',\n    },\n    responseTemplate:[{}],\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: '',\n  }\n\n\n// Form Response Submit\nexport const formResponseSubmit = createAsyncThunk(\n    'formSubmit',\n    async(formResponse, thunkAPI) =>{\n        try {\n            return await templateService.formSubmit(formResponse)\n        } catch (error) {\n            const message =\n            (error.response && error.response.data && error.response.data.message) ||\n            error.message ||\n            error.toString()\n        return thunkAPI.rejectWithValue(message) \n        }\n    }\n) \n\nexport const templateSlice = createSlice({\n    name: 'template',\n    initialState,\n    reducers: {\n      resetTemplate: (state) => initialState\n    },\n    extraReducers: (builder) => {\n      builder\n      //form response submit\n        .addCase(formResponseSubmit.pending, (state) => {\n          state.isLoading = true\n        })\n        .addCase(formResponseSubmit.fulfilled, (state, action) => {\n          state.isLoading = false\n          state.isSuccess = true\n          state.formResponseData = action.payload\n        })\n        .addCase(formResponseSubmit.rejected, (state, action) => {\n          state.isLoading = false\n          state.isError = true\n          state.message = action.payload\n          state.formResponseSubmit = null\n        })\n    },\n})\n\nexport const { resetTemplate } = templateSlice.actions\nexport default templateSlice.reducer","import axios from 'axios'\n\n// const prod_URI = 'https://api.dinmotoindia.com/api/prod/'\nconst main_URI = process.env.REACT_APP_LOCAL_URI \n                  || `https://api.dinmotoindia.com/api/`\n\nconst prod_URI = main_URI+'prod/'\n\n// Convert Product CSV Data to JSON Data\nconst createProductDataJSON = (csvFileData) => {\n    var returnData = []\n    if(csvFileData.length===0){\n        returnData=[]\n        console.log(`Error`)\n    }else{\n        returnData = \n        csvFileData.map((prod)=>{\n          var sku=\"\"\n          var metaData = []\n\n          const cleanedIC = prod.itemCode.toUpperCase()\n          const iC = cleanedIC.replace(/ /g,'')\n          // const iC = cleanedIC.split(\" \").join(\"\")\n          \n          let cleanedVM =\"\"\n          const spaceRemovedVM = prod.vehicleModel.replace(/ /g,\"\")\n\n          const delimitedVM = spaceRemovedVM.split('-',2)\n          if(delimitedVM.length>1){\n            cleanedVM = delimitedVM[0].slice(0,3)+delimitedVM[1]\n          }else{\n            cleanedVM = delimitedVM[0].slice(0,3)\n          }\n          const vM = cleanedVM.toUpperCase()\n\n          const spaceRemovedBC = prod.brandCompany.replace(/ /g,\"\")\n          const cleanedBC = spaceRemovedBC.slice(0,3)\n          const bC = cleanedBC.toUpperCase()\n\n          const spaceRemovedPN = prod.partNum.replace(/ /g,\"\")\n          const cleanedPN = spaceRemovedPN.split(\"-\").join(\"\")\n          const pN = cleanedPN.toUpperCase()\n\n          const delimitedCM = prod.compatibileModels.split(',')\n\n          sku = iC+\"-\"+vM+\"-\"+bC+\"-\"+pN\n\n          const prodClone = Object.assign({},prod)\n          delete prodClone.itemCode\n          delete prodClone.vehicleModel\n          delete prodClone.brandCompany\n          delete prodClone.partNum\n          delete prodClone.mrp\n          delete prodClone.compatibileModels\n\n          metaData = prodClone\n\n          return {\n            itemCode: iC,\n            vehicleModel: spaceRemovedVM,\n            brandCompany: spaceRemovedBC,\n            partNum: spaceRemovedPN,\n            mrp: prod.mrp.replace(/ /g,\"\"),\n            sku: sku,\n            compatibileModels: delimitedCM,\n            metaData: metaData\n          }\n        })\n    }\n\n    return returnData\n  }\n\n  // Get Products\n  const getProducts = async (itemData) => {\n    const response = await axios.get(prod_URI + `${itemData.itemCode}`)\n    // if(response.data){\n    //   localStorage.setItem('productData', JSON.stringify(response.data))\n    // }\n    return response.data\n  } \n\n  // Search Products\n  const searchProducts = async (searchKey) => {\n    const response = await axios.get(prod_URI +`search/${searchKey}`)\n\n    const res = response.data.map((item)=>{\n      var productFullName = item.productName+\" \"+item.vehicleModel+\" \"+item.brandCompany+\" \"+item.partNum\n      return {...item, productFullName:productFullName} \n    })\n\n    return res\n  } \n\n  // Search Products\n  const searchSKUProducts = async (itemData,skuOnlyFlag) => {\n    const response = await axios.post(prod_URI +`search/sku/${skuOnlyFlag}`, itemData)\n    const res = response.data.map((item)=>{\n      var productFullName = item.productName+\" \"+item.vehicleModel+\" \"+item.brandCompany+\" \"+item.partNum\n      return {...item, productFullName:productFullName} \n    })\n    // console.log(JSON.stringify(res,null,4))\n    return res\n  } \n\n  // Update Products\n  const updateProduct = async ({itemData,token}) => {\n    const config = {\n      headers: {\n          Authorization: `Bearer ${token}`\n      }\n    }\n\n    // console.log(`itemData SKU:${itemData.sku}`)\n    // console.log(`itemData prodInfo:${JSON.stringify(itemData.prodInfo,null,4)}`)\n\n    const response = await axios.patch(prod_URI +`${itemData.sku}`, itemData.prodInfo, config)\n\n    return response.data\n    // return itemData.sku\n  } \n\n  const productService = {\n    createProductDataJSON,  \n    getProducts,\n    searchProducts,\n    searchSKUProducts,\n    updateProduct\n  }\n  \n  export default productService","import axios from 'axios'\n\n// Live URI\n// const auth_URI = 'https://api.dinmotoindia.com/api/auth/'\n\n// Local URI\nconst main_URI = process.env.REACT_APP_LOCAL_URI \n                  || `https://api.dinmotoindia.com/api/`\n\nconst auth_URI = main_URI+'auth/'\n\n// Polling Function to check for Validity of Access Token\nconst healthCheck = async(token)=> {\n    const config = {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n      }\n    const response = await axios.get(auth_URI, config)\n    return response.data\n}\n\n// Set User Credentials from Access Token\nconst setUserCredentials = async (userData) => {\n    const response = await axios.post(auth_URI, userData)\n    if(response.data){\n        sessionStorage.setItem('token', JSON.stringify(response.data))\n    }\n    // console.log(`response:${JSON.stringify(response.data,null,4)}`)\n    return response.data\n}\n\n// Refresh Token\nconst refreshToken= async ()=>{\n    const response = await axios.get(auth_URI+\"refresh\")\n    return response\n}\n\n// Logout User\nconst logoutUser = () => {\n    sessionStorage.removeItem('token')\n}\n\nconst authService = {\n    healthCheck,\n    setUserCredentials,\n    refreshToken,\n    logoutUser,\n  }\n  \n  export default authService","import axios from 'axios'\n\n// const users_URI = 'https://api.dinmotoindia.com/api/users/'\n// const users_URI = 'http://localhost:5000/api/users/'\n\nconst main_URI = process.env.REACT_APP_LOCAL_URI \n                  || `https://api.dinmotoindia.com/api/`\n\nconst users_URI = main_URI+'users/'\n\nconst getAllUsers = async(token)=>{\n  const config = {\n    headers: {\n        Authorization: `Bearer ${token}`\n    }\n  }\n  const response = await axios.get(users_URI, config)\n  // console.log(`uri=${users_URI}`)\n\n  return response.data\n}\n\nconst updateUser = async({userInfo, token})=>{\n  const config = {\n    headers: {\n        Authorization: `Bearer ${token}`\n    }\n  }\n  \n  const response = await axios.patch(users_URI, userInfo, config)\n\n  return response.data\n} \n\nconst usersService = {\n    getAllUsers,\n    updateUser,\n  }\n  \nexport default usersService","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport usersService from './usersService'\nimport { refreshToken } from '../auth/authSlice'\n\nconst initialState = {\n    usersList: [],\n    isSuccess: false,\n    isError: false,\n    isLoading: false,\n    message: '',\n  }\n\nexport const getAllUsers = createAsyncThunk(\n    'users/getAllUsers',\n    async(_, thunkAPI) =>{\n        try {\n          try {\n            \n            const token = thunkAPI.getState().auth.token\n            return await usersService.getAllUsers(token) \n\n          } catch (err) {\n            \n            if(err.response.status === 403){\n              await thunkAPI.dispatch(refreshToken())\n\n              const token = thunkAPI.getState().auth.token\n              return await usersService.getAllUsers(token) \n            }\n          }\n        } catch (error) {\n            const message = (error.response && error.response.data && error.response.data.message) \n            || error.message || error.toString()\n\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)  \n\nexport const updateUser = createAsyncThunk(\n  'users/updateUser',\n  async(userInfo,thunkAPI)=>{\n    try {\n\n      try {  \n        const token = thunkAPI.getState().auth.token\n        return await usersService.updateUser({userInfo,token}) \n\n      } catch (err) {\n        \n        if(err.response.status === 403){\n          await thunkAPI.dispatch(refreshToken())\n          const token = thunkAPI.getState().auth.token\n          return await usersService.updateUser({userInfo,token}) \n        }\n      }\n    } catch (error) {\n      const message = (error.response && error.response.data && error.response.data.message) \n      || error.message || error.toString()\n\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n) \n\nexport const usersSlice = createSlice({\n    name: 'users',\n    initialState,\n    reducers: {\n      resetUser: (state) => initialState\n    },\n    extraReducers: (builder) => {\n      builder\n      // Get All Listed Users\n      .addCase(getAllUsers.pending, (state) => {\n        state.isError = false\n        state.isSuccess = false\n        state.message = \"\"\n        state.isLoading = true\n      })\n      .addCase(getAllUsers.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.usersList = action.payload\n        state.message = \"\"\n      })\n      .addCase(getAllUsers.rejected, (state, action) => {\n        state.usersList = []\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Update User Data\n      .addCase(updateUser.pending, (state) => {\n        state.isError = false\n        state.isSuccess = false\n        state.message = \"\"\n        state.isLoading = true\n      })\n      .addCase(updateUser.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.message = action.payload.message\n      })\n      .addCase(updateUser.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n    }\n})\n\nexport const { resetUser } = usersSlice.actions\nexport default usersSlice.reducer","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport authService from './authService'\nimport { resetUser } from '../users/usersSlice'\nimport { resetProducts } from '../products/productSlice'\n\n// Get user from sessionStorage\nconst token = JSON.parse(sessionStorage.getItem('token'))?.accessToken\n\n// Access Token : {UserInfo: \"username\":username, \"roles\":[roles]}\n\nconst initialState = {\n  token: token?token:null, // Access Token\n  username:\"\",\n  roles:[],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: '',\n}\n\nexport const healthCheck= createAsyncThunk(\n  'auth/healthCheck',\n  async(_,thunkAPI)=>{\n    try {\n        const accessToken = thunkAPI.getState().auth.token ? thunkAPI.getState().auth.token : null;\n        return await authService.healthCheck(accessToken)\n    } catch (error) {\n      const message = (error.response && error.response.data \n        && error.response.data.message) \n        || error.message || error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\nexport const setUserCredentials = createAsyncThunk(\n  'auth/setUserCredentials',\n  async(userData, thunkAPI) =>{\n      try {\n        const response = await authService.setUserCredentials(userData)\n        return response\n      } catch (error) {\n          const message = (error.response && error.response.data \n            && error.response.data.message) \n            || error.message || error.toString()\n            return thunkAPI.rejectWithValue(message)\n      }\n  }\n)  \n\nexport const refreshToken = createAsyncThunk(\n  'auth/refreshToken',\n  async(_,thunkAPI)=>{\n    try {\n      const accessToken = thunkAPI.getState().auth.token\n      const res = await authService.healthCheck(accessToken)\n\n      console.log(`res status:${JSON.stringify(res)}`)\n      \n      return res\n    } catch (error) {\n      \n      const errorStatus =  error.response.status\n      \n      if(errorStatus === 403){\n        try {\n          const refreshResult = await authService.refreshToken()\n          // console.log(`refreshSuccess:${JSON.stringify(refreshResult.data,null,4)}`)\n          return refreshResult?.data\n        } catch (err) {\n          const errStatus = err.response.status\n\n          if(errStatus){\n            const message = (err.response && err.response.data \n              && err.response.data.message) \n              || err.message || err.toString()\n\n            await thunkAPI.dispatch(logOutUser())\n\n            return thunkAPI.rejectWithValue(message)\n          }\n        }\n      }\n\n      console.log(`Error Status type: ${typeof errorStatus}`)\n    }\n  }\n  )\n\nexport const logOutUser = createAsyncThunk(\n  'auth/logOutUser',\n  async(_, thunkAPI) =>{\n      try {\n          thunkAPI.dispatch(resetUser())\n          thunkAPI.dispatch(resetProducts())\n          return authService.logoutUser()\n      } catch (error) {\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n\n        return thunkAPI.rejectWithValue(message)\n    }\n  }\n)  \n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    resetAuth: (state) => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      // Health Check\n      .addCase(healthCheck.pending, (state) => {\n        state.isError = false\n        state.isSuccess = false\n        state.isLoading = true\n      })\n      .addCase(healthCheck.fulfilled, (state, action) => {\n        state.verified = action.payload.verified\n        state.isLoading = false\n      })\n      .addCase(healthCheck.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Set User Credentials from Verified Access Token\n      .addCase(setUserCredentials.pending, (state) => {\n        state.isError = false\n        state.isSuccess = false\n        state.isLoading = true\n      })\n      .addCase(setUserCredentials.fulfilled, (state, action) => {\n        state.token = action.payload.accessToken\n        state.isLoading = false\n        state.isSuccess = true\n      })\n      .addCase(setUserCredentials.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Refresh Access Token\n      .addCase(refreshToken.pending, (state) => {\n        state.isError = false\n        state.isSuccess = false\n        state.isLoading = true\n        state.message = \"\"\n      })\n      .addCase(refreshToken.fulfilled, (state, action) => {\n        if(action.payload.accessToken){\n          state.token = action.payload.accessToken\n          sessionStorage.setItem('token', JSON.stringify(action.payload))\n        }\n        // console.log(`Success Paylod: ${JSON.stringify(action.payload,null,4)}`)\n        state.isLoading = false\n        state.isSuccess = true\n      })\n      .addCase(refreshToken.rejected, (state, action) => {\n        if(action.payload.accessToken){\n          state.token=action.payload.accessToken\n        }\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      //Logout User\n      .addCase(logOutUser.fulfilled, (state, action) => {\n        state.isError = false\n        state.isLoading = false\n        state.isSuccess = false\n        state.token = null\n        state.message = \"\"\n      })\n  }\n})\n\nexport const { resetAuth } = authSlice.actions\nexport default authSlice.reducer","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport productService from './productService'\nimport { refreshToken } from '../auth/authSlice'\n\n// Get user from localStorage\n// const productData = JSON.parse(localStorage.getItem('productData'))\n\nconst initialState = {\n    prodCodeList:[{\n      productName:\"Air-Filter\",\n      itemCode:\"ARF\",\n    },  \n    {\n      productName:\"Ball-Racer\",\n      itemCode:\"RSR\",\n    },\n    {\n      productName:\"Bendex\",\n      itemCode:\"BDX\",\n    },\n    {\n      productName:\"Brake-Shoe\",\n      itemCode:\"BSH\",\n    },\n    {\n      productName:\"Disc-Pad\",\n      itemCode:\"DPD\",\n    },\n    {\n      productName:\"Foot-Rest\",\n      itemCode:\"FTR\",\n    },\n    {\n      productName:\"Main-Stand\",\n      itemCode:\"MSN\",\n    },\n    {\n      productName:\"Mobil-Filter\",\n      itemCode:\"MOF\",\n    },\n    {\n      productName:\"Shocker\",\n      itemCode:\"SKR\",\n    },\n    \n    {\n      productName:\"Side-Stand\",\n      itemCode:\"SSN\",\n    },\n    {\n      productName:\"Accelerator-Cable\",\n      itemCode:\"ACC\",\n    },\n    {\n      productName:\"Clutch-Asssembly\",\n      itemCode:\"CFA\",\n    },\n    {\n      productName:\"CAM-SHAFT\",\n      itemCode:\"CMA\"\n    },\n    {\n      productName:\"CDI\",\n      itemCode:\"CDI\"\n    },\n    {\n      productName:\"Clutch-Cable\",\n      itemCode:\"CCC\"\n    },\n    {\n      productName:\"Mirror\",\n      itemCode:\"RVM\"\n    },\n    {\n      productName:\"Rocker\",\n      itemCode:\"RKR\"\n    },\n    {\n      productName:\"Self-Cut\",\n      itemCode:\"SFR\"\n    },\n    {\n      productName:\"Timing-Chain\",\n      itemCode:\"TCH\"\n    },\n    {\n      productName:\"Timing-Chain-Adjuster\",\n      itemCode:\"TCT\"\n    },\n    ],\n    productData: [],\n    productSKUData:[],\n    noMatch: false,\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: '',\n  }\n\n\n// Form Response Submit\nexport const createProductDataJSON = createAsyncThunk(\n    'createProductDataJSON',\n    async(csvFileData, thunkAPI) =>{\n        try {\n            return await productService.createProductDataJSON(csvFileData)\n        } catch (error) {\n            const message =\n            (error.response && error.response.data && error.response.data.message) ||\n            error.message ||\n            error.toString()\n        return thunkAPI.rejectWithValue(message) \n        }\n    }\n) \n\n// Get Products\nexport const getProducts = createAsyncThunk(\n  'prod/getProducts',\n  async(itemData, thunkAPI)=>{\n    try {\n      return await productService.getProducts(itemData)\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message) \n    }\n  }\n)\n\n// Search Products\nexport const searchProducts = createAsyncThunk(\n  'prod/searchProducts',\n  async(searchKey, thunkAPI)=>{\n    try {\n      return await productService.searchProducts(searchKey)\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message) \n    }\n  }\n)\n\n// Search by SKU\nexport const searchSKUProducts = createAsyncThunk(\n  'prod/searchSKUProducts',\n  async(itemData, thunkAPI)=>{\n    try {\n      return await productService.searchSKUProducts(itemData,itemData.skuOnlyFlag)\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message) \n    }\n  }\n)\n\n// Search by SKU\nexport const searchSKUProductsOnly = createAsyncThunk(\n  'prod/searchSKUProductsOnly',\n  async(itemData, thunkAPI)=>{\n    try {\n      return await productService.searchSKUProducts(itemData,itemData.skuOnlyFlag)\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message) \n    }\n  }\n)\n\n// Update Product Data\nexport const updateProduct = createAsyncThunk(\n  'prod/updateProduct',\n  async(itemData, thunkAPI)=>{\n    try { \n      try {\n            \n        const token = thunkAPI.getState().auth.token\n        return await productService.updateProduct({itemData,token})\n\n      } catch (err) {\n        \n        if(err.response.status === 403){\n          await thunkAPI.dispatch(refreshToken())\n\n          const token = thunkAPI.getState().auth.token\n          return await productService.updateProduct({itemData,token}) \n        }\n      }\n        \n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message) \n    }\n  }\n)\n\nexport const productSlice = createSlice({\n    name: 'products',\n    initialState,\n    reducers: {\n      resetProducts: (state) => initialState,\n      resetSearchProducts: (state)=>({...state,\n        productSKUData:[],\n        noMatch: false,\n      })\n    },\n    extraReducers: (builder) => {\n      builder\n      // Convert Product CSV Data to JSON Data //////\n        .addCase(createProductDataJSON.pending, (state) => {\n          state.isLoading = true\n          state.productSKUData=[]\n          state.noMatch = false\n        })\n        .addCase(createProductDataJSON.fulfilled, (state, action) => {\n          state.isLoading = false\n          state.isSuccess = true\n          state.productData = action.payload\n        })\n        .addCase(createProductDataJSON.rejected, (state, action) => {\n          state.isLoading = false\n          state.isError = true\n          state.message = action.payload\n        })\n\n      // Get products /////////////////////////////\n      .addCase(getProducts.pending, (state) => {\n        state.isLoading = true\n        state.productSKUData=[]\n        state.message = \"\"\n        state.noMatch = false\n      })\n      .addCase(getProducts.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.productData = action.payload\n        if(action.payload.length===0){\n          state.noMatch = true\n        }\n      })\n      .addCase(getProducts.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Search Products /////////////////////////////\n      .addCase(searchProducts.pending, (state) => {\n        state.isLoading = true\n        state.productSKUData=[]\n        state.message = \"\"\n        state.noMatch = false\n      })\n      .addCase(searchProducts.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.productData = action.payload\n        if(action.payload.length===0){\n          state.noMatch = true\n        }\n      })\n      .addCase(searchProducts.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Search SKU Products /////////////////////////////\n      .addCase(searchSKUProducts.pending, (state) => {\n        state.isLoading = true\n        state.productSKUData=[]\n        state.message = \"\"\n        state.noMatch = false\n      })\n      .addCase(searchSKUProducts.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.productData = action.payload\n        if(action.payload.length===0){\n          state.noMatch = true\n        }\n      })\n      .addCase(searchSKUProducts.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Search SKU Products SKU only /////////////////////////////\n      .addCase(searchSKUProductsOnly.pending, (state) => {\n        state.isLoading = true\n        state.productSKUData=[]\n        state.message = \"\"\n        state.noMatch = false\n      })\n      .addCase(searchSKUProductsOnly.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.productSKUData = action.payload\n        if(action.payload.length===0){\n          state.noMatch = true\n        }\n      })\n      .addCase(searchSKUProductsOnly.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Update Product Data /////////////////////////////\n      .addCase(updateProduct.pending, (state) => {\n        state.isLoading = true\n        state.productSKUData=[]\n        state.isError = false\n        state.isSuccess = false\n        state.noMatch = false\n        state.message = \"\"\n      })\n      .addCase(updateProduct.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.message = action.payload.message\n      })\n      .addCase(updateProduct.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n    },\n})\n\nexport const { resetProducts,\n               resetSearchProducts } = productSlice.actions\nexport default productSlice.reducer","import axios from 'axios'\n\n// Live URI \n// const order_URI = 'https://api.dinmotoindia.com/api/order/'\n\n// Local URI\nconst main_URI = process.env.REACT_APP_LOCAL_URI \n                  || `https://api.dinmotoindia.com/api/`\n\nconst order_URI = main_URI+'order/'\n\nconst getAllDemandSlips = async(token)=>{\n    const config = {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    }\n\n    const response = await axios.get(order_URI, config)\n    // console.log(`env check:${JSON.stringify(process.env.PRODUCTION_ENV)==='developement'}`)\n    \n    return response.data\n}\n\nconst getFilteredDemandSlips = async(filterParams,token)=>{\n    const config = {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    }\n\n    let response\n    let fullDate // yyyy-mm-dd\n    const accessLevel = filterParams.accessLevel \n    \n    // Employee Level Access\n    if(!accessLevel){\n        let filterQueryString = ''\n\n        const {filterTicketNum} = filterParams\n        \n        let currDate = new Date()\n        let ticketDate = currDate.getDate()\n        let ticketMonth = currDate.getMonth()+1\n        let ticketYear = currDate.getFullYear()\n        \n        if(ticketDate<10){\n            ticketDate = `0${ticketDate}`\n        }\n        \n        if(ticketMonth<10){\n            ticketMonth = `0${ticketMonth}`\n        }\n        \n        fullDate = `${ticketDate}${ticketMonth}${ticketYear}`\n        \n        if(filterTicketNum && filterTicketNum!==''){\n            filterQueryString = filterQueryString+`&ticketNum=${filterTicketNum}`\n        }\n        \n\n        response = await axios.get(order_URI+`filter?date=${fullDate}${filterQueryString}`, config)\n    }\n    // Admin and Managaer Level Access\n    else{   \n\n        // No filter params\n        if(filterParams.length===0){\n            response = await axios.get(order_URI+`filter`, config)\n        }\n        // Minimum one filter param\n        else{\n            let filterQueryString = '?'\n            const {filterDate, \n                filterPublisherUsername, \n                filterStatus,\n                filterTicketNum } = filterParams\n\n            if(filterDate && filterDate!==''){\n                fullDate = filterDate\n                filterQueryString=filterQueryString+`date=${filterDate}`\n            }\n            \n            if(filterPublisherUsername && filterPublisherUsername!==''){\n\n                filterQueryString = filterQueryString[filterQueryString.length-1]==='?'?\n                                    filterQueryString+`publisherUsername=${filterPublisherUsername}`\n                                    :\n                                    filterQueryString+`&publisherUsername=${filterPublisherUsername}`\n            }\n\n            if(filterStatus && filterStatus!==''){\n\n                filterQueryString = filterQueryString[filterQueryString.length-1]==='?'?\n                                    filterQueryString+`status=${filterStatus}`\n                                    :\n                                    filterQueryString+`&status=${filterStatus}`\n            }\n\n            if(filterTicketNum && filterTicketNum!==''){\n\n                filterQueryString = filterQueryString[filterQueryString.length-1]==='?'?\n                                    filterQueryString+`ticketNum=${filterTicketNum}`\n                                    :\n                                    filterQueryString+`&ticketNum=${filterTicketNum}`\n            }\n\n            console.log(`fQS: ${order_URI+`filter`+filterQueryString}`)\n\n            response = await axios.get(order_URI+`filter`+filterQueryString, config)\n\n        }\n    }\n    \n    return response.data\n    // if(!filterDate || filterDate===''){\n    //     let currDate = new Date()\n    //     let ticketDate = currDate.getDate()\n    //     let ticketMonth = currDate.getMonth()+1\n    //     let ticketYear = currDate.getFullYear()\n        \n    //     if(ticketDate<10){\n    //         ticketDate = `0${ticketDate}`\n    //     }\n        \n    //     if(ticketMonth<10){\n    //         ticketMonth = `0${ticketMonth}`\n    //     }\n        \n    //     fullDate = `${ticketDate}${ticketMonth}${ticketYear}`\n    // }else{\n    // }\n\n    \n}\n\nconst generateDemandSlip = async({demandSlipData, token})=>{\n    const config = {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    }\n    \n    // API Call\n    const response = await axios.post(order_URI, demandSlipData, config) \n    // console.log(`response:${JSON.stringify(response.data.demandSlipData,null,4)}`)\n    return response.data.demandSlipData\n}\n\n// PATCH /:ticketNumber\nconst updateDemandSlip = async({updatedData, token})=>{\n    const config = {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    }\n    // API Call\n    const response = await axios.patch(order_URI+updatedData.ticketNumber, updatedData, config) \n    // console.log(`response:${JSON.stringify(response.data.demandSlipData,null,4)}`)\n    return response.data\n}\n\nconst orderService = {\n    getAllDemandSlips,\n    getFilteredDemandSlips,\n    generateDemandSlip,\n    updateDemandSlip,\n}\n\nexport default orderService","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport orderService from './orderService'\nimport { refreshToken } from '../auth/authSlice'\n\nconst initialState = {\n    orderData:[],\n    pendingOrderList: [],\n    partialOrderList: [],\n    failedOrderList: [],\n    fulfilledOrderList: [],\n    newDemandSlip:{},\n    updatedDataFlag:false,\n    isLoading:false,\n    isError:false,\n    isSuccess:false,\n    message:\"\"\n}\n\n// Get All Demand Orders\nexport const getAllDemandSlips = createAsyncThunk(\n  'orders/getAllDemandSlips',\n  async(_, thunkAPI)=>{\n    try {\n      try {\n            \n        const token = thunkAPI.getState().auth.token\n        return await orderService.getAllDemandSlips(token)\n\n      } catch (err) {\n        \n        if(err.response.status === 403){\n          await thunkAPI.dispatch(refreshToken())\n\n          const token = thunkAPI.getState().auth.token\n          return await orderService.getAllDemandSlips(token) \n        }\n      }\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\n// Get User and Date Filtered Demand Orders\nexport const getFilteredDemandSlips = createAsyncThunk(\n  'orders/getFilteredDemandSlips',\n  async(filterParams={}, thunkAPI)=>{\n    try {\n      try {\n            \n        const token = thunkAPI.getState().auth.token\n        return await orderService.getFilteredDemandSlips(filterParams,token)\n\n      } catch (err) {\n        \n        if(err.response.status === 403){\n          await thunkAPI.dispatch(refreshToken())\n\n          const token = thunkAPI.getState().auth.token\n          return await orderService.getFilteredDemandSlips(filterParams,token) \n        }\n      }\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\nexport const generateDemandSlip = createAsyncThunk(\n  'orders/generateDemandSlip',\n  async(demandSlipData,thunkAPI)=>{\n    try {\n      try {\n            \n        const token = thunkAPI.getState().auth.token\n        return await orderService.generateDemandSlip({demandSlipData,token})\n        // await thunkAPI.dispatch(getFilteredDemandSlips()) \n\n      } catch (err) {\n        \n        if(err.response.status === 403){\n          await thunkAPI.dispatch(refreshToken())\n\n          const token = thunkAPI.getState().auth.token\n          return await orderService.generateDemandSlip({demandSlipData,token})\n          // await thunkAPI.dispatch(getFilteredDemandSlips()) \n        }\n      }\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\nexport const updateDemandSlip = createAsyncThunk(\n  'orders/updateDemandSlip',\n  async(updatedData,thunkAPI)=>{\n    try {\n      try {\n            \n        const token = thunkAPI.getState().auth.token\n        return await orderService.updateDemandSlip({updatedData,token})\n        // await thunkAPI.dispatch(getFilteredDemandSlips()) \n\n      } catch (err) {\n        \n        if(err.response.status === 403){\n          await thunkAPI.dispatch(refreshToken())\n\n          const token = thunkAPI.getState().auth.token\n          return await orderService.updateDemandSlip({updatedData,token})\n          // await thunkAPI.dispatch(getFilteredDemandSlips()) \n        }\n      }\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\nexport const orderSlice = createSlice({\n    name: 'orders',\n    initialState,\n    reducers: {\n      resetOrders: (state) => initialState,\n      resetAfterNewDemandSlip: (state)=>({...state,\n        isError:false,\n        isLoading:false,\n        updatedDataFlag:false,\n        isSuccess:false,\n        message:\"\"\n      })\n    },\n    extraReducers: (builder) => {\n      builder\n      // Get All Demand Slip Data //////\n        .addCase(getAllDemandSlips.pending, (state) => {\n          state.isLoading = true\n          state.updatedDataFlag=false\n          state.orderData=[]\n          state.pendingOrderList=[]\n          state.partialOrderList=[]\n          state.failedOrderList=[]\n          state.fulfilledOrderList=[]\n        })\n        .addCase(getAllDemandSlips.fulfilled, (state, action) => {\n          state.isLoading = false\n          state.isSuccess = true\n          state.orderData = action.payload\n          state.pendingOrderList = action.payload.filter((order)=>order.status===\"pending\")\n          state.partialOrderList = action.payload.filter((order)=>order.status===\"partial\")\n          state.failedOrderList = action.payload.filter((order)=>order.status===\"failed\")\n          state.fulfilledOrderList = action.payload.filter((order)=>order.status===\"fulfilled\")\n        \n        })\n        .addCase(getAllDemandSlips.rejected, (state, action) => {\n          state.isLoading = false\n          state.isError = true\n          state.message = action.payload\n        })\n      \n      // Get User and Date Filtered Demand Slip Data //////\n        .addCase(getFilteredDemandSlips.pending, (state) => {\n          state.isLoading = true\n          state.updatedDataFlag=false\n          state.orderData=[]\n          state.pendingOrderList=[]\n          state.partialOrderList=[]\n          state.failedOrderList=[]\n          state.fulfilledOrderList=[]\n        })\n        .addCase(getFilteredDemandSlips.fulfilled, (state, action) => {\n          state.isLoading = false\n          state.isSuccess = true\n          state.orderData = action.payload\n          state.pendingOrderList = action.payload.filter((order)=>order.status===\"pending\")\n          state.partialOrderList = action.payload.filter((order)=>order.status===\"partial\")\n          state.failedOrderList = action.payload.filter((order)=>order.status===\"failed\")\n          state.fulfilledOrderList = action.payload.filter((order)=>order.status===\"fulfilled\")\n        })\n        .addCase(getFilteredDemandSlips.rejected, (state, action) => {\n          state.isLoading = false\n          state.isError = true\n          state.message = action.payload\n        })\n\n      // Generate New Demand Slip //////\n        .addCase(generateDemandSlip.pending, (state) => {\n          state.isLoading = true\n          state.updatedDataFlag=false\n          state.isSuccess = false\n          state.isError = false\n          state.newDemandSlip = {}\n          // state.orderData=[]\n        })\n        .addCase(generateDemandSlip.fulfilled, (state, action) => {\n          state.isLoading = false\n          state.isError = false\n          state.isSuccess = true\n          state.newDemandSlip = action.payload\n          state.message = `New Demand Reciept ${action.payload.ticketNumber} created`\n        })\n        .addCase(generateDemandSlip.rejected, (state, action) => {\n          state.isLoading = false\n          state.isSuccess = false\n          state.isError = true\n          state.message = action.payload\n        })\n\n      // Update Demand Slip Data //////\n        .addCase(updateDemandSlip.pending, (state) => {\n          state.isLoading = true\n          state.updatedDataFlag=false\n        })\n        .addCase(updateDemandSlip.fulfilled, (state, action) => {\n          state.isLoading = false\n          state.isSuccess = true\n          state.updatedDataFlag=true\n          state.message = action.payload\n        })\n        .addCase(updateDemandSlip.rejected, (state, action) => {\n          state.isLoading = false\n          state.isError = true\n          state.message = action.payload\n        })\n    }\n})\n\nexport const { resetOrders,\n              resetAfterNewDemandSlip } = orderSlice.actions\nexport default orderSlice.reducer","import { configureStore } from '@reduxjs/toolkit';\nimport templateReducer from '../features/template/templateSlice'\nimport productReducer from \"../features/products/productSlice\"\nimport authReducer from \"../features/auth/authSlice\"\nimport usersReducer from \"../features/users/usersSlice\"\nimport ordersReducer from \"../features/orders/orderSlice\"\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    product: productReducer,\n    template: templateReducer,\n    users: usersReducer,\n    orders: ordersReducer,\n  },\n});\n","import { useDispatch, useSelector } from \"react-redux\"\nimport { useNavigate } from 'react-router-dom'\nimport { BiLogOut, BiMenu } from \"react-icons/bi\"\nimport { logOutUser } from '../../features/auth/authSlice';\n\nimport \"./Navbar.css\"\nimport { useState } from \"react\";\n\nfunction Navbar() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch()\n\n  const {token} = useSelector((state)=>state.auth)\n\n  // const {prodCodeList}=useSelector((state)=>state.product)\n\n  // const [legendFlag, setLegendFlag] = useState(false)\n\n  const handleClick=()=>{\n    navigate(\"/\")\n  }\n\n  const handleLogout=()=>{\n    dispatch(logOutUser())\n    navigate(\"/login\")\n  }\n\n  // const handleMenu=()=>{\n  //   setLegendFlag(!legendFlag)\n  // }\n\n  return (\n    <div className='navbar-container' style={token?{}:{justifyContent:`center`}}> \n        {token && <div className='menu-btn'><BiMenu /></div>}\n        <h1 onClick={()=>handleClick()}>Din</h1>\n        {token && <div className='logout-btn' onClick={()=>handleLogout()}> <BiLogOut/></div>}\n    </div>\n  )\n}\n\nexport default Navbar","import React, { useState } from 'react'\nimport { useDispatch } from \"react-redux\"\nimport {formResponseSubmit} from \"../../features/template/templateSlice\"\nimport \"./Form.css\"\n\nfunction CopyForm() {\n    const dispatch = useDispatch(); \n\n    const [formData, setFormData] = useState({\n        customer_name:'',\n        pricePerUnit:'',\n        pricePerUnitOE:'',\n        unit:'',\n        product:'',\n    })\n\n    const {customer_name, pricePerUnit, pricePerUnitOE, excDeliveryCharges, unit, product} = formData\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n\n    const onChange=(e)=>{\n        setFormData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        if(customer_name===null || pricePerUnit===null || unit===null){\n            console.log(`Please enter valid data`)\n        }else{\n            dispatch(formResponseSubmit({\n                customer_name,\n                pricePerUnit,\n                pricePerUnitOE,\n                excDeliveryCharges,\n                unit,\n                product\n            }))\n        }\n    }\n\n  return (\n    <>\n        <div className='form-container left-border-form'>\n        <form onSubmit={onSubmit}>\n\n            <div className=\"form-grid\">\n                <div className=\"form-group\">\n                    <label>Name *</label>\n                    <input type=\"text\" \n                        className='form-control'\n                        name= 'customer_name'\n                        id='customer_name'\n                        value = {customer_name}\n                        placeholder=\"Customer's name\"\n                        autoComplete='off'\n                        onChange={onChange} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Price Per Unit *</label>\n                    <input type=\"text\" \n                        className='form-control'\n                        name= 'pricePerUnit'\n                        id='pricePerUnit'\n                        value = {pricePerUnit}\n                        placeholder='Price Per Unit'\n                        onChange={onChange}\n                        // onKeyPress={(e) => !/[0-9, ]/.test(e.key) && e.preventDefault()} \n                        />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Price Per Unit #2</label>\n                    <input type=\"text\" \n                        className='form-control'\n                        name= 'pricePerUnitOE'\n                        id='pricePerUnitOE'\n                        value = {pricePerUnitOE}\n                        placeholder='Alternate Price Per Unit'\n                        onChange={onChange}\n                        // onKeyPress={(e) => !/[0-9, ]/.test(e.key) && e.preventDefault()} \n                        />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Excluding Delivery Charges</label>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"excDeliveryCharges\" \n                            id=\"true\" \n                            value=\"true\"\n                            onChange={onChange} />\n                        <label htmlFor=\"true\">Yes</label>\n                        </div>\n                    </div>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"excDeliveryCharges\" \n                            id=\"false\" \n                            value=\"false\"\n                            onChange={onChange} />\n                        <label htmlFor=\"false\">No</label>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"form-group \">\n                    <label>Unit *</label>\n                    \n                    <div className='radio-group'>\n                    <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"unit\" \n                            id=\"piece\" \n                            value=\"piece\"\n                            onChange={onChange} />\n                        <label htmlFor=\"piece\">Piece</label>\n                    </div>\n\n                    <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"unit\" \n                            id=\"set\" \n                            value=\"set\"\n                            onChange={onChange} />\n                        <label htmlFor=\"set\">Set</label>\n                    </div>\n\n                    <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"unit\" \n                            id=\"litre\" \n                            value=\"litre\"\n                            onChange={onChange} />\n                        <label htmlFor=\"litre\">Litre</label>\n                    </div>\n\n                    <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"unit\" \n                            id=\"mL\" \n                            value=\"mL\"\n                            onChange={onChange} />\n                        <label htmlFor=\"mL\">mL</label>\n                    </div>\n\n                    \n                    </div>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Product</label>\n                    <input type=\"text\" \n                        className='form-control'\n                        name= 'product'\n                        id='product'\n                        value = {product}\n                        placeholder='Product'\n                        onChange={onChange}\n                        />\n                </div>\n            </div>\n\n\n            <div className=\"form-group\">\n                <button type=\"submit\" className=\"submit-btn\">\n                    Submit\n                </button>\n            </div>\n            {/* <p>* Mandatory Fields</p> */}\n\n        </form>\n        </div>\n    </>\n  )\n}\n\nexport default CopyForm","import { useState } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { AnimatePresence, motion } from \"framer-motion\"\nimport CopyForm from '../../components/Forms/CopyForm'\n\nimport \"./IndiaMartRes.css\"\n\nfunction QuickRes() {\n\n    const {formResponseData} =useSelector(\n        (state)=>state.template\n    )\n    const [successPopup, setSuccessPopup] = useState(false)\n\n    const {customer_name, pricePerUnit, pricePerUnitOE, excDeliveryCharges, unit, product} = formResponseData\n\n    const ResponseList = [{\n        text:`Hi ${customer_name}, thanks for the inquiry.\\n\\nWe can provide ${product===\"\"?`the product`:product} at Rs.${pricePerUnit} per ${unit}${pricePerUnitOE!==\"\"?` and Rs.${pricePerUnitOE} per ${unit}(Original)`:``}${excDeliveryCharges===`true`?\"(excluding shipping charges)\":\"\"}.\\n\\nFor further details you can call us on 9230021058/ 08043818766 (preferred call time 10am to 11am).`\n    },{\n        text:`Hi ${customer_name}, thanks for the inquiry.\\n\\nWe can provide ${product===\"\"?`the product`:product} at Rs.${pricePerUnit} per ${unit}${pricePerUnitOE!==\"\"?` and Rs.${pricePerUnitOE} per ${unit}(Original)`:``}${excDeliveryCharges===`true`?\"(excluding shipping charges)\":\"\"} onwards as per vehicle model. Kindly mention the model/s you are looking for.\\n\\nFor further details you can call us on 9230021058/ 08043818766 (preferred call time 10am to 11am).`\n    },{\n    //     text:`We can deliver ${product===\"\"?`the product`:product} for Rs.${pricePerUnit} per ${unit} ${pricePerUnitOE!==\"\"?`and Rs. ${pricePerUnitOE} per ${unit}`:``}.\\n\\nYou can call us on 08043818766/ 9230021058 (preferred call time between 10am to 11am).`\n    // },{\n        text:`Hi ${customer_name}, thanks for the inquiry but we do not deal in ${product===\"\"?`this product`:product}.\\n\\nFor any further requirements you can call us on 08043818766/ 9230021058 (preferred call time between 10am to 11am).`\n    },{\n        text:`Hi ${customer_name}, thanks for the inquiry but ${product===\"\"?`the product`:product} is currently out of stock.\\n\\nFor any further requirements you can call us on 08043818766/ 9230021058 (preferred call time between 10am to 11am).`\n    },{\n        text:`Hi ${customer_name}, thanks for the inquiry and sorry for our late response.\\n\\nWe can provide ${product===\"\"?`the product`:product} at Rs.${pricePerUnit} per ${unit}${pricePerUnitOE!==\"\"?` and Rs. ${pricePerUnitOE} per ${unit}`:``}.\\n\\nFor further details you can call us on 9230021058/ 08043818766 (preferred call time 10am to 11am).`\n    },{\n        text:`Hi ${customer_name}, thanks for the inquiry and sorry for our late response.\\n\\nWe can provide ${product===\"\"?`the product`:product} at Rs.${pricePerUnit} per ${unit}${pricePerUnitOE!==\"\"?` and Rs. ${pricePerUnitOE} per ${unit}`:``} onwards as per vehicle model. Kindly mention the model/s you are looking for.\\n\\nFor further details you can call us on 9230021058/ 08043818766 (preferred call time 10am to 11am).`\n    },{\n        text:`Hi ${customer_name}, thanks for the inquiry.\\n\\nWe do not supply to your location at the moment.\\n\\nFor any further queries/ inquiries you can call us on 9230021058/ 08043818766 (preferred call time 10am to 11am).`\n    },]\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n    const copyText=(text)=>{\n        navigator.clipboard.writeText(text)\n        setSuccessPopup(false)\n        setTimeout(()=>{\n            setSuccessPopup(true)\n        },100)\n        setTimeout(()=>{\n            setSuccessPopup(false)\n          },2000)\n      }\n\n  return (\n    <div className='quick-res-container'>\n    \n    <CopyForm />\n    \n    <div className='copy-container'>\n\n        {ResponseList.map((item, index)=>\n            <div key={index}\n                className='template-text' \n                onClick={()=>copyText(item.text)}>\n                {item.text}\n            </div>\n        )}\n      </div>\n\n      <AnimatePresence>\n        {successPopup && \n            <motion.div className=\"alert-content\"\n                initial={{opacity:0}} \n                animate={{opacity:1}}\n                exit={{opacity:0}}\n                transition={{duration:0.8}}\n            >\n                Messgae Copied\n            </motion.div>\n        }\n    </AnimatePresence>\n    \n    </div>\n  )\n}\n\nexport default QuickRes","import React, { useEffect, useRef, useState } from 'react'\nimport \"./Dropdown.css\"\n\nfunction Dropdown({dataList, passItemCode}) {\n    const boxRef = useRef(null)\n    \n    const [isActive, setIsActive] = useState(false)\n    const [selectedItem, setSelectedItem] = useState(\"\")\n\n    const handleClick=()=>{\n        setIsActive(!isActive)\n    }\n\n    const handleItemClick=(prod)=>{\n        const data = {\n            saveFile:false,\n            itemCode: prod.itemCode\n        }\n\n        passItemCode(data)\n        setSelectedItem(prod.productName)\n        setIsActive(!isActive)\n    }\n\n    // Modal close\n    useEffect(()=>{\n        let handler = (event) => {\n            if(!boxRef.current.contains(event.target)\n               )\n              {\n                setIsActive(false)\n              }\n        };\n        document.addEventListener(\"mousedown\", handler);\n    \n        return()=>{\n        document.removeEventListener(\"mousedown\",handler);\n        }\n    })\n\n  return (\n    <div className=\"drop-down-container\" ref={boxRef}>\n        <div className=\"drop-down-item selected-drop-down\" onClick={()=>handleClick()}>\n            <p>{selectedItem===\"\"?`Select a Cateogry`:selectedItem}</p>\n        </div>     \n\n        {isActive && \n        <div className=\"drop-down-list-container\">\n            {dataList?.map((item,index)=>\n            <div className=\"drop-down-item\" key={index}\n                onClick={()=>handleItemClick(item)}\n            >\n                <p>{item.productName}</p>\n            </div>\n            )\n            }\n\n        </div>\n        }     \n    </div>\n  )\n}\n\nexport default Dropdown","import React from 'react'\nimport \"./Loader.css\"\n\nfunction Loader() {\n  return (\n    <div className='loader-container'>\n        <div className=\"lds-dual-ring\"></div>\n    </div>\n  )\n}\n\nexport default Loader","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useNavigate } from 'react-router-dom';\nimport { getProducts, searchProducts, resetProducts, searchSKUProducts} from \"../../features/products/productSlice\"\n// import Papa from 'papaparse'\nimport debouce from \"lodash.debounce\";\n\nimport \"./Products.css\"\nimport Dropdown from '../../components/Dropdown/Dropdown';\nimport Loader from '../../components/Loader/Loader';\nimport { logOutUser } from '../../features/auth/authSlice';\n\nimport { AiOutlineSearch } from \"react-icons/ai\"\n\nfunction Products() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const { prodCodeList, productData, noMatch, isLoading } = useSelector(\n    (state)=>state.product\n  )\n\n  const {token, isError} = useSelector((state)=>state.auth)\n\n  const [showSKUFlag, setShowSKUFlag] = useState(false)\n  const [prodNavFlag, setProdNavFlag] = useState(false)\n\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  const [itemData, setItemData] = useState({\n    // saveFile: false,\n    itemCode:\"\"\n  })\n\n  const [skuData, setSKUData] = useState({\n    itemCode:\"\",\n    vehicleModel:\"\",\n    brandCompany:\"\",\n    partNum:\"\",\n    skuOnlyFlag:\"false\"\n  })\n  \n  const { itemCode } = itemData\n\n  /////////////////////////////////////////////////\n  //////// Functions /////////////////////////////\n  ////////////////////////////////////////////////\n\n  const handleProductClick = (sku) =>{\n    if(prodNavFlag){\n      dispatch(resetProducts())\n      navigate(`${sku}`)\n    }\n  }\n\n  const handleSearchChange = (e) => {\n    setSearchInput(e.target.value);\n  }\n\n  const onSKUChange=(e)=>{\n    setSKUData((prevState)=>({\n        ...prevState,\n        [e.target.name]:e.target.value\n    }))\n  }\n\n  // Debounce function\n  const debouncedResults = debouce(handleSearchChange, 800)\n  \n  // Get Products API call \n  const onSubmit=(e)=>{\n    e.preventDefault()\n      \n    if(itemCode===\"\"){\n      alert(`Please enter Item`)\n    }else{\n      setSearchInput(\"\")\n      dispatch(getProducts(itemData))\n    }\n  }\n\n  // Get SKU Products API call \n  const onSKUSubmit=(e)=>{\n    e.preventDefault()\n      \n    if(skuData.itemCode===\"\"){\n      alert(`Please Enter Item Code`)\n    }else{\n      dispatch(searchSKUProducts(skuData))\n    }\n  }\n\n  /////////////////////////////////////////////////\n  //////// Hooks /////////////////////////////////\n  ////////////////////////////////////////////////\n\n  // Logout on Bad Token\n  useEffect(()=>{    \n    if(isError || !token){\n      dispatch(logOutUser())\n      navigate(\"/login\")\n    }\n\n    dispatch(resetProducts())\n  },[])\n\n  // Debounce Search\n  useEffect(() => {\n    return () => {\n      debouncedResults.cancel();\n    };\n  });\n\n  // Search API call\n  useEffect(()=>{\n    if (searchInput!==\"\") {\n      dispatch(searchProducts(searchInput))\n    }\n  },[searchInput])\n\n  return (\n    <>\n    {isLoading && <Loader />}\n    <div className='data-container'>\n      \n      <div className=\"controlbox-container\" >\n        \n        {/* Load Product Controls */}\n        <div className=\"controlbox\" style={{width:\"80%\"}}>\n\n          <label style={{fontWeight:\"bold\"}}>Search</label>\n          <div className=\"search-bar\">\n            <AiOutlineSearch className='search-icon'/>\n            <input\n              type=\"text\"\n              name=\"search\"\n              placeholder=\"Search for Product\"\n              onChange={debouncedResults}\n              autoComplete='off'\n              />\n\n          </div>\n        </div>\n\n        <form onSubmit={onSKUSubmit}>\n\n          <label style={{fontWeight:\"bold\"}}>Search by SKU</label>\n          <div className=\"form-group\">\n                {/* <label htmlFor={`itemCode sku`}>Item Code</label> */}\n                <input type=\"text\" \n                    className='form-control'\n                    name= 'itemCode'\n                    id={`itemCode sku`}\n                    value = {skuData.itemCode}\n                    placeholder=\"Item Code\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n                {/* <label htmlFor={`vehicleModel sku`}>Vehicle Model</label> */}\n                <input type=\"text\" \n                    className='form-control'\n                    name= 'vehicleModel'\n                    id={`vehicleModel sku`}\n                    value = {skuData.vehicleModel}\n                    placeholder=\"Vehicle Model\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n                {/* <label htmlFor={`brandCompany sku`}>Brand Company</label> */}\n                <input type=\"text\" \n                    className='form-control'\n                    name= 'brandCompany'\n                    id={`brandCompany sku`}\n                    value = {skuData.brandCompany}\n                    placeholder=\"Brand Company\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n                {/* <label htmlFor={`partNum sku`}>Part Number</label> */}\n                <input type=\"text\" \n                    className='form-control'\n                    name= 'partNum'\n                    id={`partNum sku`}\n                    value = {skuData.partNum}\n                    placeholder=\"Part Number\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n            <button type=\"submit\" className=\"submit-btn\">\n                Search\n            </button>\n          </div>\n        </form>\n        \n\n        \n        <form onSubmit={onSubmit}>\n        \n        {/* Search Input */}\n\n        <div className=\"controlbox\">\n\n          <div className=\"control-section\">\n            <label>Product Category</label>\n\n            <Dropdown  \n              dataList={prodCodeList} \n              passItemCode={setItemData}\n              />\n          </div>\n\n          <div className=\"form-group\">\n            <button type=\"submit\" className=\"submit-btn\">\n                Search\n            </button>\n          </div>\n\n        </div>\n        </form>\n          \n        {/* On Product Load Controls */}\n        {productData.length>0 &&\n          <div className=\"control-box\">\n          <div className=\"control-section\">\n            \n            <div className=\"control-btn\"\n              style={{backgroundColor:`var(--buttonGreen)`}}\n              onClick={()=>setShowSKUFlag(!showSKUFlag)}\n            >\n              {showSKUFlag?\"Show Product Name\":\"Show SKU\"}\n            </div>\n            \n            <div className=\"control-btn\"\n              style={prodNavFlag?{backgroundColor:`var(--buttonRed)`}:{backgroundColor:`var(--buttonGreen)`}}\n              onClick={()=>setProdNavFlag(!prodNavFlag)}\n            >\n              {prodNavFlag?\"De-activate Products\":\"Activate Products\"}\n            </div>\n\n          </div>\n        </div>}\n\n\n      </div>\n\n      {noMatch &&  \n        <h3>No Match</h3>\n      }\n\n      <div className='grid'>\n        <div className=\"productCol-conatiner\">\n          {/* Product Fields */}\n          {productData?.length>0 &&\n            <div className=\"productCol\">\n                <h3>code</h3>\n                <h3>vehicleModel</h3>\n                <h3>brandCompany</h3>\n                <h3>sku</h3>\n                <h3>mrp</h3>\n                <h3>compatibleModels</h3>\n                <h3>metaData</h3>\n            </div>\n          }\n\n          {/* Product Data */}\n          {productData?.map((item,index)=>\n            <div className={`productCol ${prodNavFlag?\"navProdCol\":\"\"}`}\n              // style={prodNavFlag?{cursor:`pointer`}:{}} \n              key={index}\n              onClick={()=>handleProductClick(item.sku)}\n            >\n              <h3>{item.itemCode}</h3>\n              <h3>{item.vehicleModel}</h3>\n              <h3>{item.brandCompany}</h3>\n              <h3>{item.sku}</h3>\n              <h3>{item.mrp}</h3>\n              <h3>{item.compatibleModels.map((item,i)=>{\n                return <p key={i}>{ \n                  showSKUFlag?\n                  item\n                  :\n                  // Write logic for when whole list isnt loaded\n                  productData.filter(prod=>prod.sku===item).map(prod=>\n                    prod.productName+\" \"+ prod.vehicleModel+\" \"+prod.brandCompany\n                  )\n                }\n                </p>})}\n              </h3>\n              {item.metaData && \n              <h3>\n                {Object.keys(item.metaData)?.map((k,i)=>{\n                  return <p key={i}>{k}- {item.metaData[k]}</p>\n                  } \n                )}\n              </h3>\n              }\n            </div>\n            )\n          }\n        </div>\n        \n\n    \n      </div>\n\n    </div>\n    </>\n  )\n}\n\nexport default Products","import { useSelector } from 'react-redux'\nimport jwtDecode from 'jwt-decode'\n\nconst useAuth = () => {\n    const { token } = useSelector((state)=>state.auth)\n    let isManager = false\n    let isAdmin = false\n    let isEmployee = false\n    let status = \"\"\n\n    if(token){\n        const decoded = jwtDecode(token)\n        const { username, roles } = decoded.UserInfo\n\n        isManager = roles.includes('Manager')\n        isAdmin = roles.includes('Admin')\n        isEmployee = roles.includes('Employee')\n\n        if(isEmployee){\n            status = \"Employee\"\n        }\n        if(isManager){\n            status = \"Manager\"\n        }\n        if(isAdmin){\n            status = \"Admin\"\n        }\n\n        return { username, roles, isManager, isAdmin, status }\n    }\n\n    return {username:\"\", roles:[], isManager, isAdmin, status}\n}\n\nexport default useAuth","import { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useSelector } from 'react-redux';\nimport useAuth from '../../hooks/useAuth';\n\nimport \"./Landing.css\"\n\nfunction Landing() {\n    const navigate = useNavigate();\n    const {token} = useSelector((state)=>state.auth)\n    const {status} = useAuth()\n\n    const pathList = [{\n        pathname:\"products\",\n        name:\"Products\",\n        accessLevel:[\"Admin\",\"Manager\",\"Employee\"]\n    },{\n        pathname:\"indiamart-templates\",\n        name:\"Templates\",\n        accessLevel:[\"Admin\",\"Manager\",\"Employee\"]\n    },{\n        pathname:\"user-management\",\n        name:\"User Management\",\n        accessLevel:[\"Admin\"]\n    },{\n        pathname:\"demand-slip-generator\",\n        name:\"Demand Slip Generator\",\n        accessLevel:[\"Admin\",\"Manager\",\"Employee\"]\n    }]\n\n    const handleNavigation=(pathname)=>{\n        let path = \"/\"+pathname\n        navigate(path)\n    }\n\n    useEffect(()=>{\n        if(!token){\n            navigate(\"/login\")\n        }\n    },[])\n\n\n  return (\n    <div>\n       <>\n       {pathList.filter(path=> path.accessLevel.includes(status)).map((item,index)=>\n        <div className=\"path-options\" key={index} \n            onClick={()=>handleNavigation(item.pathname)}>\n                {item.name}\n        </div>\n        )}\n        </>\n    </div>\n  )\n}\n\nexport default Landing","import React,{ useState, useEffect } from 'react'\nimport { AiOutlinePlus, AiOutlineClose } from \"react-icons/ai\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { updateProduct, searchSKUProductsOnly } from '../../features/products/productSlice';\n\nfunction ProductForm({initialValue, setFlag}) {\n    const dispatch = useDispatch();\n\n    const {productSKUData, noMatch, isSuccess, message} = useSelector((state)=>state.product)\n\n    const [formData, setFormData] = useState({\n        itemCode: initialValue.itemCode,\n        vehicleModel: initialValue.vehicleModel,\n        brandCompany: initialValue.brandCompany,\n        partNum: initialValue.partNum,\n        sku: initialValue.sku,\n        compatibleModels: initialValue.compatibleModels,\n        qty: initialValue?.qty,\n        mrp: initialValue.mrp,\n        metaData: initialValue?.metaData\n    })\n\n    const [skuData, setSKUData] = useState({\n        itemCode:`${initialValue.itemCode.split(\"-\")[0]}`,\n        vehicleModel:\"\",\n        brandCompany:\"\",\n        partNum:\"\",\n        skuOnlyFlag:\"true\"\n      })\n\n    const [updatedMetaData, setUpdatedMetaData] = useState({...initialValue?.metaData})\n    const [updatedModels, setUpdatedModels] = useState([...initialValue.compatibleModels])\n\n    const {itemCode, vehicleModel, brandCompany, partNum, sku, mrp} = formData\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n\n    const copyText=(text)=>{\n        navigator.clipboard.writeText(text.slice(4))\n    }\n\n    const onChange=(e)=>{\n        setFormData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onMetaDataChange=(e)=>{\n        setUpdatedMetaData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onModelItemChange=(e,i)=>{\n        const modelList = [...updatedModels]\n        modelList[i] = e.target.value\n        // console.log(modelList)\n        setUpdatedModels(modelList)\n    }\n\n    const handleAddItem=()=>{\n        const modelList = [...updatedModels,`${sku.split(\"-\")[0]}-`]\n        setUpdatedModels(modelList)\n    }\n\n    const handleItemDelete = (index)=>{\n        const modelList = [...updatedModels]\n        modelList.splice(index,1)\n        // console.log(modelList)\n        setUpdatedModels(modelList)\n    }\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        if(itemCode===null || vehicleModel===null || brandCompany===null ||\n            partNum===null || mrp===null){\n            console.log(`Please enter valid data`)\n        }else{\n            const prodInfo = {\n                itemCode,\n                vehicleModel,\n                brandCompany,\n                partNum,\n                compatibleModels:updatedModels.join(\",\"),\n                mrp,\n                ...updatedMetaData\n            }\n            \n            // console.log(`formData:${JSON.stringify(prodInfo,null,4)}`)\n            \n            dispatch(updateProduct({prodInfo,sku}))\n        }\n    }\n\n    const onSKUChange=(e)=>{\n        setSKUData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    // Get SKU Products API call \n    const onSKUSubmit=(e)=>{\n        e.preventDefault()\n        \n        if(skuData.itemCode===\"\"){\n        alert(`Please Enter Item Code`)\n        }else{\n        dispatch(searchSKUProductsOnly(skuData))\n        }\n    }\n\n    /////////////////////////////////////////////////\n    //////// Hooks //////////////////////////////////\n    ////////////////////////////////////////////////\n    useEffect(()=>{\n        if(isSuccess && message===`Updated ${initialValue.sku}`){\n            setFlag(false)\n        }\n    },[message])\n\n  return (\n    <div className='card-container card-grid' style={{padding:\"0\", border:\"none\"}}>\n        <form onSubmit={onSubmit}>\n            \n            <div className=\"form-group\">\n                <label htmlFor={`itemCode`}>Item Code</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'itemCode'\n                    id={`itemCode`}\n                    value = {itemCode}\n                    placeholder=\"itemCode\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`vehicleModel`}>Vehicle Model</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'vehicleModel'\n                    id={`vehicleModel`}\n                    value = {vehicleModel}\n                    placeholder=\"vehicleModel\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`brandCompany`}>Brand Company</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'brandCompany'\n                    id={`brandCompany`}\n                    value = {brandCompany}\n                    placeholder=\"brandCompany\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`partNum`}>Part Number</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'partNum'\n                    id={`partNum`}\n                    value = {partNum}\n                    placeholder=\"partNum\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label >SKU</label>\n                <div className=\"card-form-control\">\n                    {sku}\n                </div>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`mrp`}>MRP</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'mrp'\n                    id={`mrp`}\n                    value = {mrp}\n                    placeholder=\"mrp\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\" \n                style={{display:\"flex\", flexDirection:\"column\", justifyContent:\"center\"}}\n            >\n                <label>Compatible Models</label>\n                {updatedModels.map((model,index)=>{\n                    return(\n                        <div className='model-input-container' key={index}>\n                            <input\n                                className='card-form-control'\n                                style={{width:\"90%\"}}\n                                name= {model}\n                                id={`model ${index}`}\n                                value = {model}\n                                placeholder=\"Model SKU\"\n                                autoComplete='off'\n                                onChange={(e)=>onModelItemChange(e,index)}\n                            />\n\n                            <div className=\"delete-btn\" \n                                onClick={()=>handleItemDelete(index)}\n                            >\n                                <AiOutlineClose />\n                            </div>\n                        </div >\n                    )\n                })}\n                    <br />\n                <div className=\"add-btn\"\n                    onClick={handleAddItem}\n                >\n                    <AiOutlinePlus />\n                </div>\n\n\n\n            </div>\n            \n            {initialValue?.metaData &&\n            <div className=\"form-group\">\n                <label>Meta Data</label>\n                <div className=\"card-form-control\" \n                    style={{display:\"flex\", flexDirection:\"column\", alignItems:\"flex-start\"}}\n                >\n                    {Object.keys(initialValue?.metaData).map((field,index)=>{\n                        return(\n                            <React.Fragment key={index}>\n                                <label htmlFor={field}>{field}</label>\n                                <input type=\"text\" \n                                    className='card-form-control'\n                                    name={field}\n                                    id={field}\n                                    value = {updatedMetaData[field]}\n                                    placeholder={field}\n                                    autoComplete='off'\n                                    onChange={onMetaDataChange} />\n                            </React.Fragment>\n                            )\n                        })}\n                </div>\n            </div>\n            }\n\n            <div className=\"form-group\">\n                <button type=\"submit\" className=\"submit-btn\">\n                    Update\n                </button>\n            </div>\n        \n        </form>\n\n        <form onSubmit={onSKUSubmit}>\n\n          <label style={{fontWeight:\"bold\"}}>Search by SKU</label>\n          <div className=\"form-group\">\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'itemCode'\n                    id={`itemCode sku`}\n                    value = {initialValue.itemCode}\n                    placeholder=\"Item Code\"\n                    autoComplete='off'\n                    // onChange={onSKUChange} \n                    />\n            </div>\n\n            <div className=\"form-group\">\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'vehicleModel'\n                    id={`vehicleModel sku`}\n                    value = {skuData.vehicleModel}\n                    placeholder=\"Vehicle Model\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'brandCompany'\n                    id={`brandCompany sku`}\n                    value = {skuData.brandCompany}\n                    placeholder=\"Brand Company\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'partNum'\n                    id={`partNum sku`}\n                    value = {skuData.partNum}\n                    placeholder=\"Part Number\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <button type=\"submit\" className=\"submit-btn\">\n                    Search\n                </button>\n            </div>\n\n            {productSKUData.length!==0 && !noMatch && \n            <div className=\"form-group\">\n                <label>SKU</label>\n                <div className=\"card-form-control\"\n                    style={{display:\"flex\", flexDirection:\"column\", alignItems:\"flex-start\"}}\n                >\n                    {productSKUData.map((item,i)=>{\n                        return (\n                        <p className='sku-list-item'\n                        onClick={()=>copyText(item.sku)}\n                        >\n                            {item.sku}\n                        </p>\n                        )\n                    })}\n                </div>\n            </div>}\n            \n            {noMatch && <p>No Match Found</p>  }\n\n        </form>\n    </div>\n  )\n}\n\nexport default ProductForm","import { useState, useEffect } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchSKUProducts } from '../../features/products/productSlice';\nimport { logOutUser } from '../../features/auth/authSlice';\nimport { FiEdit2 } from 'react-icons/fi'\nimport { AiOutlineClose } from 'react-icons/ai'\n\nimport \"./Products.css\"\n\nimport Loader from '../../components/Loader/Loader';\nimport ProductForm from '../../components/Forms/ProductForm';\nimport useAuth from '../../hooks/useAuth';\n\nfunction Product() {\n    const params = useParams()\n    const navigate = useNavigate()\n    const dispatch = useDispatch();\n\n    const [editFlag, setEditFlag] = useState(false)\n\n    const {productData, isLoading, message} = useSelector((state)=>state.product)\n    const filteredProduct = productData?.filter(prod=>prod.sku===params.sku)[0]\n\n    const { token } = useSelector((state)=>state.auth)\n    const { isAdmin } = useAuth()\n\n    useEffect(()=>{\n        if(!token){\n            dispatch(logOutUser())\n            navigate(\"/\")\n        }\n        dispatch(searchSKUProducts({\n            itemCode:params.sku.split(\"-\")[0],\n            vehicleModel:params.sku.split(\"-\")[1],\n            brandCompany:params.sku.split(\"-\")[2],\n            partNum:params.sku.split(\"-\")[3],\n            skuOnlyFlag:\"false\"\n          }))        \n    },[])\n\n    useEffect(()=>{\n        if(!editFlag && message===`Updated ${params.sku}`){\n            dispatch(searchSKUProducts({\n                itemCode:params.sku.split(\"-\")[0],\n                vehicleModel:params.sku.split(\"-\")[1],\n                brandCompany:params.sku.split(\"-\")[2],\n                partNum:params.sku.split(\"-\")[3],\n                skuOnlyFlag:\"false\"\n              }))   \n        }\n    },[editFlag])\n\n  return (\n    <>\n\n    {isLoading && <Loader />}\n    <div className=\"product-container\">\n        {isAdmin && \n            <div className='edit-btn' \n                onClick={()=>setEditFlag(!editFlag)}>\n                {editFlag?<AiOutlineClose />:<FiEdit2 />}\n            </div>\n        }\n\n        <h1>Product</h1>\n        \n        {editFlag?\n        <ProductForm initialValue={filteredProduct} setFlag={setEditFlag}/>\n        :\n        <>\n            <p>itemCode:{filteredProduct?.itemCode} </p>\n            <p>vehicleModel:{filteredProduct?.vehicleModel} </p>\n            <p>brandCompany: {filteredProduct?.brandCompany} </p>\n            <p>partNum:{filteredProduct?.partNum} </p>\n            <p>sku:{filteredProduct?.sku} </p>\n            <p>mrp:{filteredProduct?.mrp} </p>\n            <br />\n            <p>compatibleModels:</p>\n            {filteredProduct?.compatibleModels.map((model,index)=>{\n                return <p key={index}>{model}</p>\n            })}\n            <br />\n            <p>metaData:</p>\n            {filteredProduct?.metaData && Object.keys(filteredProduct?.metaData).map((field,index)=>{\n                return(\n                    <p key={index}>{field}:{filteredProduct?.metaData[field]}</p>\n                    )\n                })}\n        </>}\n\n    </div>\n    </>\n  )\n}\n\nexport default Product","import React from 'react'\n\nfunction NotFound() {\n  return (\n    <div className='data-container'>\n        {/* <div className=\"window-content\" > */}\n\n          <h1>404</h1>\n          <br />\n          <h3>Page Not Found</h3>\n        {/* </div> */}\n\n    </div>\n  )\n}\n\nexport default NotFound","import { useState } from 'react'\nimport { useDispatch } from \"react-redux\"\nimport \"./Form.css\"\nimport {resetAuth, setUserCredentials} from \"../../features/auth/authSlice\"\n\nfunction LoginForm() {\n    const dispatch = useDispatch(); \n\n    const [formData, setFormData] = useState({\n        username:'',\n        password:'',\n    })\n\n    const [showPasswordFlag, setShowPasswordFlag] = useState(false)\n\n    const {username, password } = formData\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n\n    const onChange=(e)=>{\n        setFormData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        if(username===null || password===null){\n            console.log(`Please fill all fields`)\n        }else{\n            dispatch(resetAuth())\n            const userData = {\n                username,\n                password\n            }\n            // dispatch(refreshToken(userData))\n            dispatch(setUserCredentials(userData))\n            // console.log(JSON.stringify(userData,null,4))\n        }\n    }\n\n  return (\n    <>\n    <div className='form-container'>\n        <form onSubmit={onSubmit}>\n            <div className=\"form-grid\">\n                \n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input type=\"text\" \n                        className='form-control'\n                        name= 'username'\n                        id='username'\n                        value = {username}\n                        placeholder=\"Username\"\n                        autoComplete='off'\n                        onChange={onChange} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type={showPasswordFlag?`text`:`password`} \n                        className='form-control'\n                        name= 'password'\n                        id='password'\n                        value = {password}\n                        placeholder=\"Password\"\n                        autoComplete='off'\n                        onChange={onChange} />\n                </div>\n\n                <div className=\"form-group\">\n                    <div className=\"submit-btn\"\n                        onClick={()=>setShowPasswordFlag(!showPasswordFlag)}\n                    >\n                        Show Password\n                    </div>\n                </div>\n\n            </div>\n\n            <div className=\"form-group\">\n                <button type=\"submit\" className=\"submit-btn\">\n                    Submit\n                </button>\n            </div>\n        </form>\n    </div>\n    </>\n  )\n}\n\nexport default LoginForm","import { useEffect } from 'react'\nimport { useSelector } from \"react-redux\"\nimport LoginForm from '../../components/Forms/LoginForm'\n\nimport \"./Login.css\"\nimport Loader from '../../components/Loader/Loader'\nimport { useNavigate } from \"react-router-dom\"\n\nfunction Login() {\n  const navigate= useNavigate()\n  const {isLoading,isSuccess, isError, message} =useSelector((state)=>state.auth)\n\n  useEffect(()=>{\n    if(isSuccess){\n      navigate(\"/\")\n    }\n  },[isLoading])\n\n  return (\n    <>\n    {isLoading && <Loader />}\n    <div>\n        {/* Login */}\n        <LoginForm />\n        {isError && <p>{message}</p>}\n    </div>\n    </>\n  )\n}\n\nexport default Login","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport \"./Modal.css\"\n\nfunction LoginAgainModal() {\n    const navigate = useNavigate()\n\n  return (\n    <>\n    <div className=\"modal-backdrop\"></div>\n    <div className='modal-container'>\n        <div className=\"form-container\">\n            <p>Login has Expired. Login again.</p>\n            <br />\n\n        <div className=\"control-box\">\n          <div className=\"control-section\">\n            \n            <div className=\"control-btn\"\n            //   style={{backgroundColor:`var(--buttonGreen)`}}\n            onClick={()=>navigate(\"/\")}\n            >\n              Go to Login\n            </div>\n            </div>\n        </div>\n        </div>\n\n    </div>\n    </>\n  )\n}\n\nexport default LoginAgainModal","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\n\nimport \"./Form.css\"\nimport { getAllUsers, updateUser } from '../../features/users/usersSlice';\n\nfunction UserForm({initialValue, setFlag}) {\n    const dispatch = useDispatch(); \n\n    const { isSuccess, message } = useSelector((state)=>state.users)\n\n    const [formData, setFormData] = useState({\n        id: initialValue._id,\n        username: initialValue.username,\n        firstname: initialValue.firstname,\n        lastname: initialValue.lastname,\n        active: initialValue.active,\n        roles: initialValue.roles\n    })\n\n    const { id, username, firstname, lastname, active, roles } = formData\n    const [checkList, setCheckList] = useState([...initialValue.roles])\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n\n    const onChange=(e)=>{\n        setFormData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const handleRoles=(e)=>{\n        if(e.target.value===\"admin\"){\n            setCheckList([\"Admin\",\"Manager\",\"Employee\"])\n        }else if(e.target.value===\"manager\"){\n            setCheckList([\"Manager\",\"Employee\"])\n        }else if(e.target.value===\"employee\"){\n            setCheckList([\"Employee\"])\n        }\n    }\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        if(username===null || firstname===null || lastname===null ||\n            !Array.isArray(roles)){\n            console.log(`Please enter valid data`)\n        }else{\n            // console.log(`formData:${JSON.stringify(formData,null,4)}`)\n            const userInfo = {\n                id,\n                username,\n                firstname,\n                lastname,\n                active:active===true||active===\"true\"?true:false,\n                roles\n            }\n            \n            dispatch(updateUser(userInfo))\n        }\n    }\n\n    /////////////////////////////////////////////////\n    //////// Hooks //////////////////////////////////\n    ////////////////////////////////////////////////\n    \n    useEffect(()=>{\n        setFormData((prevState)=>({...prevState, roles:checkList}))\n        // console.log(`formData:${JSON.stringify(formData,null,4)}`)\n    },[checkList])\n\n    useEffect(()=>{\n        if(isSuccess && message!==\"\"){\n            dispatch(getAllUsers())\n\n            if(isSuccess){\n                // console.log(`get all finished`)\n                setFlag(false)\n             }\n        }\n    },[isSuccess])\n\n  return (\n    <div className='card-container' style={{padding:\"0\", border:\"none\"}}>\n        <p><span style={{fontWeight:\"bold\", marginBottom:\"0.5rem\"}}>id: </span> {initialValue._id}</p>\n        <form onSubmit={onSubmit}>\n\n            <div className=\"form-group\">\n                <label htmlFor={`username ${initialValue.username}`}>username</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'username'\n                    id={`username ${initialValue.username}`}\n                    value = {username}\n                    placeholder=\"Username\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`firstname ${initialValue.firstname}`}>firstname</label>\n                <input type=\"text\" \n                    className='form-control'\n                    name= 'firstname'\n                    id={`firstname ${initialValue.firstname}`}\n                    value = {firstname}\n                    placeholder=\"firstname\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`lastname ${initialValue.lastname}`}>lastname</label>\n                <input type=\"text\" \n                    className='form-control'\n                    name='lastname'\n                    id={`lastname ${initialValue.lastname}`}\n                    value = {lastname}\n                    placeholder=\"lastname\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                    <label>active</label>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"active\" \n                            id={`${initialValue.username} active true`} \n                            value={`true`}\n                            defaultChecked={initialValue.active?true:false}\n                            onChange={onChange} />\n                        <label htmlFor={`${initialValue.username} active true`}>Yes</label>\n                        </div>\n                    </div>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"active\" \n                            id={`${initialValue.username} active false`} \n                            value={`false`}\n                            defaultChecked={initialValue.active?false:true}\n                            onChange={onChange} />\n                        <label htmlFor={`${initialValue.username} active false`}>No</label>\n                        </div>\n                    </div>\n                </div>\n\n            <div className=\"form-group\">\n                    <label>roles</label>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"roles\" \n                            id={`${initialValue.username} role admin`} \n                            value=\"admin\"\n                            defaultChecked={initialValue.roles.includes(\"Admin\")?true:false}\n                            onChange={handleRoles} />\n                        <label htmlFor={`${initialValue.username} role admin`}>Admin</label>\n                        </div>\n                    </div>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"roles\" \n                            id={`${initialValue.username} role manager`} \n                            value=\"manager\"\n                            defaultChecked={initialValue.roles.includes(\"Manager\") && \n                                            !initialValue.roles.includes(\"Admin\") ?\n                                            true:false}\n                            onChange={handleRoles} />\n                        <label htmlFor={`${initialValue.username} role manager`}>Manager</label>\n                        </div>\n                    </div>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"roles\" \n                            id={`${initialValue.username} role employee`} \n                            value=\"employee\"\n                            defaultChecked={initialValue.roles.includes(\"Employee\") && \n                                            !initialValue.roles.includes(\"Admin\") && \n                                            !initialValue.roles.includes(\"Manager\") ?\n                                            true:false}\n                            onChange={handleRoles} />\n                        <label htmlFor={`${initialValue.username} role employee`}>Employee</label>\n                        </div>\n                    </div>\n                \n                </div>\n\n                <div className=\"form-group\">\n                    <button type=\"submit\" className=\"submit-btn\">\n                        Update\n                    </button>\n                </div>\n                \n        </form>\n    </div>\n  )\n}\n\nexport default UserForm","import { useState } from 'react'\nimport { FiEdit2 } from 'react-icons/fi'\nimport { AiOutlineClose } from 'react-icons/ai'\n\n\nimport \"./Card.css\"\nimport UserForm from '../Forms/UserForm'\n\nfunction UserCard({info}) {\n  const [editFlag, setEditFlag] = useState(false)\n\n  return (\n    <>\n    \n    <div className='card-container'>\n        <div className='edit-btn' \n            onClick={()=>setEditFlag(!editFlag)}>\n            {editFlag?<AiOutlineClose />:<FiEdit2 />}\n        </div>\n      {editFlag?\n      <UserForm initialValue={info} setFlag={setEditFlag}/>\n      :\n      <>\n        <p><span>id: </span> {info._id}</p>\n        <p><span>username: </span>{info.username}</p>\n        <p><span>firstname: </span> {info.firstname}</p>\n        <p><span>lastname: </span> {info.lastname}</p>\n        <p><span>active: </span>{info.active ?\"Yes\":\"No\"}</p>\n        <p><span>roles: </span>\n        {info.roles?.map((role,i)=><span style={{fontWeight:\"normal\"}} key={i}>{role} </span>)}</p>\n        <br />\n      </>\n      }\n    </div>\n    </>\n  )\n}\n\nexport default UserCard","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { getAllUsers } from '../../features/users/usersSlice'\n\nimport \"./User.css\"\n\nimport LoginAgainModal from '../../components/Modals/LoginAgainModal'\nimport useAuth from '../../hooks/useAuth'\nimport Loader from '../../components/Loader/Loader'\nimport UserCard from '../../components/Cards/UserCard'\n\nfunction Users() {\n    const dispatch = useDispatch()\n    const {token} = useSelector((state)=>state.auth)\n    const {isAdmin} = useAuth()\n\n    const { usersList, isLoading } = useSelector((state)=>state.users)\n\n    useEffect(()=>{\n        dispatch(getAllUsers())\n    },[])\n\n  return (\n    <>\n    {!token && <LoginAgainModal />}\n    {isLoading && <Loader />}\n    <div>\n        \n         <div className='form-container' style={{width:\"60vw\"}}>\n            <div className=\"form-grid\">\n            {(isAdmin)?\n            <>\n                <div className=\"form-group\">\n\n                    <div className=\"header\">\n                        <h3>User Data</h3>\n                    </div>\n                \n                </div>\n\n                <div className=\"user-card-grid\">\n\n                {(usersList && usersList?.length!==0) && \n                    usersList?.map((userInfo,index)=>\n                    \n                    <div key={index}>\n                        <UserCard info={userInfo} />\n                    </div>\n                    )\n                }\n                </div>\n            \n            </>\n            :\n            <p>Unauthorized</p>\n            }\n            </div>\n        </div>\n    </div>\n    </>\n  )\n}\n\nexport default Users","import React from 'react'\nimport \"./Footer.css\"\nimport useAuth from '../../hooks/useAuth'\n\nfunction Footer() {\n    const {status} = useAuth()\n  return (\n    <div className='footer-container'>\n        {(status!==\"\" && status)?`Din 2024 | ${status}`:\"Din 2024\"}\n    </div>\n  )\n}\n\nexport default Footer","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { AiOutlinePlus, AiOutlineClose,AiOutlineSearch } from \"react-icons/ai\"\nimport { resetSearchProducts,searchProducts, searchSKUProducts,searchSKUProductsOnly } from '../../features/products/productSlice';\nimport { generateDemandSlip, getFilteredDemandSlips, resetAfterNewDemandSlip, resetOrders } from '../../features/orders/orderSlice';\nimport Loader from '../Loader/Loader';\n\nimport debouce from \"lodash.debounce\";\n\nfunction QuickProdSearchForm({setToggleFlag,passNextFlag }) {\n    const dispatch = useDispatch();\n\n    const { productData, noMatch } = useSelector((state)=>state.product)\n    const { newDemandSlip, isSuccess, isLoading, message } = useSelector((state)=>state.orders)\n\n    const [newDSFlag, setNewDSFlag] = useState(false)\n\n    const [searchInput, setSearchInput] = useState(\"\");\n\n    const [formData, setFormData] = useState({\n        deliveryPartnerName: \"\",\n        distributorName: \"\",\n        orderedProductList: [{\n            sku:\"\",\n            productFullName:\"\",\n            quantity:\"\"\n        }]\n    })\n\n    const [updatedOrderList, setUpdatedOrderList] = useState([{\n        sku:\"MANUAL\",\n        productFullName:\"\",\n        quantity:\"\"\n    }])\n\n    const [skuData, setSKUData] = useState({\n        itemCode:\"\",\n        vehicleModel:\"\",\n        brandCompany:\"\",\n        partNum:\"\",\n        skuOnlyFlag:\"true\"\n    })\n      \n    const { deliveryPartnerName, distributorName } = formData\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n\n    // const copyText=(text)=>{\n    //     navigator.clipboard.writeText(text)\n    // }\n    const handleSearchChange = (e) => {\n        setSearchInput(e.target.value);\n    }\n\n    // Debounce function\n    const debouncedResults = debouce(handleSearchChange, 800)\n\n    const handleModalClose =()=>{\n        setNewDSFlag(false)\n        setUpdatedOrderList([{\n            sku:\"MANUAL\",\n            productFullName:\"\",\n            quantity:\"\"\n        }])\n        setFormData({\n            deliveryPartnerName: \"\",\n            distributorName: \"\",\n            orderedProductList: [{\n                sku:\"\",\n                productFullName:\"\",\n                quantity:\"\"\n            }]\n        })\n\n        dispatch(resetSearchProducts())\n    }\n\n    // const handleNumField = (e) => {\n    //     const value = e.target.value.replace(/\\D/g, \"\");\n    //     setFormData((prevState)=>({...prevState, \n    //         [e.target.name]:value}));\n    // };\n\n    const addItemfromSearch=(item)=>{\n        const newItem = {\n            sku: item.sku,\n            productFullName: item.productFullName,\n            quantity:\"\"\n        }\n        \n        // Check for Duplicates\n        var duplicateCheck = []\n        duplicateCheck = updatedOrderList.filter(prod=>prod.sku===item.sku)\n        \n        if(duplicateCheck.length>0){\n            return alert('Item Already Exists')\n        }\n\n        setUpdatedOrderList((prevState)=>([\n            ...prevState,\n            newItem\n        ]\n        ))\n    }\n\n    const onChange=(e)=>{\n        setFormData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onSKUChange=(e)=>{\n        setSKUData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onOrderItemChange=(e,i)=>{\n        let orderList = [...updatedOrderList]\n        let orderItem = orderList[i]\n        if(e.target.name===\"quantity\"){\n            const numValue = e.target.value.replace(/\\D/g, \"\")\n            orderItem[e.target.name] = numValue\n        }else{\n            orderItem[e.target.name] = e.target.value.toUpperCase()\n        }\n\n        setUpdatedOrderList(orderList)\n    }\n\n    const handleAddItem=()=>{\n        const modelList = [...updatedOrderList,{sku:\"MANUAL\",productFullName:\"\",quantity:\"\"}]\n        setUpdatedOrderList(modelList)\n    }\n\n    const handleItemDelete = (index)=>{\n        const modelList = [...updatedOrderList]\n        modelList.splice(index,1)\n\n        setUpdatedOrderList(modelList)\n    }\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        let emptyOrderListObj = []\n        emptyOrderListObj = updatedOrderList.filter(prod=>(prod.sku===\"\"\n                                                    ||prod.productFullName===\"\"\n                                                    ||prod.quantity===\"\"))\n\n        if(emptyOrderListObj.length>0){\n            return alert('Empty Field/s')\n        }\n\n        // if(updatedOrderList)\n\n        if(deliveryPartnerName===\"\" || distributorName===\"\" || updatedOrderList.length===0 \n            || !Array.isArray(updatedOrderList)){\n            return alert(`Please enter valid data`)\n        }else{\n            const orderInfo = {\n                deliveryPartnerName:deliveryPartnerName.toUpperCase(),\n                distributorName:distributorName.toUpperCase(),\n                orderedProductList:updatedOrderList,\n            }\n            \n            // console.log(`formData:${JSON.stringify(orderInfo,null,4)}`)\n            \n            dispatch(generateDemandSlip(orderInfo))\n            \n        }\n    }\n\n    // Get SKU Products API call \n    const onSKUSubmit=(e)=>{\n        e.preventDefault()\n        \n        if(skuData.itemCode===\"\"){\n            return alert(`Please Enter Item Code`)\n        }else{\n            setSearchInput(\"\")\n            dispatch(searchSKUProducts(skuData))\n        }\n    }\n\n    /////////////////////////////////////////////////\n    //////// Hooks //////////////////////////////////\n    ////////////////////////////////////////////////\n\n    // Search API call\n    useEffect(()=>{\n        if (searchInput!==\"\") {\n        dispatch(searchProducts(searchInput))\n        }\n    },[searchInput])\n\n    // Success reset\n    useEffect(()=>{\n        if(isSuccess && message!==\"\"){\n            // dispatch(resetOrders())\n            dispatch(getFilteredDemandSlips())\n\n            if(isSuccess){\n                setFormData({\n                    deliveryPartnerName: \"\",\n                    distributorName: \"\",\n                    orderedProductList: [{\n                        sku:\"\",\n                        productFullName:\"\",\n                        quantity:\"\"\n                    }]\n                })\n\n                setSKUData({\n                    itemCode:\"\",\n                    vehicleModel:\"\",\n                    brandCompany:\"\",\n                    partNum:\"\",\n                    skuOnlyFlag:\"true\"\n                })\n                setSearchInput(\"\")\n                dispatch(resetAfterNewDemandSlip())\n                setNewDSFlag(true)\n                // passNextFlag(true)\n                // setToggleFlag(false)\n            }\n        }\n    },[isSuccess])\n\n    // useEffect(()=>{\n    //     console.log(`uOL:${JSON.stringify(updatedOrderList,null,4)}`)\n    // },[updatedOrderList])\n\n    // useEffect(()=>{\n    //     console.log(`oL:${JSON.stringify(newDemandSlip.orderedProductList,null,4)}`)\n    // },[newDemandSlip])\n\n  return (\n    <>\n    {isLoading && <Loader/>}\n    {newDSFlag &&\n    <>\n    <div className=\"modal-backdrop\" ></div> \n        <div className='modal-container'>\n            <div className=\"edit-btn\"\n                onClick={()=>handleModalClose()}\n            >\n            <AiOutlineClose />\n            </div>\n            <div className='ds-new-box'>\n\n                <div className='ds-new-col'>\n\n                <p><span>Ticket Number: </span>{`${newDemandSlip.ticketNumber}`}</p>\n                <p><span>Date: </span>{`${newDemandSlip.date}`}</p>\n                <br />\n\n                <p><span>Delivery Partner Name: </span>{`${newDemandSlip.deliveryPartnerName}`}</p>\n                <p><span>Distributor Name: </span>{`${newDemandSlip.distributorName}`}</p>\n                {/* <br /> */}\n                </div>\n\n                <div className='ds-new-col'>\n                <p>{`Prodcuts:`}</p>\n\n                 {newDemandSlip.orderedProductList?.map((item,index)=>{\n                     return(\n                    <div className='ds-col-prod-list' key={index}>\n                        <p><span>SKU: </span> {`${item.sku}`}</p>\n                        <p><span>Product Full Name: </span> {`${item.productFullName}`}</p>\n                        <p><span>Quantity: </span> {`${item.quantity}`}</p>\n                        <br />\n                    </div>\n                    )\n                })}\n                </div>\n            </div>\n\n        </div>\n    </>\n    }\n    <div className='card-container card-grid' style={{padding:\"0\", border:\"none\"}}>\n        <form onSubmit={onSubmit}>\n            <div className=\"form-group\">\n                <label htmlFor={`deliveryPartnerName`}>Delivery Partner Name</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'deliveryPartnerName'\n                    id={`deliveryPartnerName`}\n                    value = {deliveryPartnerName}\n                    placeholder=\"Delivery Partner Name\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`distributorName`}>Distributor Name</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'distributorName'\n                    id={`distributorName`}\n                    value = {distributorName}\n                    placeholder=\"Distributor Name\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group-flex\" style={{marginBottom:`1rem`}}>\n                <label>Products</label>\n                {updatedOrderList.map((prod,index)=>{\n                    return(\n                        <div className='model-input-container' key={index}>\n                            <section>\n\n                            <input\n                                className='card-form-control'\n                                type='text'\n                                style={{width:\"99%\",marginRight:\"0.2rem\"}}\n                                name= {`sku`}\n                                id={`sku ${index}`}\n                                value = {prod.sku}\n                                placeholder=\"Prod SKU\"\n                                autoComplete='off'\n                                onChange={(e)=>onOrderItemChange(e,index)}\n                                />\n                             <input\n                                className='card-form-control'\n                                type='text'\n                                style={{width:\"99%\",marginRight:\"0.2rem\"}}\n                                name= {`productFullName`}\n                                id={`productFullName ${index}`}\n                                value = {prod.productFullName}\n                                placeholder=\"Prod Full Name\"\n                                autoComplete='off'\n                                onChange={(e)=>onOrderItemChange(e,index)}\n                                />\n                            </section>\n\n                            <div style={{display:`flex`, \n                                flexDirection:`column`,\n                                alignSelf:`flex-end`\n                                }}\n                            >\n\n                            <div className=\"delete-btn\" \n                                onClick={()=>handleItemDelete(index)}\n                                >\n                                <AiOutlineClose />\n                            </div>\n                             <input\n                                className='card-form-control'\n                                type='text'\n                                style={{width:\"99%\",marginRight:\"0.2rem\"}}\n                                name= {`quantity`}\n                                id={`quantity ${index}`}\n                                value = {prod.quantity}\n                                placeholder=\"Qty\"\n                                autoComplete='off'\n                                onChange={(e)=>onOrderItemChange(e,index)}\n                                />\n\n                            </div>\n\n                        </div >\n                    )\n                })}\n                    <br />\n                <div className=\"add-btn\"\n                    onClick={handleAddItem}\n                >\n                    <AiOutlinePlus />\n                </div>\n\n            </div>\n            <div className=\"form-group\">\n                <button type=\"submit\" className=\"submit-btn\">\n                    Generate\n                </button>\n            </div>\n        </form>\n        {/* /////////////////////////////// */}\n        <form onSubmit={onSKUSubmit}>\n            {/* Load Product Controls */}\n            <div className=\"controlbox\">\n\n            <label style={{fontWeight:\"bold\"}}>Search</label>\n            <div className=\"search-bar\">\n            <AiOutlineSearch className='search-icon'/>\n            <input\n                type=\"text\"\n                name=\"search\"\n                placeholder=\"Search for Product\"\n                onChange={debouncedResults}\n                autoComplete='off'\n                />\n\n            </div>\n            </div> \n\n            {/* Search by SKU */}\n        <label style={{fontWeight:\"bold\"}}>Search by SKU</label>\n        <div className=\"form-group\" >\n            <input type=\"text\" \n                className='card-form-control'\n                name= 'itemCode'\n                id={`itemCode sku`}\n                value = {skuData.itemCode}\n                placeholder=\"Item Code\"\n                autoComplete='off'\n                onChange={onSKUChange} \n                />\n        </div>\n\n        <div className=\"form-group\">\n            <input type=\"text\" \n                className='card-form-control'\n                name= 'vehicleModel'\n                id={`vehicleModel sku`}\n                value = {skuData.vehicleModel}\n                placeholder=\"Vehicle Model\"\n                autoComplete='off'\n                onChange={onSKUChange} />\n        </div>\n\n        <div className=\"form-group\">\n            <input type=\"text\" \n                className='card-form-control'\n                name= 'brandCompany'\n                id={`brandCompany sku`}\n                value = {skuData.brandCompany}\n                placeholder=\"Brand Company\"\n                autoComplete='off'\n                onChange={onSKUChange} />\n        </div>\n\n        <div className=\"form-group\">\n            <input type=\"text\" \n                className='card-form-control'\n                name= 'partNum'\n                id={`partNum sku`}\n                value = {skuData.partNum}\n                placeholder=\"Part Number\"\n                autoComplete='off'\n                onChange={onSKUChange} />\n        </div>\n\n        <div className=\"form-group\">\n            <button type=\"submit\" className=\"submit-btn\">\n                Search\n            </button>\n        </div>\n\n        {productData.length!==0 && !noMatch && \n        <div className=\"form-group\">\n            <label>Results {`(${productData.length})`}</label>\n            <div className=\"search-result-container\">\n\n            <div \n            // className=\"card-form-control\"\n                // style={{display:\"flex\", flexDirection:\"column\", alignItems:\"flex-start\"}}\n                >\n                {productData.map((item,i)=>{\n                    return (\n                        <div className='sku-list-item'\n                        key={i}\n                        onClick={()=>addItemfromSearch(item)}\n                        >\n                            <p>{i+1}</p>\n                            \n                            <section>\n                                <p>\n                                    {item.sku}\n                                </p>\n                                {/* <br /> */}\n                                <p style={{fontWeight:\"bold\"}}>{item.productFullName}</p>\n                            </section>\n                        {/* <br /> */}\n                        </div>\n                    )\n                })}\n            </div>\n            </div>\n        </div>}\n        \n        {noMatch && <p>No Match Found</p>  }\n\n        </form>\n    </div>\n    </>\n  )\n}\n\nexport default QuickProdSearchForm","import React, { useState, useEffect, useRef } from 'react'\nimport { FaAngleDown } from \"react-icons/fa6\";\nimport \"./Dropdown.css\"\n\nfunction UserDropdown({value, dataList, passUsername}) {\n    const boxRef = useRef(null) \n\n    const [isActive, setIsActive] = useState(false)\n    const [selectedItem, setSelectedItem] = useState(\"\")\n\n    const handleClick=()=>{\n        setIsActive(!isActive)\n    }\n\n    const handleItemClick=(user)=>{\n        const data = user\n\n        passUsername(data)\n        setSelectedItem(user)\n        setIsActive(!isActive)\n    }\n\n    useEffect(()=>{\n        setSelectedItem(value)\n    },[value])\n\n    // Modal close\n    useEffect(()=>{\n        let handler = (event) => {\n            if(!boxRef.current.contains(event.target)\n               )\n              {\n                setIsActive(false)\n              }\n        };\n        document.addEventListener(\"mousedown\", handler);\n    \n        return()=>{\n        document.removeEventListener(\"mousedown\",handler);\n        }\n    })\n\n  return (\n    <div className=\"drop-down-container no-border-dropdown-container\" ref={boxRef}>\n        <div className=\"drop-down-item selected-drop-down\" onClick={()=>handleClick()}>\n            <p>{selectedItem===\"\"?`Select a User`:selectedItem}</p>\n            <div className='arrow-container'>\n            <FaAngleDown className='down-arrow' />\n            </div>\n        </div>     \n\n        {isActive && \n        <div className=\"drop-down-list-container no-border-dropdown-list\">\n            {dataList?.map((item,index)=>\n            <div className=\"drop-down-item\" key={index}\n                onClick={()=>handleItemClick(item)}\n            >\n                <p>{item}</p>\n            </div>\n            )\n            }\n\n        </div>\n        }     \n    </div>\n  )\n}\n\nexport default UserDropdown","import React, { useEffect, useState } from 'react'\nimport useAuth from '../../hooks/useAuth'\n\nimport '../../pages/DemandSlip/DemandSlip.css'\n\nfunction DemandSlipCard({info, partialFlag=false}) {\n    const { isAdmin, isManager } = useAuth()\n\n    const [statusColour, setStatusColour] = useState({})\n\n    const createdTimeString = new Date(info.createdAt).toString().split(' ')[4]\n    const updatedTimeString = new Date(info.updatedAt).toString().split(' ')[4]\n    \n    useEffect(()=>{\n        if(info.status==='partial'){\n            setStatusColour({backgroundColor:`#ffb703`})\n        }else if(info.status==='failed'){\n            setStatusColour({backgroundColor:`#e63946`})\n        }else if(info.status==='fulfilled'){\n            setStatusColour({backgroundColor:`#8ac926`})\n        }else{\n            setStatusColour({border:`1px solid black`})\n        }\n    },[])\n\n  return (\n    <>\n    <div className='ds-slip-box'>\n    <div style={{width:`100%`}}>\n        <div className=\"card-row\">\n            <div className=\"card-element\">\n\n            <h3>{info.ticketNumber}</h3>\n            {(isAdmin||isManager) && \n            <h3>{info?.username}</h3>\n            }\n            </div>\n\n            <div className=\"card-element\">\n                <div className=\"status-circle\"\n                    style={statusColour}\n                >\n                </div>\n            </div>\n\n        </div>\n        <br />\n\n        {(isAdmin||isManager) && \n        <div className=\"card-row\">\n\n            <div className=\"card-element\">\n                <h3>Created</h3>\n                {createdTimeString}\n            </div>\n\n            <div className=\"card-element\">\n                <h3>Updated</h3>\n                {updatedTimeString}\n            </div>\n        </div>\n        }\n        {/* <div className=\"card-row\">\n        </div> */}\n        \n        <br />\n        \n        <div className=\"card-row\">\n            <div className=\"card-element\">\n                <h3>Delivery Partner</h3>\n                <p>{info.deliveryPartnerName}</p>\n            </div>\n\n            <div className=\"card-element\">\n                <h3>Distributor</h3> \n                <p>{info.distributorName}</p>\n            </div>\n        </div>\n    {/* <p><span>Status: </span> {info.status}</p> */}\n\n    <br />\n    <p><span>Total Cost: </span>{info.totalCost}</p>\n    <br />\n\n    <div className=\"card-grid-row\">\n        <h3></h3>\n        <h3>Products</h3>\n        <h3>Ord.</h3>\n        {partialFlag && <h3>Recv.</h3>}  \n    </div>\n\n    {/* <div className='ds-new-col'> */}\n        {info.orderedProductList?.map((prod,i)=>\n            <div className=\"card-grid-row\" key={i}>\n                <p>{i+1}.</p>\n\n                <div className=\"card-element\">\n\n                    <p style={{fontWeight:`bold`}}>{prod.productFullName}</p>\n                    <p>{prod.sku}</p>\n                </div>\n\n                <p>{prod.quantity}</p>\n                \n                {partialFlag && \n                    <p>{info.recievedProductList[i]?.quantity}</p>\n                }\n                \n                {/* <br /> */}\n            {/* </React.Fragment>   */}\n        </div>\n        )}\n    </div>\n    </div>\n    </>\n  )\n}\n\nexport default DemandSlipCard","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { AiOutlinePlus, AiOutlineClose } from \"react-icons/ai\"\nimport { getFilteredDemandSlips, resetAfterNewDemandSlip, updateDemandSlip } from '../../features/orders/orderSlice';\nimport useAuth from '../../hooks/useAuth';\n\nfunction UpdateOrderForm({ initialValue, setFlag}) {\n    const dispatch = useDispatch();\n\n    const {isAdmin, isManager} = useAuth()\n\n    const {isSuccess, updatedDataFlag} = useSelector((state)=>state.orders)\n\n    const [formData, setFormData] = useState({\n        ...initialValue, \n        recievedProductList: initialValue.orderedProductList\n    })\n    \n    const { deliveryPartnerName, distributorName } = formData\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n\n    const onChange=(e)=>{\n        setFormData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onRecievedListChange=(e,i)=>{\n        var tempList = [...formData.recievedProductList]\n\n        const numValue = e.target.value.replace(/\\D/g, \"\");\n\n        // console.log(`nV:${numValue}`)\n        const intInputValue = parseInt(numValue.replace(/\\D/g, \"\"),10)\n        const intMaxValue = parseInt(initialValue.orderedProductList[i].quantity,10)\n        \n        if(intInputValue>intMaxValue){\n            return alert('Invalid Quanity')\n        }\n        var tempItem = tempList[i]\n        let newItem = {\n            sku:tempItem.sku,\n            productFullName:tempItem.productFullName,\n            quantity:intInputValue?intInputValue:0\n        }\n\n\n        // tempItem[\"quantity\"] = e.target.value\n        tempList.splice(i,1,newItem)\n\n        // console.log(`itemList:${JSON.stringify(tempList,null,4)}`)\n        setFormData((prevState)=>({\n            ...prevState,\n            recievedProductList:tempList\n        }))\n\n    }\n\n    const handleNumField = (e) => {\n        const value = e.target.value.replace(/\\D/g, \"\");\n        setFormData((prevState)=>({...prevState, \n            [e.target.name]:value}));\n    };\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        let updatedOrderList = [...formData.recievedProductList]\n        // console.log(`updatedOL:${JSON.stringify(updatedOrderList,null,4)}`)\n        // console.log(`orderedList:${JSON.stringify(formData.orderedProductList,null,4)}`)\n        \n        let emptyOrderListObj = []\n        emptyOrderListObj = updatedOrderList.filter(prod=>(prod.sku===\"\"\n                                                    ||prod.productFullName===\"\"\n                                                    ||prod.quantity===\"\"))\n\n        //Check for Empty Order List\n        if(emptyOrderListObj.length>0){\n            return alert('Empty Field/s')\n        }\n\n        // Status-wise Order List update\n        if(formData.status===\"failed\"){\n            updatedOrderList = []\n        }else if(formData.status===\"fulfilled\"){\n            updatedOrderList = [...formData.orderedProductList]\n        }\n\n        // Invalid Partial Status input check\n        if(formData.status===\"partial\"){\n            let allQtyZeroBool = true\n            let noQtyChangeBool = true\n\n            updatedOrderList.map((item,index)=>{\n                // All qty zero flag check\n                `${item.quantity}`==='0'?\n                    allQtyZeroBool=allQtyZeroBool && true \n                    :\n                    allQtyZeroBool=allQtyZeroBool && false;\n                \n                // All qty same as ordered check\n                `${item.quantity}`===formData.orderedProductList[index].quantity?\n                    noQtyChangeBool = noQtyChangeBool && true\n                    :\n                    noQtyChangeBool = noQtyChangeBool && false;\n                }\n            )\n\n            // Partial to Failed Alert\n            if(allQtyZeroBool){\n                return alert('All prodcut quantity zero:\\nSet status to Failed')\n            }\n\n            // Partial to Fulfilled Alert\n            if(noQtyChangeBool){\n                return alert('Partial status invalid:\\nSet Status to Fulfilled')\n            }\n        }\n\n\n        // Total Cost Zero check for Partial and Fulfilled status\n        if(formData.status!==\"failed\" && `${formData.totalCost}`==='0' ){\n            return alert('Invalid Total Cost')\n        }\n\n\n        // Invalid status check\n        if( formData.status===\"\" \n            || (formData.status!==\"partial\" && formData.status!==\"fulfilled\" && formData.status!==\"failed\") \n            || !Array.isArray(updatedOrderList)\n            ){\n            return alert(`Please enter valid data`)\n        }else{\n            const updatedInfo = {\n                ...formData,\n                recievedProductList: updatedOrderList,\n            }\n            \n            // console.log(`formData:${JSON.stringify(updatedInfo,null,4)}`)\n            \n            dispatch(updateDemandSlip(updatedInfo))\n            \n        }\n    }\n    /////////////////////////////////////////////////\n    //////// Hooks //////////////////////////////////\n    ////////////////////////////////////////////////\n\n    // useEffect(()=>{\n    //     console.log(`iV:${JSON.stringify(initialValue,null,4)}`)\n    // },[])\n\n    useEffect(()=>{\n        if(isSuccess && updatedDataFlag){\n            // dispatch(resetOrders())\n            dispatch(getFilteredDemandSlips())\n\n            if(isSuccess){\n                dispatch(resetAfterNewDemandSlip())\n                // setNewDSFlag(true)\n                // passNextFlag(true)\n                // setToggleFlag(false)\n            }\n        }\n    },[isSuccess, updatedDataFlag])\n\n  return (\n    <>\n    <div className=\"card-row\">\n            <div className=\"card-element\">\n\n            <h3>{initialValue.ticketNumber}</h3>\n            {(isAdmin||isManager) && \n            <h3>{initialValue?.username}</h3>\n            }\n            </div>\n    </div>\n    <br />\n    <div className=\"card-row\">\n        <div className=\"card-element\">\n            <h3>Delivery Partner</h3>\n            <p>{initialValue.deliveryPartnerName}</p>\n        </div>\n\n        <div className=\"card-element\">\n            <h3>Distributor</h3> \n            <p>{initialValue.distributorName}</p>\n        </div>\n    </div>\n    <br />\n\n    {/* <div className='card-container' style={{padding:\"0\", border:\"none\"}}> */}\n        \n        <form onSubmit={onSubmit} style={{width:`100%`}}>\n            <div className=\"form-group\">\n                    <label>Status</label>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"status\" \n                            id={`${initialValue.ticketNumber} partial`} \n                            value=\"partial\"\n                            defaultChecked={initialValue.status===\"partial\"?true:false}\n                            onChange={onChange} />\n                        <label htmlFor={`${initialValue.ticketNumber} partial`}>Partial</label>\n                        </div>\n                    {/* </div> */}\n\n                    {/* <div className=\"radio-group\"> */}\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"status\" \n                            id={`${initialValue.ticketNumber} failed`} \n                            value=\"failed\"\n                            defaultChecked={initialValue.status===\"failed\"?true:false}\n                            onChange={onChange} />\n                        <label htmlFor={`${initialValue.ticketNumber} failed`}>Failed</label>\n                        </div>\n                    {/* </div> */}\n\n                    {/* <div className=\"radio-group\"> */}\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"status\" \n                            id={`${initialValue.ticketNumber} fulfilled`} \n                            value=\"fulfilled\"\n                            defaultChecked={initialValue.status===\"fulfilled\"?true:false}\n                            onChange={onChange} />\n                        <label htmlFor={`${initialValue.ticketNumber} fulfilled`}>Fulfilled</label>\n                        </div>\n                    {/* </div> */}\n\n                    </div>\n                </div>\n\n            {formData.status!==\"failed\" &&\n             <div className=\"form-group\">\n                <label htmlFor={`totalCost`}>Total Cost</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'totalCost'\n                    id={`totalCost`}\n                    value = {formData.totalCost}\n                    placeholder=\"Total Cost\"\n                    autoComplete='off'\n                    onChange={handleNumField} \n                    style={{width:`40%`}}\n                    />\n            </div>}\n\n            {formData.status===\"partial\" &&\n\n            <div className=\"form-group\">\n                <div className=\"card-grid-row\">\n                    <h3></h3>\n                    <label>Products</label>\n                    <h3>Ordered</h3>\n                    <h3>Recieved</h3>\n                </div>\n                {formData.recievedProductList.map((prod,k)=>{\n                    return(\n\n                    <div className=\"card-grid-row\" key={k}>\n                        <p>{k+1}.</p>\n\n                        {/* <p>{prod.sku}</p>\n                        \n                        <p>{prod.productFullName}</p> */}\n                        <div className=\"card-element\">\n\n                            <p style={{fontWeight:`bold`}}>{prod.productFullName}</p>\n                            <p>{prod.sku}</p>\n                        </div>\n\n                        <p>{prod.quantity}</p>\n                        \n                        <input\n                            type=\"text\" \n                            className='card-form-control'\n                            name=\"quantity\"\n                            id={`${initialValue.ticketNumber} ${k} quantity`}\n                            value = {formData.recievedProductList[k].quantity}\n                            placeholder=\"qty\"\n                            autoComplete='off'\n                            onChange={(e)=>onRecievedListChange(e,k)} \n                        />\n                        {/* <br /> */}\n                    </div>\n                        )\n                })}\n            </div>\n            }\n\n            <div className=\"form-group\">\n                <button type=\"submit\" className=\"submit-btn\"\n                    style={{width:`50%`, justifySelf:`center`}}\n                >\n                    Update\n                </button>\n            </div>\n        </form>\n    {/* </div> */}\n\n    </>\n  )\n}\n\nexport default UpdateOrderForm","import React, { useEffect, useState } from 'react'\nimport jsPDF from 'jspdf'\nimport autoTable from 'jspdf-autotable'\nimport { FiEdit2 } from 'react-icons/fi'\nimport { AiOutlineClose } from 'react-icons/ai'\nimport UpdateOrderForm from '../Forms/UpdateOrderForm'\nimport useAuth from '../../hooks/useAuth'\n\nfunction DemandSlipEditCard({info}) {\n    const {isAdmin, isManager} = useAuth()\n\n    const [editFlag, setEditFlag] = useState(false)\n\n    const pdfBodyData = info.orderedProductList.map((order)=>{\n      return [order.productFullName,order.quantity]\n    })\n\n    const ticketDate = info.ticketNumber.slice(3,5)+\"-\"+info.ticketNumber.slice(5,7)+\"-\"+info.ticketNumber.slice(7) \n    \n    // useEffect(()=>{\n    //   console.log(Array.isArray(pdfBodyData))\n    //   console.log(`\\npdfBodyData:${JSON.stringify(info,null,4)}`)\n    // },[])\n\n    const addHeaderAndFooter = doc => {\n      const pageCount = doc.internal.getNumberOfPages()\n      doc.setFont('helvetica', 'normal')\n      for (var i = 1; i <= pageCount; i++) {\n        doc.setPage(i)\n        doc.setFontSize(17)\n        doc.text('NAS',doc.internal.pageSize.width/2,40,{align:\"center\"})\n        \n        doc.setFontSize(10)\n        doc.text('Demand Reciept / Quotation',doc.internal.pageSize.width/2,55,{align:\"center\"})\n        \n        doc.text(20,75,`TID: ${info.ticketNumber}`)\n      \n        doc.text(20,90,`Date: ${ticketDate}`)\n        \n        // doc.text(20,105,`Dist.: ${testData.distributorName}`)\n  \n        doc.setFontSize(8)\n        \n        doc.text('Page ' + String(i) + ' of ' + String(pageCount), doc.internal.pageSize.width / 2,  doc.internal.pageSize.height - 20, {\n          align: 'center'\n        })\n        doc.text('This is an auto generated quotation', doc.internal.pageSize.width / 2,  doc.internal.pageSize.height - 10, {\n          align: 'center'\n        })\n      }\n    }\n\n    const handlePDFGenerate=()=>{\n\n      const headerData = [\"Product\",\"Qty\"]\n  \n      var doc = new jsPDF('p','pt',[201,470])\n  \n      doc.setProperties({\n          title: `DemandSlip${info.ticketNumber}`\n      });    \n      \n      autoTable(doc,{\n        startY:105,\n        margin:{left:20,top:105},\n        rowPageBreak:\"avoid\",\n        tableWidth:161,\n        theme:\"plain\",\n        headStyles:{halign:\"center\"},\n        // bodyStyles:{lineWidth:1},\n        columnStyles: { 1: { cellWidth:50, halign:'center'} },\n        head:[headerData],\n        body: pdfBodyData})\n  \n      addHeaderAndFooter(doc)\n  \n      doc.output('dataurlnewwindow',{filename:`DemandSlip${info.ticketNumber}`})\n      doc.save(`DemandSlip${info.ticketNumber}`)\n    }\n\n  return (\n    <>\n    \n    <div className='ds-slip-box'>\n        \n        <div className='edit-btn' \n            onClick={()=>setEditFlag(!editFlag)}>\n            {editFlag?<AiOutlineClose />:<FiEdit2 />}\n        </div>\n\n      {editFlag?\n      <div style={{width:`100%`, height:'100%'}}>\n        <UpdateOrderForm initialValue={info} setFlag={setEditFlag}/>\n      </div>\n      :\n      <>\n      <div style={{width:`100%`}}>\n        <div className=\"card-row\">\n            <div className=\"card-element\">\n\n            <h3>{info.ticketNumber}</h3>\n            {(isAdmin||isManager) && \n            <h3>{info?.username}</h3>\n            }\n            </div>\n        </div>\n\n        <br />\n\n        <div className=\"card-row\">\n            <div className=\"card-element\">\n                <h3>Delivery Partner</h3>\n                <p>{info.deliveryPartnerName}</p>\n            </div>\n\n            <div className=\"card-element\">\n                <h3>Distributor</h3> \n                <p>{info.distributorName}</p>\n            </div>\n        </div>\n\n        <br />\n\n        <div className=\"card-grid-row\">\n            <h3></h3>\n            <h3>Products</h3>\n            <h3>Ordered</h3> \n        </div>\n\n        {/* <div className='ds-new-col'> */}\n            {info.orderedProductList?.map((prod,i)=>\n                <div className=\"card-grid-row\" key={i}>\n                    <p>{i+1}.</p>\n\n                    <div className=\"card-element\">\n\n                        <p style={{fontWeight:`bold`}}>{prod.productFullName}</p>\n                        <p>{prod.sku}</p>\n                    </div>\n\n                    <p>{prod.quantity}</p> \n            </div>\n            )}\n\n        <br />\n\n      </div>\n\n        <div className=\"pdf-btn\"\n          onClick={(e)=>handlePDFGenerate()}\n          >\n          Generate PDF\n        </div>\n      </>\n      }\n    </div>\n    </>\n  )\n}\n\nexport default DemandSlipEditCard","import React,{useEffect, useState} from 'react'\nimport DemandSlipCard from '../../components/Cards/DemandSlipCard'\nimport useAuth from '../../hooks/useAuth'\n\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa6\";\nimport DemandSlipEditCard from '../../components/Cards/DemandSlipEditCard';\n\nfunction AllOrderPagination({dataList, isLoaded, pendingPageFlag=false}) {\n    const { isManager } = useAuth()\n\n    const dots = `...`\n\n    const cardsPerPageLimit = 50\n\n    const [currentPage, setCurrentPage] = useState(1)\n\n    const lastIndex = currentPage * cardsPerPageLimit\n    const firstIndex = lastIndex - cardsPerPageLimit\n\n    const displayDataList = dataList.slice(firstIndex, lastIndex)\n\n    const numPages = Math.ceil(dataList.length / cardsPerPageLimit)\n\n    const nums = [...Array(numPages+1).keys()].slice(1)\n\n    const [paginationArray, setPaginationArray] = useState([])\n\n    ////////////////////////////////////////////////////\n    ////////////////Functions///////////////////////////\n    ////////////////////////////////////////////////////\n    const handlePrevClick=()=>{\n        if(currentPage!==1){\n            setCurrentPage(currentPage-1)\n        }else{\n            setCurrentPage(1)\n        }\n    }\n\n    const handleNextClick=()=>{\n        if(currentPage!==numPages){\n            setCurrentPage(currentPage+1)\n        }else{\n            setCurrentPage(numPages)\n        }\n    }\n\n    const handleCurrentClick=(pageNum)=>{\n        setCurrentPage(pageNum)\n    }\n\n    ////////////////////////////////////////////////////\n    ////////////////Hooks///////////////////////////////\n    ////////////////////////////////////////////////////\n\n    useEffect(()=>{\n        if(numPages<8){\n            setPaginationArray(nums)\n        }else{\n            let leftPageNumArray = Array.from(Array(5), (_, i) => i+1)\n            setPaginationArray([...leftPageNumArray, dots, numPages])\n        }\n\n        setCurrentPage(1)\n\n    },[isLoaded, dataList])\n\n    useEffect(()=>{\n        // console.log(`currentPage:${currentPage}`)\n        // console.log(`lastIndex:${lastIndex}`)\n        // console.log(`firstIndex:${firstIndex}`)\n        \n        if(numPages<8){\n            setPaginationArray(nums)\n        }\n        else{   \n            if(currentPage<=3){\n                // console.log(`left`)\n                let leftPageNumArray = Array.from(Array(5), (_, i) => i+currentPage)\n                setPaginationArray([...leftPageNumArray, dots, numPages])\n            }\n            else if(currentPage>3 && numPages-currentPage>4 ){\n                // console.log(`mid`)\n                let middlePageNumArray = Array.from(Array(3), (_, i) => i+currentPage-1)\n                setPaginationArray([1,dots,...middlePageNumArray, dots, numPages])\n            }else if(numPages-currentPage<=4){\n                // console.log(`right`)\n                let rightPageNumArray = Array.from(Array(5), (_, i) => i+numPages-4)\n                setPaginationArray([1, dots, ...rightPageNumArray])\n            }\n        }\n    },[currentPage])\n    \n    // useEffect(()=>{\n    //     console.log(JSON.stringify(paginationArray,null,4))\n    // },[paginationArray])\n    \n\n  return (\n    <>\n    {/* Pagination Bars */}\n    {numPages>1 &&\n    <div className=\"ds-filter-container\"\n        style={{height:`auto`, \n            marginBottom:`3vh`\n        }}\n    >\n        <div className=\"ds-pagination-container\">\n            \n            {/* Previous Btn */}\n            <div className={`ds-page-btn ${currentPage!==1?``:`ds-page-inactive`}`} \n                onClick={()=>handlePrevClick()}\n            >\n                <FaAngleLeft style={{fontSize:`1rem`}}/>\n            </div>\n\n            {/* Pagination Numbers */}\n            {paginationArray.map((number,index)=>{\n                return(\n                    <React.Fragment key={index}>\n                        {number===dots? \n                        <div className={`ds-page-btn ds-page-inactive`}\n                            style={{color:`black`}}\n                        >\n                            {number}\n                        </div>\n                        :\n                        <div className={`ds-page-btn \n                            ${number===currentPage?\"ds-page-btn-active\":\"\"}\n                            `} \n                            onClick={()=>handleCurrentClick(number)}\n                            >\n                            {number}\n                        </div>\n                        }\n                    </React.Fragment>\n                )\n            })\n            }\n\n            {/* Next Btn */}\n            <div className={`ds-page-btn ${currentPage!==numPages?``:`ds-page-inactive`}`} \n                onClick={()=>handleNextClick()}\n            >\n                <FaAngleRight style={{fontSize:`1rem`}}/>\n            </div>\n\n        </div>\n    </div>\n    }\n\n    {/* Cards */}\n    <div className=\"ds-filter-data-container\">\n        <div className=\"ds-content ds-card-content\">\n        {displayDataList.length>0 &&\n            displayDataList.map((order,key)=>{\n            return (\n                <React.Fragment key={key}>\n                    {\n                        pendingPageFlag?\n                        <DemandSlipEditCard info={order}/>\n                        :\n                        <DemandSlipCard info={order}\n                            partialFlag={order.status==='partial'}\n                        />\n                    }\n                </React.Fragment>\n                )\n            })\n            \n        }\n        {isLoaded && dataList.length===0 &&\n\n            <div style={{gridColumn:\"1/span 3\"}}>\n                <h1>No Orders {isManager?`Today`:``}</h1>\n            </div>\n        }\n        \n        </div>\n    \n    </div>\n\n\n    <br />\n\n    {/* Pagination Bars */}\n    {numPages>1 &&\n    <div className=\"ds-filter-container\"\n        style={{height:`auto`, \n            marginBottom:`3vh`\n        }}\n    >\n        <div className=\"ds-pagination-container\">\n\n            \n            <div className={`ds-page-btn ${currentPage!==1?``:`ds-page-inactive`}`} onClick={()=>handlePrevClick()}>\n                <FaAngleLeft style={{fontSize:`1rem`}}/>\n            </div>\n\n            {paginationArray.map((number,index)=>{\n                return(\n                    <React.Fragment key={index}>\n                        {number===dots? \n                        <div className={`ds-page-btn ds-page-inactive`}\n                            style={{color:`black`}}\n                        >\n                            {number}\n                        </div>\n                        :\n                        <div className={`ds-page-btn \n                            ${number===currentPage?\"ds-page-btn-active\":\"\"}\n                            `} \n                            onClick={()=>handleCurrentClick(number)}\n                            >\n                            {number}\n                        </div>\n                        }\n                    </React.Fragment>\n                )\n            })\n            }\n\n            <div className={`ds-page-btn ${currentPage!==numPages?``:`ds-page-inactive`}`} onClick={()=>handleNextClick()}>\n                <FaAngleRight style={{fontSize:`1rem`}}/>\n            </div>\n        </div>\n    </div>\n    }\n    </>\n  )\n}\n\nexport default AllOrderPagination","import React, { useEffect, useState, useRef } from 'react'\n\nimport \"./DemandSlip.css\"\nimport QuickProdSearchForm from '../../components/Forms/QuickProdSearchForm'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllDemandSlips, getFilteredDemandSlips } from '../../features/orders/orderSlice'\nimport Loader from '../../components/Loader/Loader'\nimport LoginAgainModal from '../../components/Modals/LoginAgainModal'\nimport useAuth from '../../hooks/useAuth'\nimport { resetProducts } from '../../features/products/productSlice'\nimport { AiOutlineClose } from 'react-icons/ai'\nimport { getAllUsers } from '../../features/users/usersSlice'\nimport UserDropdown from '../../components/Dropdown/UserDropdown'\nimport AllOrderPagination from './AllOrderPagination'\n\nfunction DemandSlip() {\n  const dispatch = useDispatch()\n\n  const { isAdmin, isManager } = useAuth()\n  \n  const dateInputRef = useRef(null);\n\n  const {token} = useSelector((state)=>state.auth)\n\n  const {prodCodeList} = useSelector((state)=>state.product)\n  \n  const {usersList} = useSelector((state)=>state.users)\n\n  const { orderData, \n          pendingOrderList,\n          partialOrderList,\n          failedOrderList,\n          fulfilledOrderList,\n          isSuccess,\n          isLoading } = useSelector((state)=>state.orders)\n\n  const usernameList = [`all`, ...usersList.map(user=>user.username)]\n\n  const [createFlag, setCreateFlag] = useState(false)\n  const [allFlag, setAllFlag] = useState(true)\n  const [pendingFlag, setPendingFlag] = useState(false)\n  const [fulfilledFlag, setFulfilledFlag] = useState(false)\n  const [failedFlag, setFailedFlag] = useState(false)\n  const [partialFlag, setPartialFlag] = useState(false)\n\n  const [legendFlag, setLegendFlag] = useState(false)\n\n  const [filterParams,setFilterParams] = useState({\n    rawDate:'',\n    filterDate:'',\n    filterPublisherUsername:'',\n    filterStatus:'',\n    filterTicketNum:'',\n    accessLevel: isManager\n  })\n\n  const [filterUsername, setFilterUsername] = useState('')\n\n  /////////////////////////////////////////////////\n  //////// Functions /////////////////////////////\n  ////////////////////////////////////////////////\n\n  const onFilterChange=(e)=>{\n    if(e.target.name==='rawDate'){\n      const fD = handleDateFilter(e.target.value)\n      console.log(`fD:${fD}`)\n\n      setFilterParams((prevState)=>({\n          ...prevState,\n          filterDate:fD\n      }))\n    }\n    \n    setFilterParams((prevState)=>({\n      ...prevState,\n      [e.target.name]:e.target.value\n  }))\n  }\n\n  const handleNumField = (e) => {\n    const value = e.target.value.replace(/\\D/g, \"\");\n    setFilterParams((prevState)=>({...prevState, [e.target.name]:value}));\n  };\n\n  const handleFilterClear =()=>{\n    setFilterParams({\n      rawDate:'',\n      filterDate:'',\n      filterPublisherUsername:'',\n      filterStatus:'',\n      filterTicketNum:'',\n      accessLevel: isManager\n    })\n\n    setFilterUsername('')\n  }\n\n  const handleFilterSearch =()=>{\n    // console.log(`filterParams:${JSON.stringify(filterParams,null,4)}`)\n    dispatch(getFilteredDemandSlips(filterParams))\n  }\n  \n  const handleCreateClick=()=>{\n    setCreateFlag(true)\n    \n    setAllFlag(false)\n    setFailedFlag(false)\n    setPartialFlag(false)\n    setPendingFlag(false)\n    setFulfilledFlag(false)\n  }\n\n  const handleAllClick=()=>{\n    setAllFlag(true)\n    \n    setCreateFlag(false)\n    setFailedFlag(false)\n    setPartialFlag(false)\n    setPendingFlag(false)\n    setFulfilledFlag(false)\n    \n  }\n  \n  const handlePendingClick=()=>{\n    setPendingFlag(true)\n\n    setCreateFlag(false)\n    setAllFlag(false)\n    setFailedFlag(false)\n    setPartialFlag(false)\n    setFulfilledFlag(false)\n  }\n  \n  const handlePartialClick=()=>{\n    setPartialFlag(true)\n    \n    setCreateFlag(false)\n    setAllFlag(false)\n    setPendingFlag(false)\n    setFailedFlag(false)\n    setFulfilledFlag(false)\n  }\n  \n  const handleFailedClick=()=>{\n    setFailedFlag(true)\n    \n    setCreateFlag(false)\n    setAllFlag(false)\n    setPendingFlag(false)\n    setPartialFlag(false)\n    setFulfilledFlag(false)\n  }\n  \n  const handleFulfilledClick=()=>{\n    setFulfilledFlag(true)\n    \n    setCreateFlag(false)\n    setAllFlag(false)\n    setPendingFlag(false)\n    setFailedFlag(false)\n    setPartialFlag(false)\n  }\n  \n  const handleLegendClick=()=>{\n    setLegendFlag(!legendFlag)\n  }\n  \n  const handleDateFilter=(rawData)=>{\n    if(rawData!==''){\n      // Get filtered order data\n      let inputYear = rawData.slice(0,4)\n      let inputMonth = rawData.slice(5,7)\n      let inputDay = rawData.slice(8)\n      let formatterFilterDate = inputDay+inputMonth+inputYear\n      \n      return formatterFilterDate\n      // console.log(`formatted Date:${inputDay+inputMonth+inputYear}`)\n      // dispatch(getFilteredDemandSlips(filterDate)) \n    }\n  }\n  \n  ///////////////////////////////////////////////////////\n  ///////////////////////Hooks///////////////////////////\n  ///////////////////////////////////////////////////////\n  \n  // Reset Prod Search Results and Load Demand Slips\n  useEffect(()=>{\n    if(isAdmin || isManager){\n      dispatch(getAllDemandSlips())\n      dispatch(getAllUsers())\n    }else{\n      dispatch(getFilteredDemandSlips())\n    }\n    \n    dispatch(resetProducts())\n    \n  },[])\n  \n  // Set Filter Username\n  useEffect(()=>{\n    if(filterUsername!=='all'){\n      setFilterParams((prevState)=>({\n        ...prevState,\n        filterPublisherUsername:filterUsername\n      }))\n    }else{\n      setFilterParams((prevState)=>({\n        ...prevState,\n        filterPublisherUsername:''\n      }))\n    }\n\n  },[filterUsername])\n\n  return (\n    <>\n    {!token && <LoginAgainModal />}\n    {isLoading && <Loader/>}\n    <div className='container' \n      style={{\n        // border:'1px solid red', \n        justifyContent:\"flex-start\",\n        \n      }}\n    >\n      <>\n      {legendFlag &&\n        <>\n        <div className=\"modal-backdrop\" ></div> \n        <div className='modal-container'>\n            <div className=\"edit-btn\"\n                onClick={()=>handleLegendClick()}\n            >\n            <AiOutlineClose />\n            </div>\n            <div className='ds-new-box'>\n              {prodCodeList.map((item,index)=>{\n                return(\n                  <p key={index}><span style={{fontWeight:`bold`}}>{item.itemCode}: </span>{item.productName}</p>\n                )\n              })}\n            </div>\n        </div>\n      </>\n      }\n\n      <div className=\"ds-filter-container\">\n        \n        <div className={`ds-filter-btn ${createFlag?\"ds-filer-btn-active\":\"\"}`}\n          onClick={()=>handleCreateClick()}\n        >\n          Create          \n        </div>\n\n        <div className={`ds-filter-btn ${allFlag?\"ds-filer-btn-active\":\"\"}`}\n          onClick={()=>handleAllClick()}\n        >\n          All\n        </div>\n        \n        <div className={`ds-filter-btn ${pendingFlag?\"ds-filer-btn-active\":\"\"}`}\n          onClick={()=>handlePendingClick()}\n        >\n          Pending\n        </div>\n        \n        <div className={`ds-filter-btn ${partialFlag?\"ds-filer-btn-active\":\"\"}`}\n          onClick={()=>handlePartialClick()}\n        >\n          Partial\n        </div>\n\n        <div className={`ds-filter-btn ${failedFlag?\"ds-filer-btn-active\":\"\"}`}\n          onClick={()=>handleFailedClick()}\n        >\n          Failed\n        </div>\n        \n        <div className={`ds-filter-btn ${fulfilledFlag?\"ds-filer-btn-active\":\"\"}`}\n          onClick={()=>handleFulfilledClick()}\n        >\n          Fulfilled        \n        </div>\n\n        <div className={`ds-filter-btn ${legendFlag?\"ds-filer-btn-active\":\"\"}`}\n          onClick={()=>handleLegendClick()}\n        >\n          Legend        \n        </div>\n\n\n      </div>\n\n      {(allFlag||pendingFlag||failedFlag||partialFlag||fulfilledFlag) \n        &&\n        <div className=\"ds-filter-container\"\n          style={{height:`auto`, marginBottom:`3vh`}}\n          >\n\n        {(isAdmin || isManager) && \n        <>\n          {/* Filter Date Input */}\n          <input\n            className='date-input-box'\n            name='rawDate'\n            type=\"date\"\n            value={filterParams.rawDate}\n            onChange={onFilterChange}\n            ref={dateInputRef}\n          />\n\n          {/* Username Dropdown button */}\n          <div className='ds-filter-dropdown-container'>\n            <UserDropdown\n              value={filterUsername} \n              dataList={usernameList} \n              passUsername={setFilterUsername}\n              />\n          </div>\n        </>\n        }\n\n        {/* Ticket Number Search*/}\n          <input \n            className='ds-filter-form-control'\n            type='text'\n            name='filterTicketNum'\n            placeholder=\"Ticket Number\"\n            value={filterParams.filterTicketNum}\n            onChange={handleNumField}\n          />\n\n        {/* Filter Submit Button */}\n        <div className='ds-filter-btn' onClick={()=>handleFilterSearch()}>Search</div>\n      \n        {/* Clear Filter Button */}\n        <div className='ds-filter-btn' onClick={()=>handleFilterClear()}>Clear</div>\n      \n      </div>\n    }\n      \n      {/* All results count */}\n      {!createFlag &&\n        <div className=\"ds-filter-container\"\n          style={{height:`auto`, marginBottom:`5vh`}}\n        >\n          {allFlag && \n            <p style={{fontWeight:`bold`}}>Results ({orderData.length})</p>}\n          \n          {pendingFlag && \n            <p style={{fontWeight:`bold`}}>Results ({orderData.filter((item)=>item.status==='pending').length})</p>}\n          \n          {failedFlag && \n            <p style={{fontWeight:`bold`}}>Results ({orderData.filter((item)=>item.status==='failed').length})</p>}\n          \n          {partialFlag && \n            <p style={{fontWeight:`bold`}}>Results ({orderData.filter((item)=>item.status==='partial').length})</p>}\n          \n          {fulfilledFlag && \n            <p style={{fontWeight:`bold`}}>Results ({orderData.filter((item)=>item.status==='fulfilled').length})</p>}\n        \n        </div>\n      }\n\n        {createFlag &&\n        <div className=\"ds-filter-data-container\">\n        \n          {/* Create Demand Slip */}\n          <>\n          <div className=\"ds-content\"\n          >\n          <div className=\"ds-search-container\">\n              <QuickProdSearchForm setToggleFlag={setCreateFlag} passNextFlag={setPendingFlag} />\n          </div>\n          </div>\n\n          </>\n        </div>\n        }\n        \n\n        {/* All Orders */}\n        {allFlag &&\n        <AllOrderPagination dataList={orderData} isLoaded={isSuccess}/>\n        }\n\n        {/* Pending Orders */}\n        {pendingFlag &&\n        <AllOrderPagination dataList={pendingOrderList} isLoaded={isSuccess}\n          pendingPageFlag={true}\n        />\n        }\n\n        {/* Partial Orders */}\n        {partialFlag &&\n        <AllOrderPagination dataList={partialOrderList} isLoaded={isSuccess}/>\n        }\n\n        {/* Failed Orders */}\n        {failedFlag &&\n        <AllOrderPagination dataList={failedOrderList} isLoaded={isSuccess}/>\n        }\n\n        {/* Fulfilled Orders */}\n        {fulfilledFlag &&\n        <AllOrderPagination dataList={fulfilledOrderList} isLoaded={isSuccess}/>\n        }\n        </>\n    </div>\n    </>\n  )\n} \n\nexport default DemandSlip","import { BrowserRouter as Router, HashRouter, Routes, Route } from 'react-router-dom'\n\nimport Navbar from './components/Navbar/Navbar';\nimport QuickRes from './pages/IndiaMartRes/QuickRes';\nimport Products from './pages/Products/Products';\nimport Landing from './pages/Landing/Landing';\nimport Product from './pages/Products/Product';\nimport NotFound from './pages/NotFound/NotFound';\nimport Login from './pages/Login/Login';\nimport Users from './pages/UserManagement/Users';\n\nimport './App.css';\nimport Footer from './components/Footer/Footer';\nimport DemandSlip from './pages/DemandSlip/DemandSlip';\n\nfunction App() {\n  return (\n    <>\n    <HashRouter>\n\n    <div className=\"container\">\n      <Navbar />\n     \n      <Routes>\n        <Route path=\"/\" element={<Landing />} />\n        <Route path='/login' element={<Login />} />\n        <Route path=\"/indiamart-templates\" element={<QuickRes />} />\n        <Route path=\"/products\" element={<Products />} />\n        <Route path='/products/:sku' element={<Product /> }/> \n        <Route path='/user-management' element={<Users />} />\n        <Route path='/demand-slip-generator' element={<DemandSlip />} />\n\n        <Route path='*' element={<NotFound /> } />\n      </Routes>\n\n      <Footer />\n    </div>\n    \n    </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store';\nimport App from './App';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}