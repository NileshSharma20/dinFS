{"version":3,"sources":["features/template/templateService.js","features/template/templateSlice.js","features/products/productService.js","features/auth/authService.js","features/users/usersService.js","features/users/usersSlice.js","features/auth/authSlice.js","features/products/productSlice.js","features/orders/orderService.js","features/orders/orderSlice.js","app/store.js","components/Navbar/Navbar.jsx","components/Forms/CopyForm.jsx","pages/IndiaMartRes/QuickRes.jsx","components/Dropdown/Dropdown.jsx","components/Loader/Loader.jsx","pages/Products/Products.jsx","hooks/useAuth.js","pages/Landing/Landing.jsx","components/Forms/ProductForm.jsx","pages/Products/Product.jsx","pages/NotFound/NotFound.jsx","components/Forms/LoginForm.jsx","pages/Login/Login.jsx","components/Modals/LoginAgainModal.jsx","components/Forms/UserForm.jsx","components/Cards/UserCard.jsx","pages/UserManagement/Users.jsx","components/Footer/Footer.jsx","components/Forms/QuickProdSearchForm.jsx","components/Dropdown/UserDropdown.js","components/Cards/DemandSlipCard.jsx","components/Forms/UpdateOrderForm.jsx","components/Cards/DemandSlipEditCard.jsx","pages/DemandSlip/AllOrderPagination.jsx","pages/DemandSlip/DemandSlip.jsx","App.js","index.js"],"names":["templateService","formSubmit","formRes","returnData","customer_name","pricePerUnit","unit","initialState","formResponseData","pricePerUnitOE","excDeliveryCharge","product","responseTemplate","isError","isSuccess","isLoading","message","formResponseSubmit","createAsyncThunk","async","formResponse","thunkAPI","error","response","data","toString","rejectWithValue","templateSlice","createSlice","name","reducers","resetTemplate","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","prod_URI","process","REACT_APP_LOCAL_URI","productService","createProductDataJSON","csvFileData","length","console","log","map","prod","sku","metaData","iC","itemCode","toUpperCase","replace","cleanedVM","spaceRemovedVM","vehicleModel","delimitedVM","split","slice","vM","spaceRemovedBC","brandCompany","bC","spaceRemovedPN","partNum","pN","join","delimitedCM","compatibileModels","prodClone","Object","assign","mrp","getProducts","axios","get","concat","itemData","searchProducts","searchKey","item","productFullName","productName","searchSKUProducts","skuOnlyFlag","post","updateProduct","token","_ref","config","headers","Authorization","patch","prodInfo","auth_URI","authService","healthCheck","setUserCredentials","userData","sessionStorage","setItem","JSON","stringify","refreshToken","logoutUser","removeItem","users_URI","usersService","getAllUsers","updateUser","userInfo","usersList","_","getState","auth","err","status","dispatch","usersSlice","resetUser","_JSON$parse","parse","getItem","accessToken","username","roles","res","errorStatus","refreshResult","logOutUser","resetProducts","authSlice","resetAuth","verified","prodCodeList","productData","productSKUData","noMatch","searchSKUProductsOnly","productSlice","resetSearchProducts","order_URI","orderService","getAllDemandSlips","getFilteredDemandSlips","filterParams","fullDate","accessLevel","filterQueryString","filterDate","filterPublisherUsername","filterStatus","filterTicketNum","page","limit","currDate","Date","ticketDate","getDate","ticketMonth","getMonth","ticketYear","getFullYear","generateDemandSlip","demandSlipData","updateDemandSlip","updatedData","_ref2","ticketNumber","orderData","newDemandSlip","pageCount","totalDataLength","nextPage","prevPage","currentPage","updatedDataFlag","arguments","undefined","orderSlice","resetOrders","resetAfterNewDemandSlip","_action$payload$next","_action$payload$prev","next","prev","_action$payload$next2","_action$payload$prev2","store","configureStore","reducer","authReducer","productReducer","template","templateReducer","users","usersReducer","orders","ordersReducer","Navbar","navigate","useNavigate","useDispatch","useSelector","_jsxs","className","style","justifyContent","children","_jsx","BiMenu","onClick","BiLogOut","CopyForm","formData","setFormData","useState","excDeliveryCharges","onChange","e","prevState","target","value","_Fragment","onSubmit","preventDefault","type","id","placeholder","autoComplete","htmlFor","QuickRes","successPopup","setSuccessPopup","ResponseList","text","index","copyText","navigator","clipboard","writeText","setTimeout","AnimatePresence","motion","div","initial","opacity","animate","exit","transition","duration","Dropdown","dataList","passItemCode","boxRef","useRef","isActive","setIsActive","selectedItem","setSelectedItem","useEffect","handler","event","current","contains","document","addEventListener","removeEventListener","ref","saveFile","handleItemClick","Loader","Products","showSKUFlag","setShowSKUFlag","prodNavFlag","setProdNavFlag","searchInput","setSearchInput","setItemData","skuData","setSKUData","onSKUChange","debouncedResults","debouce","cancel","width","fontWeight","AiOutlineSearch","alert","backgroundColor","_Object$keys","handleProductClick","compatibleModels","i","filter","keys","k","useAuth","isManager","isAdmin","isEmployee","decoded","jwtDecode","UserInfo","includes","Landing","pathname","path","handleNavigation","ProductForm","initialValue","setFlag","qty","updatedMetaData","setUpdatedMetaData","updatedModels","setUpdatedModels","onMetaDataChange","padding","border","display","flexDirection","model","onModelItemChange","modelList","splice","handleItemDelete","AiOutlineClose","handleAddItem","AiOutlinePlus","alignItems","field","React","Fragment","Product","params","useParams","editFlag","setEditFlag","filteredProduct","FiEdit2","NotFound","LoginForm","password","showPasswordFlag","setShowPasswordFlag","Login","LoginAgainModal","UserForm","_id","firstname","lastname","active","checkList","setCheckList","handleRoles","marginBottom","Array","isArray","defaultChecked","UserCard","_info$roles","info","role","Users","Footer","QuickProdSearchForm","_newDemandSlip$ordere","setToggleFlag","passNextFlag","newDSFlag","setNewDSFlag","deliveryPartnerName","distributorName","orderedProductList","quantity","updatedOrderList","setUpdatedOrderList","onOrderItemChange","orderList","orderItem","numValue","date","emptyOrderListObj","orderInfo","marginRight","alignSelf","newItem","addItemfromSearch","UserDropdown","passUsername","FaAngleDown","user","DemandSlipCard","_info$orderedProductL","partialFlag","statusColour","setStatusColour","createdTimeString","createdAt","updatedTimeString","updatedAt","totalCost","_info$recievedProduct","recievedProductList","UpdateOrderForm","allQtyZeroBool","noQtyChangeBool","updatedInfo","onRecievedListChange","tempList","intInputValue","parseInt","tempItem","justifySelf","DemandSlipEditCard","pdfBodyData","order","handlePDFGenerate","doc","jsPDF","setProperties","title","autoTable","startY","margin","left","top","rowPageBreak","tableWidth","theme","headStyles","halign","columnStyles","cellWidth","head","body","internal","getNumberOfPages","setFont","setPage","setFontSize","pageSize","align","String","height","addHeaderAndFooter","output","filename","save","AllOrderPagination","isLoaded","pendingPageFlag","cardsPerPageLimit","dots","numPages","setNumPages","nums","paginationArray","setPaginationArray","handlePrevClick","handleNextClick","handleCurrentClick","pageNum","leftPageNumArray","from","middlePageNumArray","rightPageNumArray","FaAngleLeft","fontSize","number","color","FaAngleRight","key","gridColumn","DemandSlip","dateInputRef","usernameList","createFlag","setCreateFlag","allFlag","setAllFlag","pendingFlag","setPendingFlag","fulfilledFlag","setFulfilledFlag","failedFlag","setFailedFlag","setPartialFlag","legendFlag","setLegendFlag","setFilterParams","rawDate","pageLimit","filterUsername","setFilterUsername","handleLegendClick","handleDateFilter","rawData","inputYear","inputMonth","fD","App","HashRouter","Routes","Route","element","container","getElementById","createRoot","render","StrictMode","Provider"],"mappings":"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","file":"static/js/main.88848cec.chunk.js","sourcesContent":["\n// Form Submit\nconst formSubmit = (formRes) => {\n    let returnData = {}\n    if(formRes.customer_name===null \n        || formRes.pricePerUnit===null \n        || formRes.unit===null){\n        returnData = {\n            customer_name:\"\",\n            pricePerUnit:\"\",\n            unit:\"\"\n        }\n    }else{\n        returnData = formRes\n    }\n\n    return returnData\n  }\n\n  const templateService = {\n    formSubmit,\n    \n  }\n  \n  export default templateService","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport templateService from './templateService'\n\nconst initialState = {\n    formResponseData: {\n        customer_name:\"\",\n        pricePerUnit:\"\",\n        pricePerUnitOE:\"\",\n        excDeliveryCharge:\"\",\n        unit:\"\",\n        product:'',\n    },\n    responseTemplate:[{}],\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: '',\n  }\n\n\n// Form Response Submit\nexport const formResponseSubmit = createAsyncThunk(\n    'formSubmit',\n    async(formResponse, thunkAPI) =>{\n        try {\n            return await templateService.formSubmit(formResponse)\n        } catch (error) {\n            const message =\n            (error.response && error.response.data && error.response.data.message) ||\n            error.message ||\n            error.toString()\n        return thunkAPI.rejectWithValue(message) \n        }\n    }\n) \n\nexport const templateSlice = createSlice({\n    name: 'template',\n    initialState,\n    reducers: {\n      resetTemplate: (state) => initialState\n    },\n    extraReducers: (builder) => {\n      builder\n      //form response submit\n        .addCase(formResponseSubmit.pending, (state) => {\n          state.isLoading = true\n        })\n        .addCase(formResponseSubmit.fulfilled, (state, action) => {\n          state.isLoading = false\n          state.isSuccess = true\n          state.formResponseData = action.payload\n        })\n        .addCase(formResponseSubmit.rejected, (state, action) => {\n          state.isLoading = false\n          state.isError = true\n          state.message = action.payload\n          state.formResponseSubmit = null\n        })\n    },\n})\n\nexport const { resetTemplate } = templateSlice.actions\nexport default templateSlice.reducer","import axios from 'axios'\n\n// const prod_URI = 'https://api.dinmotoindia.com/api/prod/'\nconst main_URI = process.env.REACT_APP_LOCAL_URI \n                  || `https://api.dinmotoindia.com/api/`\n\nconst prod_URI = main_URI+'prod/'\n\n// Convert Product CSV Data to JSON Data\nconst createProductDataJSON = (csvFileData) => {\n    var returnData = []\n    if(csvFileData.length===0){\n        returnData=[]\n        console.log(`Error`)\n    }else{\n        returnData = \n        csvFileData.map((prod)=>{\n          var sku=\"\"\n          var metaData = []\n\n          const cleanedIC = prod.itemCode.toUpperCase()\n          const iC = cleanedIC.replace(/ /g,'')\n          // const iC = cleanedIC.split(\" \").join(\"\")\n          \n          let cleanedVM =\"\"\n          const spaceRemovedVM = prod.vehicleModel.replace(/ /g,\"\")\n\n          const delimitedVM = spaceRemovedVM.split('-',2)\n          if(delimitedVM.length>1){\n            cleanedVM = delimitedVM[0].slice(0,3)+delimitedVM[1]\n          }else{\n            cleanedVM = delimitedVM[0].slice(0,3)\n          }\n          const vM = cleanedVM.toUpperCase()\n\n          const spaceRemovedBC = prod.brandCompany.replace(/ /g,\"\")\n          const cleanedBC = spaceRemovedBC.slice(0,3)\n          const bC = cleanedBC.toUpperCase()\n\n          const spaceRemovedPN = prod.partNum.replace(/ /g,\"\")\n          const cleanedPN = spaceRemovedPN.split(\"-\").join(\"\")\n          const pN = cleanedPN.toUpperCase()\n\n          const delimitedCM = prod.compatibileModels.split(',')\n\n          sku = iC+\"-\"+vM+\"-\"+bC+\"-\"+pN\n\n          const prodClone = Object.assign({},prod)\n          delete prodClone.itemCode\n          delete prodClone.vehicleModel\n          delete prodClone.brandCompany\n          delete prodClone.partNum\n          delete prodClone.mrp\n          delete prodClone.compatibileModels\n\n          metaData = prodClone\n\n          return {\n            itemCode: iC,\n            vehicleModel: spaceRemovedVM,\n            brandCompany: spaceRemovedBC,\n            partNum: spaceRemovedPN,\n            mrp: prod.mrp.replace(/ /g,\"\"),\n            sku: sku,\n            compatibileModels: delimitedCM,\n            metaData: metaData\n          }\n        })\n    }\n\n    return returnData\n  }\n\n  // Get Products\n  const getProducts = async (itemData) => {\n    const response = await axios.get(prod_URI + `${itemData.itemCode}`)\n    // if(response.data){\n    //   localStorage.setItem('productData', JSON.stringify(response.data))\n    // }\n    return response.data\n  } \n\n  // Search Products\n  const searchProducts = async (searchKey) => {\n    const response = await axios.get(prod_URI +`search/${searchKey}`)\n\n    const res = response.data.map((item)=>{\n      var productFullName = item.productName+\" \"+item.vehicleModel+\" \"+item.brandCompany+\" \"+item.partNum\n      return {...item, productFullName:productFullName} \n    })\n\n    return res\n  } \n\n  // Search Products\n  const searchSKUProducts = async (itemData,skuOnlyFlag) => {\n    const response = await axios.post(prod_URI +`search/sku/${skuOnlyFlag}`, itemData)\n    const res = response.data.map((item)=>{\n      var productFullName = item.productName+\" \"+item.vehicleModel+\" \"+item.brandCompany+\" \"+item.partNum\n      return {...item, productFullName:productFullName} \n    })\n    // console.log(JSON.stringify(res,null,4))\n    return res\n  } \n\n  // Update Products\n  const updateProduct = async ({itemData,token}) => {\n    const config = {\n      headers: {\n          Authorization: `Bearer ${token}`\n      }\n    }\n\n    // console.log(`itemData SKU:${itemData.sku}`)\n    // console.log(`itemData prodInfo:${JSON.stringify(itemData.prodInfo,null,4)}`)\n\n    const response = await axios.patch(prod_URI +`${itemData.sku}`, itemData.prodInfo, config)\n\n    return response.data\n    // return itemData.sku\n  } \n\n  const productService = {\n    createProductDataJSON,  \n    getProducts,\n    searchProducts,\n    searchSKUProducts,\n    updateProduct\n  }\n  \n  export default productService","import axios from 'axios'\n\n// Live URI\n// const auth_URI = 'https://api.dinmotoindia.com/api/auth/'\n\n// Local URI\nconst main_URI = process.env.REACT_APP_LOCAL_URI \n                  || `https://api.dinmotoindia.com/api/`\n\nconst auth_URI = main_URI+'auth/'\n\n// Polling Function to check for Validity of Access Token\nconst healthCheck = async(token)=> {\n    const config = {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n      }\n    const response = await axios.get(auth_URI, config)\n    return response.data\n}\n\n// Set User Credentials from Access Token\nconst setUserCredentials = async (userData) => {\n    const response = await axios.post(auth_URI, userData)\n    if(response.data){\n        sessionStorage.setItem('token', JSON.stringify(response.data))\n    }\n    // console.log(`response:${JSON.stringify(response.data,null,4)}`)\n    return response.data\n}\n\n// Refresh Token\nconst refreshToken= async ()=>{\n    const response = await axios.get(auth_URI+\"refresh\")\n    return response\n}\n\n// Logout User\nconst logoutUser = () => {\n    sessionStorage.removeItem('token')\n}\n\nconst authService = {\n    healthCheck,\n    setUserCredentials,\n    refreshToken,\n    logoutUser,\n  }\n  \n  export default authService","import axios from 'axios'\n\n// const users_URI = 'https://api.dinmotoindia.com/api/users/'\n// const users_URI = 'http://localhost:5000/api/users/'\n\nconst main_URI = process.env.REACT_APP_LOCAL_URI \n                  || `https://api.dinmotoindia.com/api/`\n\nconst users_URI = main_URI+'users/'\n\nconst getAllUsers = async(token)=>{\n  const config = {\n    headers: {\n        Authorization: `Bearer ${token}`\n    }\n  }\n  const response = await axios.get(users_URI, config)\n  // console.log(`uri=${users_URI}`)\n\n  return response.data\n}\n\nconst updateUser = async({userInfo, token})=>{\n  const config = {\n    headers: {\n        Authorization: `Bearer ${token}`\n    }\n  }\n  \n  const response = await axios.patch(users_URI, userInfo, config)\n\n  return response.data\n} \n\nconst usersService = {\n    getAllUsers,\n    updateUser,\n  }\n  \nexport default usersService","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport usersService from './usersService'\nimport { refreshToken } from '../auth/authSlice'\n\nconst initialState = {\n    usersList: [],\n    isSuccess: false,\n    isError: false,\n    isLoading: false,\n    message: '',\n  }\n\nexport const getAllUsers = createAsyncThunk(\n    'users/getAllUsers',\n    async(_, thunkAPI) =>{\n        try {\n          try {\n            \n            const token = thunkAPI.getState().auth.token\n            return await usersService.getAllUsers(token) \n\n          } catch (err) {\n            \n            if(err.response.status === 403){\n              await thunkAPI.dispatch(refreshToken())\n\n              const token = thunkAPI.getState().auth.token\n              return await usersService.getAllUsers(token) \n            }\n          }\n        } catch (error) {\n            const message = (error.response && error.response.data && error.response.data.message) \n            || error.message || error.toString()\n\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)  \n\nexport const updateUser = createAsyncThunk(\n  'users/updateUser',\n  async(userInfo,thunkAPI)=>{\n    try {\n\n      try {  \n        const token = thunkAPI.getState().auth.token\n        return await usersService.updateUser({userInfo,token}) \n\n      } catch (err) {\n        \n        if(err.response.status === 403){\n          await thunkAPI.dispatch(refreshToken())\n          const token = thunkAPI.getState().auth.token\n          return await usersService.updateUser({userInfo,token}) \n        }\n      }\n    } catch (error) {\n      const message = (error.response && error.response.data && error.response.data.message) \n      || error.message || error.toString()\n\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n) \n\nexport const usersSlice = createSlice({\n    name: 'users',\n    initialState,\n    reducers: {\n      resetUser: (state) => initialState\n    },\n    extraReducers: (builder) => {\n      builder\n      // Get All Listed Users\n      .addCase(getAllUsers.pending, (state) => {\n        state.isError = false\n        state.isSuccess = false\n        state.message = \"\"\n        state.isLoading = true\n      })\n      .addCase(getAllUsers.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.usersList = action.payload\n        state.message = \"\"\n      })\n      .addCase(getAllUsers.rejected, (state, action) => {\n        state.usersList = []\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Update User Data\n      .addCase(updateUser.pending, (state) => {\n        state.isError = false\n        state.isSuccess = false\n        state.message = \"\"\n        state.isLoading = true\n      })\n      .addCase(updateUser.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.message = action.payload.message\n      })\n      .addCase(updateUser.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n    }\n})\n\nexport const { resetUser } = usersSlice.actions\nexport default usersSlice.reducer","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport authService from './authService'\nimport { resetUser } from '../users/usersSlice'\nimport { resetProducts } from '../products/productSlice'\n\n// Get user from sessionStorage\nconst token = JSON.parse(sessionStorage.getItem('token'))?.accessToken\n\n// Access Token : {UserInfo: \"username\":username, \"roles\":[roles]}\n\nconst initialState = {\n  token: token?token:null, // Access Token\n  username:\"\",\n  roles:[],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: '',\n}\n\nexport const healthCheck= createAsyncThunk(\n  'auth/healthCheck',\n  async(_,thunkAPI)=>{\n    try {\n        const accessToken = thunkAPI.getState().auth.token ? thunkAPI.getState().auth.token : null;\n        return await authService.healthCheck(accessToken)\n    } catch (error) {\n      const message = (error.response && error.response.data \n        && error.response.data.message) \n        || error.message || error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\nexport const setUserCredentials = createAsyncThunk(\n  'auth/setUserCredentials',\n  async(userData, thunkAPI) =>{\n      try {\n        const response = await authService.setUserCredentials(userData)\n        return response\n      } catch (error) {\n          const message = (error.response && error.response.data \n            && error.response.data.message) \n            || error.message || error.toString()\n            return thunkAPI.rejectWithValue(message)\n      }\n  }\n)  \n\nexport const refreshToken = createAsyncThunk(\n  'auth/refreshToken',\n  async(_,thunkAPI)=>{\n    try {\n      const accessToken = thunkAPI.getState().auth.token\n      const res = await authService.healthCheck(accessToken)\n\n      console.log(`res status:${JSON.stringify(res)}`)\n      \n      return res\n    } catch (error) {\n      \n      const errorStatus =  error.response.status\n      \n      if(errorStatus === 403){\n        try {\n          const refreshResult = await authService.refreshToken()\n          // console.log(`refreshSuccess:${JSON.stringify(refreshResult.data,null,4)}`)\n          return refreshResult?.data\n        } catch (err) {\n          const errStatus = err.response.status\n\n          if(errStatus){\n            const message = (err.response && err.response.data \n              && err.response.data.message) \n              || err.message || err.toString()\n\n            await thunkAPI.dispatch(logOutUser())\n\n            return thunkAPI.rejectWithValue(message)\n          }\n        }\n      }\n\n      console.log(`Error Status type: ${typeof errorStatus}`)\n    }\n  }\n  )\n\nexport const logOutUser = createAsyncThunk(\n  'auth/logOutUser',\n  async(_, thunkAPI) =>{\n      try {\n          thunkAPI.dispatch(resetUser())\n          thunkAPI.dispatch(resetProducts())\n          return authService.logoutUser()\n      } catch (error) {\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n\n        return thunkAPI.rejectWithValue(message)\n    }\n  }\n)  \n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    resetAuth: (state) => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      // Health Check\n      .addCase(healthCheck.pending, (state) => {\n        state.isError = false\n        state.isSuccess = false\n        state.isLoading = true\n      })\n      .addCase(healthCheck.fulfilled, (state, action) => {\n        state.verified = action.payload.verified\n        state.isLoading = false\n      })\n      .addCase(healthCheck.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Set User Credentials from Verified Access Token\n      .addCase(setUserCredentials.pending, (state) => {\n        state.isError = false\n        state.isSuccess = false\n        state.isLoading = true\n      })\n      .addCase(setUserCredentials.fulfilled, (state, action) => {\n        state.token = action.payload.accessToken\n        state.isLoading = false\n        state.isSuccess = true\n      })\n      .addCase(setUserCredentials.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Refresh Access Token\n      .addCase(refreshToken.pending, (state) => {\n        state.isError = false\n        state.isSuccess = false\n        state.isLoading = true\n        state.message = \"\"\n      })\n      .addCase(refreshToken.fulfilled, (state, action) => {\n        if(action.payload.accessToken){\n          state.token = action.payload.accessToken\n          sessionStorage.setItem('token', JSON.stringify(action.payload))\n        }\n        // console.log(`Success Paylod: ${JSON.stringify(action.payload,null,4)}`)\n        state.isLoading = false\n        state.isSuccess = true\n      })\n      .addCase(refreshToken.rejected, (state, action) => {\n        if(action.payload.accessToken){\n          state.token=action.payload.accessToken\n        }\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      //Logout User\n      .addCase(logOutUser.fulfilled, (state, action) => {\n        state.isError = false\n        state.isLoading = false\n        state.isSuccess = false\n        state.token = null\n        state.message = \"\"\n      })\n  }\n})\n\nexport const { resetAuth } = authSlice.actions\nexport default authSlice.reducer","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport productService from './productService'\nimport { refreshToken } from '../auth/authSlice'\n\n// Get user from localStorage\n// const productData = JSON.parse(localStorage.getItem('productData'))\n\nconst initialState = {\n    prodCodeList:[{\n      productName:\"Air-Filter\",\n      itemCode:\"ARF\",\n    },  \n    {\n      productName:\"Ball-Racer\",\n      itemCode:\"RSR\",\n    },\n    {\n      productName:\"Bendex\",\n      itemCode:\"BDX\",\n    },\n    {\n      productName:\"Brake-Shoe\",\n      itemCode:\"BSH\",\n    },\n    {\n      productName:\"Disc-Pad\",\n      itemCode:\"DPD\",\n    },\n    {\n      productName:\"Foot-Rest\",\n      itemCode:\"FTR\",\n    },\n    {\n      productName:\"Main-Stand\",\n      itemCode:\"MSN\",\n    },\n    {\n      productName:\"Mobil-Filter\",\n      itemCode:\"MOF\",\n    },\n    {\n      productName:\"Shocker\",\n      itemCode:\"SKR\",\n    },\n    \n    {\n      productName:\"Side-Stand\",\n      itemCode:\"SSN\",\n    },\n    {\n      productName:\"Accelerator-Cable\",\n      itemCode:\"ACC\",\n    },\n    {\n      productName:\"Clutch-Asssembly\",\n      itemCode:\"CFA\",\n    },\n    {\n      productName:\"CAM-SHAFT\",\n      itemCode:\"CMA\"\n    },\n    {\n      productName:\"CDI\",\n      itemCode:\"CDI\"\n    },\n    {\n      productName:\"Clutch-Cable\",\n      itemCode:\"CCC\"\n    },\n    {\n      productName:\"Mirror\",\n      itemCode:\"RVM\"\n    },\n    {\n      productName:\"Rocker\",\n      itemCode:\"RKR\"\n    },\n    {\n      productName:\"Self-Cut\",\n      itemCode:\"SFR\"\n    },\n    {\n      productName:\"Timing-Chain\",\n      itemCode:\"TCH\"\n    },\n    {\n      productName:\"Timing-Chain-Adjuster\",\n      itemCode:\"TCT\"\n    },\n    ],\n    productData: [],\n    productSKUData:[],\n    noMatch: false,\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: '',\n  }\n\n\n// Form Response Submit\nexport const createProductDataJSON = createAsyncThunk(\n    'createProductDataJSON',\n    async(csvFileData, thunkAPI) =>{\n        try {\n            return await productService.createProductDataJSON(csvFileData)\n        } catch (error) {\n            const message =\n            (error.response && error.response.data && error.response.data.message) ||\n            error.message ||\n            error.toString()\n        return thunkAPI.rejectWithValue(message) \n        }\n    }\n) \n\n// Get Products\nexport const getProducts = createAsyncThunk(\n  'prod/getProducts',\n  async(itemData, thunkAPI)=>{\n    try {\n      return await productService.getProducts(itemData)\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message) \n    }\n  }\n)\n\n// Search Products\nexport const searchProducts = createAsyncThunk(\n  'prod/searchProducts',\n  async(searchKey, thunkAPI)=>{\n    try {\n      return await productService.searchProducts(searchKey)\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message) \n    }\n  }\n)\n\n// Search by SKU\nexport const searchSKUProducts = createAsyncThunk(\n  'prod/searchSKUProducts',\n  async(itemData, thunkAPI)=>{\n    try {\n      return await productService.searchSKUProducts(itemData,itemData.skuOnlyFlag)\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message) \n    }\n  }\n)\n\n// Search by SKU\nexport const searchSKUProductsOnly = createAsyncThunk(\n  'prod/searchSKUProductsOnly',\n  async(itemData, thunkAPI)=>{\n    try {\n      return await productService.searchSKUProducts(itemData,itemData.skuOnlyFlag)\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message) \n    }\n  }\n)\n\n// Update Product Data\nexport const updateProduct = createAsyncThunk(\n  'prod/updateProduct',\n  async(itemData, thunkAPI)=>{\n    try { \n      try {\n            \n        const token = thunkAPI.getState().auth.token\n        return await productService.updateProduct({itemData,token})\n\n      } catch (err) {\n        \n        if(err.response.status === 403){\n          await thunkAPI.dispatch(refreshToken())\n\n          const token = thunkAPI.getState().auth.token\n          return await productService.updateProduct({itemData,token}) \n        }\n      }\n        \n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message) \n    }\n  }\n)\n\nexport const productSlice = createSlice({\n    name: 'products',\n    initialState,\n    reducers: {\n      resetProducts: (state) => initialState,\n      resetSearchProducts: (state)=>({...state,\n        productSKUData:[],\n        noMatch: false,\n      })\n    },\n    extraReducers: (builder) => {\n      builder\n      // Convert Product CSV Data to JSON Data //////\n        .addCase(createProductDataJSON.pending, (state) => {\n          state.isLoading = true\n          state.productSKUData=[]\n          state.noMatch = false\n        })\n        .addCase(createProductDataJSON.fulfilled, (state, action) => {\n          state.isLoading = false\n          state.isSuccess = true\n          state.productData = action.payload\n        })\n        .addCase(createProductDataJSON.rejected, (state, action) => {\n          state.isLoading = false\n          state.isError = true\n          state.message = action.payload\n        })\n\n      // Get products /////////////////////////////\n      .addCase(getProducts.pending, (state) => {\n        state.isLoading = true\n        state.productSKUData=[]\n        state.message = \"\"\n        state.noMatch = false\n      })\n      .addCase(getProducts.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.productData = action.payload\n        if(action.payload.length===0){\n          state.noMatch = true\n        }\n      })\n      .addCase(getProducts.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Search Products /////////////////////////////\n      .addCase(searchProducts.pending, (state) => {\n        state.isLoading = true\n        state.productSKUData=[]\n        state.message = \"\"\n        state.noMatch = false\n      })\n      .addCase(searchProducts.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.productData = action.payload\n        if(action.payload.length===0){\n          state.noMatch = true\n        }\n      })\n      .addCase(searchProducts.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Search SKU Products /////////////////////////////\n      .addCase(searchSKUProducts.pending, (state) => {\n        state.isLoading = true\n        state.productSKUData=[]\n        state.message = \"\"\n        state.noMatch = false\n      })\n      .addCase(searchSKUProducts.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.productData = action.payload\n        if(action.payload.length===0){\n          state.noMatch = true\n        }\n      })\n      .addCase(searchSKUProducts.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Search SKU Products SKU only /////////////////////////////\n      .addCase(searchSKUProductsOnly.pending, (state) => {\n        state.isLoading = true\n        state.productSKUData=[]\n        state.message = \"\"\n        state.noMatch = false\n      })\n      .addCase(searchSKUProductsOnly.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.productSKUData = action.payload\n        if(action.payload.length===0){\n          state.noMatch = true\n        }\n      })\n      .addCase(searchSKUProductsOnly.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Update Product Data /////////////////////////////\n      .addCase(updateProduct.pending, (state) => {\n        state.isLoading = true\n        state.productSKUData=[]\n        state.isError = false\n        state.isSuccess = false\n        state.noMatch = false\n        state.message = \"\"\n      })\n      .addCase(updateProduct.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.message = action.payload.message\n      })\n      .addCase(updateProduct.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n    },\n})\n\nexport const { resetProducts,\n               resetSearchProducts } = productSlice.actions\nexport default productSlice.reducer","import axios from 'axios'\n\n// Live URI \n// const order_URI = 'https://api.dinmotoindia.com/api/order/'\n\n// Local URI\nconst main_URI = process.env.REACT_APP_LOCAL_URI \n                  || `https://api.dinmotoindia.com/api/`\n\nconst order_URI = main_URI+'order/'\n\nconst getAllDemandSlips = async(token)=>{\n    const config = {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    }\n\n    const response = await axios.get(order_URI, config)\n    // console.log(`res:${JSON.stringify(response,null,4)}`)\n    \n    return response.data\n}\n\nconst getFilteredDemandSlips = async(filterParams,token)=>{\n    const config = {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    }\n\n    let response\n    let fullDate // yyyy-mm-dd\n    const accessLevel = filterParams.accessLevel \n    \n    // Employee Level Access\n    if(!accessLevel){\n        let filterQueryString = ''\n\n        const {filterTicketNum, filterStatus, page, limit} = filterParams\n        \n        let currDate = new Date()\n        let ticketDate = currDate.getDate()\n        let ticketMonth = currDate.getMonth()+1\n        let ticketYear = currDate.getFullYear()\n        \n        if(ticketDate<10){\n            ticketDate = `0${ticketDate}`\n        }\n        \n        if(ticketMonth<10){\n            ticketMonth = `0${ticketMonth}`\n        }\n        \n        fullDate = `${ticketDate}${ticketMonth}${ticketYear}`\n        \n        if(filterTicketNum && filterTicketNum!==''){\n            filterQueryString = filterQueryString+`&ticketNum=${filterTicketNum}`\n        }\n        if(filterStatus && filterStatus!==''){\n            \n            filterQueryString = filterQueryString+`&status=${filterStatus}`\n        }\n        if(page){\n            filterQueryString = filterQueryString+`&page=${page}`\n        }\n        if(limit){\n            filterQueryString = filterQueryString+`&limit=${limit}`\n        }\n        \n\n        response = await axios.get(order_URI+`filter?date=${fullDate}${filterQueryString}`, config)\n    }\n    // Admin and Managaer Level Access\n    else{   \n\n        // No filter params\n        if(filterParams.length===0){\n            response = await axios.get(order_URI+`filter`, config)\n        }\n        // Minimum one filter param\n        else{\n            let filterQueryString = '?'\n            const {filterDate, \n                filterPublisherUsername, \n                filterStatus,\n                filterTicketNum,\n                page, \n                limit\n            } = filterParams\n\n            if(filterDate && filterDate!==''){\n                fullDate = filterDate\n                filterQueryString=filterQueryString+`date=${filterDate}`\n            }\n            \n            if(filterPublisherUsername && filterPublisherUsername!==''){\n\n                filterQueryString = filterQueryString[filterQueryString.length-1]==='?'?\n                                    filterQueryString+`publisherUsername=${filterPublisherUsername}`\n                                    :\n                                    filterQueryString+`&publisherUsername=${filterPublisherUsername}`\n            }\n\n            if(filterStatus && filterStatus!==''){\n\n                filterQueryString = filterQueryString[filterQueryString.length-1]==='?'?\n                                    filterQueryString+`status=${filterStatus}`\n                                    :\n                                    filterQueryString+`&status=${filterStatus}`\n            }\n\n            if(filterTicketNum && filterTicketNum!==''){\n\n                filterQueryString = filterQueryString[filterQueryString.length-1]==='?'?\n                                    filterQueryString+`ticketNum=${filterTicketNum}`\n                                    :\n                                    filterQueryString+`&ticketNum=${filterTicketNum}`\n            }\n            if(page && page!==0){\n                filterQueryString = filterQueryString[filterQueryString.length-1]==='?'?\n                                    filterQueryString+`page=${page}`\n                                    :\n                                    filterQueryString+`&page=${page}`\n            }\n            if(limit && limit!==0){\n                filterQueryString = filterQueryString[filterQueryString.length-1]==='?'?\n                                    filterQueryString+`limit=${limit}`\n                                    :\n                                    filterQueryString+`&limit=${limit}`\n                }\n\n            console.log(`fQS: ${order_URI+`filter`+filterQueryString}`)\n\n            response = await axios.get(order_URI+`filter`+filterQueryString, config)\n\n        }\n    }\n    // console.log(`res:${JSON.stringify(response.data,null,4)}`)\n    \n    return response.data\n}\n\nconst generateDemandSlip = async({demandSlipData, token})=>{\n    const config = {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    }\n    \n    // API Call\n    const response = await axios.post(order_URI, demandSlipData, config) \n    // console.log(`response:${JSON.stringify(response.data.demandSlipData,null,4)}`)\n    return response.data.demandSlipData\n}\n\n// PATCH /:ticketNumber\nconst updateDemandSlip = async({updatedData, token})=>{\n    const config = {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    }\n    // API Call\n    const response = await axios.patch(order_URI+updatedData.ticketNumber, updatedData, config) \n    // console.log(`response:${JSON.stringify(response.data.demandSlipData,null,4)}`)\n    return response.data\n}\n\nconst orderService = {\n    getAllDemandSlips,\n    getFilteredDemandSlips,\n    generateDemandSlip,\n    updateDemandSlip,\n}\n\nexport default orderService","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport orderService from './orderService'\nimport { refreshToken } from '../auth/authSlice'\n\nconst initialState = {\n    orderData:[],\n    newDemandSlip:{},\n    \n    // Pagination Params\n    pageCount: null,\n    totalDataLength: null,\n    nextPage:null,\n    prevPage:null,\n    currentPage:1,\n\n    // Network Status Params\n    updatedDataFlag:false,\n    isLoading:false,\n    isError:false,\n    isSuccess:false,\n    message:\"\"\n}\n\n// Get All Demand Orders\nexport const getAllDemandSlips = createAsyncThunk(\n  'orders/getAllDemandSlips',\n  async(_, thunkAPI)=>{\n    try {\n      try {\n            \n        const token = thunkAPI.getState().auth.token\n        return await orderService.getAllDemandSlips(token)\n\n      } catch (err) {\n        \n        if(err.response.status === 403){\n          await thunkAPI.dispatch(refreshToken())\n\n          const token = thunkAPI.getState().auth.token\n          return await orderService.getAllDemandSlips(token) \n        }\n      }\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\n// Get User and Date Filtered Demand Orders\nexport const getFilteredDemandSlips = createAsyncThunk(\n  'orders/getFilteredDemandSlips',\n  async(filterParams={}, thunkAPI)=>{\n    try {\n      try {\n            \n        const token = thunkAPI.getState().auth.token\n        return await orderService.getFilteredDemandSlips(filterParams,token)\n\n      } catch (err) {\n        \n        if(err.response.status === 403){\n          await thunkAPI.dispatch(refreshToken())\n\n          const token = thunkAPI.getState().auth.token\n          return await orderService.getFilteredDemandSlips(filterParams,token) \n        }\n      }\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\nexport const generateDemandSlip = createAsyncThunk(\n  'orders/generateDemandSlip',\n  async(demandSlipData,thunkAPI)=>{\n    try {\n      try {\n            \n        const token = thunkAPI.getState().auth.token\n        return await orderService.generateDemandSlip({demandSlipData,token})\n        // await thunkAPI.dispatch(getFilteredDemandSlips()) \n\n      } catch (err) {\n        \n        if(err.response.status === 403){\n          await thunkAPI.dispatch(refreshToken())\n\n          const token = thunkAPI.getState().auth.token\n          return await orderService.generateDemandSlip({demandSlipData,token})\n          // await thunkAPI.dispatch(getFilteredDemandSlips()) \n        }\n      }\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\nexport const updateDemandSlip = createAsyncThunk(\n  'orders/updateDemandSlip',\n  async(updatedData,thunkAPI)=>{\n    try {\n      try {\n            \n        const token = thunkAPI.getState().auth.token\n        return await orderService.updateDemandSlip({updatedData,token})\n        // await thunkAPI.dispatch(getFilteredDemandSlips()) \n\n      } catch (err) {\n        \n        if(err.response.status === 403){\n          await thunkAPI.dispatch(refreshToken())\n\n          const token = thunkAPI.getState().auth.token\n          return await orderService.updateDemandSlip({updatedData,token})\n          // await thunkAPI.dispatch(getFilteredDemandSlips()) \n        }\n      }\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\nexport const orderSlice = createSlice({\n    name: 'orders',\n    initialState,\n    reducers: {\n      resetOrders: (state) => initialState,\n      resetAfterNewDemandSlip: (state)=>({...state,\n        isError:false,\n        isLoading:false,\n        updatedDataFlag:false,\n        isSuccess:false,\n        message:\"\"\n      })\n    },\n    extraReducers: (builder) => {\n      builder\n      // Get All Demand Slip Data //////\n        .addCase(getAllDemandSlips.pending, (state) => {\n          state.isLoading = true\n          state.updatedDataFlag=false\n          state.orderData=[]\n        })\n        .addCase(getAllDemandSlips.fulfilled, (state, action) => {\n          state.isLoading = false\n          state.isSuccess = true\n          state.orderData = action.payload.data\n          \n          state.pageCount = action.payload.pageCount\n          state.totalDataLength = action.payload.totalDataLength\n          state.nextPage = action.payload.next?.page\n          state.prevPage = action.payload.prev?.page\n          state.currentPage = action.payload.currentPage\n        })\n        .addCase(getAllDemandSlips.rejected, (state, action) => {\n          state.isLoading = false\n          state.isError = true\n          state.message = action.payload\n        })\n      \n      // Get User and Date Filtered Demand Slip Data //////\n        .addCase(getFilteredDemandSlips.pending, (state) => {\n          state.isLoading = true\n          state.updatedDataFlag=false\n          state.orderData=[]\n        })\n        .addCase(getFilteredDemandSlips.fulfilled, (state, action) => {\n          state.isLoading = false\n          state.isSuccess = true\n          state.orderData = action.payload.data\n\n          state.pageCount = action.payload.pageCount\n          state.totalDataLength = action.payload.totalDataLength\n          state.nextPage = action.payload.next?.page\n          state.prevPage = action.payload.prev?.page\n          state.currentPage = action.payload.currentPage\n        })\n        .addCase(getFilteredDemandSlips.rejected, (state, action) => {\n          state.isLoading = false\n          state.isError = true\n          state.message = action.payload\n        })\n\n      // Generate New Demand Slip //////\n        .addCase(generateDemandSlip.pending, (state) => {\n          state.isLoading = true\n          state.updatedDataFlag=false\n          state.isSuccess = false\n          state.isError = false\n          state.newDemandSlip = {}\n          // state.orderData=[]\n        })\n        .addCase(generateDemandSlip.fulfilled, (state, action) => {\n          state.isLoading = false\n          state.isError = false\n          state.isSuccess = true\n          state.newDemandSlip = action.payload\n          state.message = `New Demand Reciept ${action.payload.ticketNumber} created`\n        })\n        .addCase(generateDemandSlip.rejected, (state, action) => {\n          state.isLoading = false\n          state.isSuccess = false\n          state.isError = true\n          state.message = action.payload\n        })\n\n      // Update Demand Slip Data //////\n        .addCase(updateDemandSlip.pending, (state) => {\n          state.isLoading = true\n          state.updatedDataFlag=false\n        })\n        .addCase(updateDemandSlip.fulfilled, (state, action) => {\n          state.isLoading = false\n          state.isSuccess = true\n          state.updatedDataFlag=true\n          state.message = action.payload\n        })\n        .addCase(updateDemandSlip.rejected, (state, action) => {\n          state.isLoading = false\n          state.isError = true\n          state.message = action.payload\n        })\n    }\n})\n\nexport const { resetOrders,\n              resetAfterNewDemandSlip } = orderSlice.actions\nexport default orderSlice.reducer","import { configureStore } from '@reduxjs/toolkit';\nimport templateReducer from '../features/template/templateSlice'\nimport productReducer from \"../features/products/productSlice\"\nimport authReducer from \"../features/auth/authSlice\"\nimport usersReducer from \"../features/users/usersSlice\"\nimport ordersReducer from \"../features/orders/orderSlice\"\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    product: productReducer,\n    template: templateReducer,\n    users: usersReducer,\n    orders: ordersReducer,\n  },\n});\n","import { useDispatch, useSelector } from \"react-redux\"\nimport { useNavigate } from 'react-router-dom'\nimport { BiLogOut, BiMenu } from \"react-icons/bi\"\nimport { logOutUser } from '../../features/auth/authSlice';\n\nimport \"./Navbar.css\"\nimport { useState } from \"react\";\n\nfunction Navbar() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch()\n\n  const {token} = useSelector((state)=>state.auth)\n\n  // const {prodCodeList}=useSelector((state)=>state.product)\n\n  // const [legendFlag, setLegendFlag] = useState(false)\n\n  const handleClick=()=>{\n    navigate(\"/\")\n  }\n\n  const handleLogout=()=>{\n    dispatch(logOutUser())\n    navigate(\"/login\")\n  }\n\n  // const handleMenu=()=>{\n  //   setLegendFlag(!legendFlag)\n  // }\n\n  return (\n    <div className='navbar-container' style={token?{}:{justifyContent:`center`}}> \n        {token && <div className='menu-btn'><BiMenu /></div>}\n        <h1 onClick={()=>handleClick()}>Din</h1>\n        {token && <div className='logout-btn' onClick={()=>handleLogout()}> <BiLogOut/></div>}\n    </div>\n  )\n}\n\nexport default Navbar","import React, { useState } from 'react'\nimport { useDispatch } from \"react-redux\"\nimport {formResponseSubmit} from \"../../features/template/templateSlice\"\nimport \"./Form.css\"\n\nfunction CopyForm() {\n    const dispatch = useDispatch(); \n\n    const [formData, setFormData] = useState({\n        customer_name:'',\n        pricePerUnit:'',\n        pricePerUnitOE:'',\n        unit:'',\n        product:'',\n    })\n\n    const {customer_name, pricePerUnit, pricePerUnitOE, excDeliveryCharges, unit, product} = formData\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n\n    const onChange=(e)=>{\n        setFormData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        if(customer_name===null || pricePerUnit===null || unit===null){\n            console.log(`Please enter valid data`)\n        }else{\n            dispatch(formResponseSubmit({\n                customer_name,\n                pricePerUnit,\n                pricePerUnitOE,\n                excDeliveryCharges,\n                unit,\n                product\n            }))\n        }\n    }\n\n  return (\n    <>\n        <div className='form-container left-border-form'>\n        <form onSubmit={onSubmit}>\n\n            <div className=\"form-grid\">\n                <div className=\"form-group\">\n                    <label>Name *</label>\n                    <input type=\"text\" \n                        className='form-control'\n                        name= 'customer_name'\n                        id='customer_name'\n                        value = {customer_name}\n                        placeholder=\"Customer's name\"\n                        autoComplete='off'\n                        onChange={onChange} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Price Per Unit *</label>\n                    <input type=\"text\" \n                        className='form-control'\n                        name= 'pricePerUnit'\n                        id='pricePerUnit'\n                        value = {pricePerUnit}\n                        placeholder='Price Per Unit'\n                        onChange={onChange}\n                        // onKeyPress={(e) => !/[0-9, ]/.test(e.key) && e.preventDefault()} \n                        />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Price Per Unit #2</label>\n                    <input type=\"text\" \n                        className='form-control'\n                        name= 'pricePerUnitOE'\n                        id='pricePerUnitOE'\n                        value = {pricePerUnitOE}\n                        placeholder='Alternate Price Per Unit'\n                        onChange={onChange}\n                        // onKeyPress={(e) => !/[0-9, ]/.test(e.key) && e.preventDefault()} \n                        />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Excluding Delivery Charges</label>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"excDeliveryCharges\" \n                            id=\"true\" \n                            value=\"true\"\n                            onChange={onChange} />\n                        <label htmlFor=\"true\">Yes</label>\n                        </div>\n                    </div>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"excDeliveryCharges\" \n                            id=\"false\" \n                            value=\"false\"\n                            onChange={onChange} />\n                        <label htmlFor=\"false\">No</label>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"form-group \">\n                    <label>Unit *</label>\n                    \n                    <div className='radio-group'>\n                    <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"unit\" \n                            id=\"piece\" \n                            value=\"piece\"\n                            onChange={onChange} />\n                        <label htmlFor=\"piece\">Piece</label>\n                    </div>\n\n                    <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"unit\" \n                            id=\"set\" \n                            value=\"set\"\n                            onChange={onChange} />\n                        <label htmlFor=\"set\">Set</label>\n                    </div>\n\n                    <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"unit\" \n                            id=\"litre\" \n                            value=\"litre\"\n                            onChange={onChange} />\n                        <label htmlFor=\"litre\">Litre</label>\n                    </div>\n\n                    <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"unit\" \n                            id=\"mL\" \n                            value=\"mL\"\n                            onChange={onChange} />\n                        <label htmlFor=\"mL\">mL</label>\n                    </div>\n\n                    \n                    </div>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Product</label>\n                    <input type=\"text\" \n                        className='form-control'\n                        name= 'product'\n                        id='product'\n                        value = {product}\n                        placeholder='Product'\n                        onChange={onChange}\n                        />\n                </div>\n            </div>\n\n\n            <div className=\"form-group\">\n                <button type=\"submit\" className=\"submit-btn\">\n                    Submit\n                </button>\n            </div>\n            {/* <p>* Mandatory Fields</p> */}\n\n        </form>\n        </div>\n    </>\n  )\n}\n\nexport default CopyForm","import { useState } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { AnimatePresence, motion } from \"framer-motion\"\nimport CopyForm from '../../components/Forms/CopyForm'\n\nimport \"./IndiaMartRes.css\"\n\nfunction QuickRes() {\n\n    const {formResponseData} =useSelector(\n        (state)=>state.template\n    )\n    const [successPopup, setSuccessPopup] = useState(false)\n\n    const {customer_name, pricePerUnit, pricePerUnitOE, excDeliveryCharges, unit, product} = formResponseData\n\n    const ResponseList = [{\n        text:`Hi ${customer_name}, thanks for the inquiry.\\n\\nWe can provide ${product===\"\"?`the product`:product} at Rs.${pricePerUnit} per ${unit}${pricePerUnitOE!==\"\"?` and Rs.${pricePerUnitOE} per ${unit}(Original)`:``}${excDeliveryCharges===`true`?\"(excluding shipping charges)\":\"\"}.\\n\\nFor further details you can call us on 9230021058/ 08043818766 (preferred call time 10am to 11am).`\n    },{\n        text:`Hi ${customer_name}, thanks for the inquiry.\\n\\nWe can provide ${product===\"\"?`the product`:product} at Rs.${pricePerUnit} per ${unit}${pricePerUnitOE!==\"\"?` and Rs.${pricePerUnitOE} per ${unit}(Original)`:``}${excDeliveryCharges===`true`?\"(excluding shipping charges)\":\"\"} onwards as per vehicle model. Kindly mention the model/s you are looking for.\\n\\nFor further details you can call us on 9230021058/ 08043818766 (preferred call time 10am to 11am).`\n    },{\n    //     text:`We can deliver ${product===\"\"?`the product`:product} for Rs.${pricePerUnit} per ${unit} ${pricePerUnitOE!==\"\"?`and Rs. ${pricePerUnitOE} per ${unit}`:``}.\\n\\nYou can call us on 08043818766/ 9230021058 (preferred call time between 10am to 11am).`\n    // },{\n        text:`Hi ${customer_name}, thanks for the inquiry but we do not deal in ${product===\"\"?`this product`:product}.\\n\\nFor any further requirements you can call us on 08043818766/ 9230021058 (preferred call time between 10am to 11am).`\n    },{\n        text:`Hi ${customer_name}, thanks for the inquiry but ${product===\"\"?`the product`:product} is currently out of stock.\\n\\nFor any further requirements you can call us on 08043818766/ 9230021058 (preferred call time between 10am to 11am).`\n    },{\n        text:`Hi ${customer_name}, thanks for the inquiry and sorry for our late response.\\n\\nWe can provide ${product===\"\"?`the product`:product} at Rs.${pricePerUnit} per ${unit}${pricePerUnitOE!==\"\"?` and Rs. ${pricePerUnitOE} per ${unit}`:``}.\\n\\nFor further details you can call us on 9230021058/ 08043818766 (preferred call time 10am to 11am).`\n    },{\n        text:`Hi ${customer_name}, thanks for the inquiry and sorry for our late response.\\n\\nWe can provide ${product===\"\"?`the product`:product} at Rs.${pricePerUnit} per ${unit}${pricePerUnitOE!==\"\"?` and Rs. ${pricePerUnitOE} per ${unit}`:``} onwards as per vehicle model. Kindly mention the model/s you are looking for.\\n\\nFor further details you can call us on 9230021058/ 08043818766 (preferred call time 10am to 11am).`\n    },{\n        text:`Hi ${customer_name}, thanks for the inquiry.\\n\\nWe do not supply to your location at the moment.\\n\\nFor any further queries/ inquiries you can call us on 9230021058/ 08043818766 (preferred call time 10am to 11am).`\n    },]\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n    const copyText=(text)=>{\n        navigator.clipboard.writeText(text)\n        setSuccessPopup(false)\n        setTimeout(()=>{\n            setSuccessPopup(true)\n        },100)\n        setTimeout(()=>{\n            setSuccessPopup(false)\n          },2000)\n      }\n\n  return (\n    <div className='quick-res-container'>\n    \n    <CopyForm />\n    \n    <div className='copy-container'>\n\n        {ResponseList.map((item, index)=>\n            <div key={index}\n                className='template-text' \n                onClick={()=>copyText(item.text)}>\n                {item.text}\n            </div>\n        )}\n      </div>\n\n      <AnimatePresence>\n        {successPopup && \n            <motion.div className=\"alert-content\"\n                initial={{opacity:0}} \n                animate={{opacity:1}}\n                exit={{opacity:0}}\n                transition={{duration:0.8}}\n            >\n                Messgae Copied\n            </motion.div>\n        }\n    </AnimatePresence>\n    \n    </div>\n  )\n}\n\nexport default QuickRes","import React, { useEffect, useRef, useState } from 'react'\nimport \"./Dropdown.css\"\n\nfunction Dropdown({dataList, passItemCode}) {\n    const boxRef = useRef(null)\n    \n    const [isActive, setIsActive] = useState(false)\n    const [selectedItem, setSelectedItem] = useState(\"\")\n\n    const handleClick=()=>{\n        setIsActive(!isActive)\n    }\n\n    const handleItemClick=(prod)=>{\n        const data = {\n            saveFile:false,\n            itemCode: prod.itemCode\n        }\n\n        passItemCode(data)\n        setSelectedItem(prod.productName)\n        setIsActive(!isActive)\n    }\n\n    // Modal close\n    useEffect(()=>{\n        let handler = (event) => {\n            if(!boxRef.current.contains(event.target)\n               )\n              {\n                setIsActive(false)\n              }\n        };\n        document.addEventListener(\"mousedown\", handler);\n    \n        return()=>{\n        document.removeEventListener(\"mousedown\",handler);\n        }\n    })\n\n  return (\n    <div className=\"drop-down-container\" ref={boxRef}>\n        <div className=\"drop-down-item selected-drop-down\" onClick={()=>handleClick()}>\n            <p>{selectedItem===\"\"?`Select a Cateogry`:selectedItem}</p>\n        </div>     \n\n        {isActive && \n        <div className=\"drop-down-list-container\">\n            {dataList?.map((item,index)=>\n            <div className=\"drop-down-item\" key={index}\n                onClick={()=>handleItemClick(item)}\n            >\n                <p>{item.productName}</p>\n            </div>\n            )\n            }\n\n        </div>\n        }     \n    </div>\n  )\n}\n\nexport default Dropdown","import React from 'react'\nimport \"./Loader.css\"\n\nfunction Loader() {\n  return (\n    <div className='loader-container'>\n        <div className=\"lds-dual-ring\"></div>\n    </div>\n  )\n}\n\nexport default Loader","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useNavigate } from 'react-router-dom';\nimport { getProducts, searchProducts, resetProducts, searchSKUProducts} from \"../../features/products/productSlice\"\n// import Papa from 'papaparse'\nimport debouce from \"lodash.debounce\";\n\nimport \"./Products.css\"\nimport Dropdown from '../../components/Dropdown/Dropdown';\nimport Loader from '../../components/Loader/Loader';\nimport { logOutUser } from '../../features/auth/authSlice';\n\nimport { AiOutlineSearch } from \"react-icons/ai\"\n\nfunction Products() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const { prodCodeList, productData, noMatch, isLoading } = useSelector(\n    (state)=>state.product\n  )\n\n  const {token, isError} = useSelector((state)=>state.auth)\n\n  const [showSKUFlag, setShowSKUFlag] = useState(false)\n  const [prodNavFlag, setProdNavFlag] = useState(false)\n\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  const [itemData, setItemData] = useState({\n    // saveFile: false,\n    itemCode:\"\"\n  })\n\n  const [skuData, setSKUData] = useState({\n    itemCode:\"\",\n    vehicleModel:\"\",\n    brandCompany:\"\",\n    partNum:\"\",\n    skuOnlyFlag:\"false\"\n  })\n  \n  const { itemCode } = itemData\n\n  /////////////////////////////////////////////////\n  //////// Functions /////////////////////////////\n  ////////////////////////////////////////////////\n\n  const handleProductClick = (sku) =>{\n    if(prodNavFlag){\n      dispatch(resetProducts())\n      navigate(`${sku}`)\n    }\n  }\n\n  const handleSearchChange = (e) => {\n    setSearchInput(e.target.value);\n  }\n\n  const onSKUChange=(e)=>{\n    setSKUData((prevState)=>({\n        ...prevState,\n        [e.target.name]:e.target.value\n    }))\n  }\n\n  // Debounce function\n  const debouncedResults = debouce(handleSearchChange, 800)\n  \n  // Get Products API call \n  const onSubmit=(e)=>{\n    e.preventDefault()\n      \n    if(itemCode===\"\"){\n      alert(`Please enter Item`)\n    }else{\n      setSearchInput(\"\")\n      dispatch(getProducts(itemData))\n    }\n  }\n\n  // Get SKU Products API call \n  const onSKUSubmit=(e)=>{\n    e.preventDefault()\n      \n    if(skuData.itemCode===\"\"){\n      alert(`Please Enter Item Code`)\n    }else{\n      dispatch(searchSKUProducts(skuData))\n    }\n  }\n\n  /////////////////////////////////////////////////\n  //////// Hooks /////////////////////////////////\n  ////////////////////////////////////////////////\n\n  // Logout on Bad Token\n  useEffect(()=>{    \n    if(isError || !token){\n      dispatch(logOutUser())\n      navigate(\"/login\")\n    }\n\n    dispatch(resetProducts())\n  },[])\n\n  // Debounce Search\n  useEffect(() => {\n    return () => {\n      debouncedResults.cancel();\n    };\n  });\n\n  // Search API call\n  useEffect(()=>{\n    if (searchInput!==\"\") {\n      dispatch(searchProducts(searchInput))\n    }\n  },[searchInput])\n\n  return (\n    <>\n    {isLoading && <Loader />}\n    <div className='data-container'>\n      \n      <div className=\"controlbox-container\" >\n        \n        {/* Load Product Controls */}\n        <div className=\"controlbox\" style={{width:\"80%\"}}>\n\n          <label style={{fontWeight:\"bold\"}}>Search</label>\n          <div className=\"search-bar\">\n            <AiOutlineSearch className='search-icon'/>\n            <input\n              type=\"text\"\n              name=\"search\"\n              placeholder=\"Search for Product\"\n              onChange={debouncedResults}\n              autoComplete='off'\n              />\n\n          </div>\n        </div>\n\n        <form onSubmit={onSKUSubmit}>\n\n          <label style={{fontWeight:\"bold\"}}>Search by SKU</label>\n          <div className=\"form-group\">\n                {/* <label htmlFor={`itemCode sku`}>Item Code</label> */}\n                <input type=\"text\" \n                    className='form-control'\n                    name= 'itemCode'\n                    id={`itemCode sku`}\n                    value = {skuData.itemCode}\n                    placeholder=\"Item Code\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n                {/* <label htmlFor={`vehicleModel sku`}>Vehicle Model</label> */}\n                <input type=\"text\" \n                    className='form-control'\n                    name= 'vehicleModel'\n                    id={`vehicleModel sku`}\n                    value = {skuData.vehicleModel}\n                    placeholder=\"Vehicle Model\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n                {/* <label htmlFor={`brandCompany sku`}>Brand Company</label> */}\n                <input type=\"text\" \n                    className='form-control'\n                    name= 'brandCompany'\n                    id={`brandCompany sku`}\n                    value = {skuData.brandCompany}\n                    placeholder=\"Brand Company\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n                {/* <label htmlFor={`partNum sku`}>Part Number</label> */}\n                <input type=\"text\" \n                    className='form-control'\n                    name= 'partNum'\n                    id={`partNum sku`}\n                    value = {skuData.partNum}\n                    placeholder=\"Part Number\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n            <button type=\"submit\" className=\"submit-btn\">\n                Search\n            </button>\n          </div>\n        </form>\n        \n\n        \n        <form onSubmit={onSubmit}>\n        \n        {/* Search Input */}\n\n        <div className=\"controlbox\">\n\n          <div className=\"control-section\">\n            <label>Product Category</label>\n\n            <Dropdown  \n              dataList={prodCodeList} \n              passItemCode={setItemData}\n              />\n          </div>\n\n          <div className=\"form-group\">\n            <button type=\"submit\" className=\"submit-btn\">\n                Search\n            </button>\n          </div>\n\n        </div>\n        </form>\n          \n        {/* On Product Load Controls */}\n        {productData.length>0 &&\n          <div className=\"control-box\">\n          <div className=\"control-section\">\n            \n            <div className=\"control-btn\"\n              style={{backgroundColor:`var(--buttonGreen)`}}\n              onClick={()=>setShowSKUFlag(!showSKUFlag)}\n            >\n              {showSKUFlag?\"Show Product Name\":\"Show SKU\"}\n            </div>\n            \n            <div className=\"control-btn\"\n              style={prodNavFlag?{backgroundColor:`var(--buttonRed)`}:{backgroundColor:`var(--buttonGreen)`}}\n              onClick={()=>setProdNavFlag(!prodNavFlag)}\n            >\n              {prodNavFlag?\"De-activate Products\":\"Activate Products\"}\n            </div>\n\n          </div>\n        </div>}\n\n\n      </div>\n\n      {noMatch &&  \n        <h3>No Match</h3>\n      }\n\n      <div className='grid'>\n        <div className=\"productCol-conatiner\">\n          {/* Product Fields */}\n          {productData?.length>0 &&\n            <div className=\"productCol\">\n                <h3>code</h3>\n                <h3>vehicleModel</h3>\n                <h3>brandCompany</h3>\n                <h3>sku</h3>\n                <h3>mrp</h3>\n                <h3>compatibleModels</h3>\n                <h3>metaData</h3>\n            </div>\n          }\n\n          {/* Product Data */}\n          {productData?.map((item,index)=>\n            <div className={`productCol ${prodNavFlag?\"navProdCol\":\"\"}`}\n              // style={prodNavFlag?{cursor:`pointer`}:{}} \n              key={index}\n              onClick={()=>handleProductClick(item.sku)}\n            >\n              <h3>{item.itemCode}</h3>\n              <h3>{item.vehicleModel}</h3>\n              <h3>{item.brandCompany}</h3>\n              <h3>{item.sku}</h3>\n              <h3>{item.mrp}</h3>\n              <h3>{item.compatibleModels.map((item,i)=>{\n                return <p key={i}>{ \n                  showSKUFlag?\n                  item\n                  :\n                  // Write logic for when whole list isnt loaded\n                  productData.filter(prod=>prod.sku===item).map(prod=>\n                    prod.productName+\" \"+ prod.vehicleModel+\" \"+prod.brandCompany\n                  )\n                }\n                </p>})}\n              </h3>\n              {item.metaData && \n              <h3>\n                {Object.keys(item.metaData)?.map((k,i)=>{\n                  return <p key={i}>{k}- {item.metaData[k]}</p>\n                  } \n                )}\n              </h3>\n              }\n            </div>\n            )\n          }\n        </div>\n        \n\n    \n      </div>\n\n    </div>\n    </>\n  )\n}\n\nexport default Products","import { useSelector } from 'react-redux'\nimport jwtDecode from 'jwt-decode'\n\nconst useAuth = () => {\n    const { token } = useSelector((state)=>state.auth)\n    let isManager = false\n    let isAdmin = false\n    let isEmployee = false\n    let status = \"\"\n\n    if(token){\n        const decoded = jwtDecode(token)\n        const { username, roles } = decoded.UserInfo\n\n        isManager = roles.includes('Manager')\n        isAdmin = roles.includes('Admin')\n        isEmployee = roles.includes('Employee')\n\n        if(isEmployee){\n            status = \"Employee\"\n        }\n        if(isManager){\n            status = \"Manager\"\n        }\n        if(isAdmin){\n            status = \"Admin\"\n        }\n\n        return { username, roles, isManager, isAdmin, status }\n    }\n\n    return {username:\"\", roles:[], isManager, isAdmin, status}\n}\n\nexport default useAuth","import { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useSelector } from 'react-redux';\nimport useAuth from '../../hooks/useAuth';\n\nimport \"./Landing.css\"\n\nfunction Landing() {\n    const navigate = useNavigate();\n    const {token} = useSelector((state)=>state.auth)\n    const {status} = useAuth()\n\n    const pathList = [{\n        pathname:\"products\",\n        name:\"Products\",\n        accessLevel:[\"Admin\",\"Manager\",\"Employee\"]\n    },{\n        pathname:\"indiamart-templates\",\n        name:\"Templates\",\n        accessLevel:[\"Admin\",\"Manager\",\"Employee\"]\n    },{\n        pathname:\"user-management\",\n        name:\"User Management\",\n        accessLevel:[\"Admin\"]\n    },{\n        pathname:\"demand-slip-generator\",\n        name:\"Demand Slip Generator\",\n        accessLevel:[\"Admin\",\"Manager\",\"Employee\"]\n    }]\n\n    const handleNavigation=(pathname)=>{\n        let path = \"/\"+pathname\n        navigate(path)\n    }\n\n    useEffect(()=>{\n        if(!token){\n            navigate(\"/login\")\n        }\n    },[])\n\n\n  return (\n    <div>\n       <>\n       {pathList.filter(path=> path.accessLevel.includes(status)).map((item,index)=>\n        <div className=\"path-options\" key={index} \n            onClick={()=>handleNavigation(item.pathname)}>\n                {item.name}\n        </div>\n        )}\n        </>\n    </div>\n  )\n}\n\nexport default Landing","import React,{ useState, useEffect } from 'react'\nimport { AiOutlinePlus, AiOutlineClose } from \"react-icons/ai\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { updateProduct, searchSKUProductsOnly } from '../../features/products/productSlice';\n\nfunction ProductForm({initialValue, setFlag}) {\n    const dispatch = useDispatch();\n\n    const {productSKUData, noMatch, isSuccess, message} = useSelector((state)=>state.product)\n\n    const [formData, setFormData] = useState({\n        itemCode: initialValue.itemCode,\n        vehicleModel: initialValue.vehicleModel,\n        brandCompany: initialValue.brandCompany,\n        partNum: initialValue.partNum,\n        sku: initialValue.sku,\n        compatibleModels: initialValue.compatibleModels,\n        qty: initialValue?.qty,\n        mrp: initialValue.mrp,\n        metaData: initialValue?.metaData\n    })\n\n    const [skuData, setSKUData] = useState({\n        itemCode:`${initialValue.itemCode.split(\"-\")[0]}`,\n        vehicleModel:\"\",\n        brandCompany:\"\",\n        partNum:\"\",\n        skuOnlyFlag:\"true\"\n      })\n\n    const [updatedMetaData, setUpdatedMetaData] = useState({...initialValue?.metaData})\n    const [updatedModels, setUpdatedModels] = useState([...initialValue.compatibleModels])\n\n    const {itemCode, vehicleModel, brandCompany, partNum, sku, mrp} = formData\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n\n    const copyText=(text)=>{\n        navigator.clipboard.writeText(text.slice(4))\n    }\n\n    const onChange=(e)=>{\n        setFormData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onMetaDataChange=(e)=>{\n        setUpdatedMetaData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onModelItemChange=(e,i)=>{\n        const modelList = [...updatedModels]\n        modelList[i] = e.target.value\n        // console.log(modelList)\n        setUpdatedModels(modelList)\n    }\n\n    const handleAddItem=()=>{\n        const modelList = [...updatedModels,`${sku.split(\"-\")[0]}-`]\n        setUpdatedModels(modelList)\n    }\n\n    const handleItemDelete = (index)=>{\n        const modelList = [...updatedModels]\n        modelList.splice(index,1)\n        // console.log(modelList)\n        setUpdatedModels(modelList)\n    }\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        if(itemCode===null || vehicleModel===null || brandCompany===null ||\n            partNum===null || mrp===null){\n            console.log(`Please enter valid data`)\n        }else{\n            const prodInfo = {\n                itemCode,\n                vehicleModel,\n                brandCompany,\n                partNum,\n                compatibleModels:updatedModels.join(\",\"),\n                mrp,\n                ...updatedMetaData\n            }\n            \n            // console.log(`formData:${JSON.stringify(prodInfo,null,4)}`)\n            \n            dispatch(updateProduct({prodInfo,sku}))\n        }\n    }\n\n    const onSKUChange=(e)=>{\n        setSKUData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    // Get SKU Products API call \n    const onSKUSubmit=(e)=>{\n        e.preventDefault()\n        \n        if(skuData.itemCode===\"\"){\n        alert(`Please Enter Item Code`)\n        }else{\n        dispatch(searchSKUProductsOnly(skuData))\n        }\n    }\n\n    /////////////////////////////////////////////////\n    //////// Hooks //////////////////////////////////\n    ////////////////////////////////////////////////\n    useEffect(()=>{\n        if(isSuccess && message===`Updated ${initialValue.sku}`){\n            setFlag(false)\n        }\n    },[message])\n\n  return (\n    <div className='card-container card-grid' style={{padding:\"0\", border:\"none\"}}>\n        <form onSubmit={onSubmit}>\n            \n            <div className=\"form-group\">\n                <label htmlFor={`itemCode`}>Item Code</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'itemCode'\n                    id={`itemCode`}\n                    value = {itemCode}\n                    placeholder=\"itemCode\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`vehicleModel`}>Vehicle Model</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'vehicleModel'\n                    id={`vehicleModel`}\n                    value = {vehicleModel}\n                    placeholder=\"vehicleModel\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`brandCompany`}>Brand Company</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'brandCompany'\n                    id={`brandCompany`}\n                    value = {brandCompany}\n                    placeholder=\"brandCompany\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`partNum`}>Part Number</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'partNum'\n                    id={`partNum`}\n                    value = {partNum}\n                    placeholder=\"partNum\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label >SKU</label>\n                <div className=\"card-form-control\">\n                    {sku}\n                </div>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`mrp`}>MRP</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'mrp'\n                    id={`mrp`}\n                    value = {mrp}\n                    placeholder=\"mrp\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\" \n                style={{display:\"flex\", flexDirection:\"column\", justifyContent:\"center\"}}\n            >\n                <label>Compatible Models</label>\n                {updatedModels.map((model,index)=>{\n                    return(\n                        <div className='model-input-container' key={index}>\n                            <input\n                                className='card-form-control'\n                                style={{width:\"90%\"}}\n                                name= {model}\n                                id={`model ${index}`}\n                                value = {model}\n                                placeholder=\"Model SKU\"\n                                autoComplete='off'\n                                onChange={(e)=>onModelItemChange(e,index)}\n                            />\n\n                            <div className=\"delete-btn\" \n                                onClick={()=>handleItemDelete(index)}\n                            >\n                                <AiOutlineClose />\n                            </div>\n                        </div >\n                    )\n                })}\n                    <br />\n                <div className=\"add-btn\"\n                    onClick={handleAddItem}\n                >\n                    <AiOutlinePlus />\n                </div>\n\n\n\n            </div>\n            \n            {initialValue?.metaData &&\n            <div className=\"form-group\">\n                <label>Meta Data</label>\n                <div className=\"card-form-control\" \n                    style={{display:\"flex\", flexDirection:\"column\", alignItems:\"flex-start\"}}\n                >\n                    {Object.keys(initialValue?.metaData).map((field,index)=>{\n                        return(\n                            <React.Fragment key={index}>\n                                <label htmlFor={field}>{field}</label>\n                                <input type=\"text\" \n                                    className='card-form-control'\n                                    name={field}\n                                    id={field}\n                                    value = {updatedMetaData[field]}\n                                    placeholder={field}\n                                    autoComplete='off'\n                                    onChange={onMetaDataChange} />\n                            </React.Fragment>\n                            )\n                        })}\n                </div>\n            </div>\n            }\n\n            <div className=\"form-group\">\n                <button type=\"submit\" className=\"submit-btn\">\n                    Update\n                </button>\n            </div>\n        \n        </form>\n\n        <form onSubmit={onSKUSubmit}>\n\n          <label style={{fontWeight:\"bold\"}}>Search by SKU</label>\n          <div className=\"form-group\">\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'itemCode'\n                    id={`itemCode sku`}\n                    value = {initialValue.itemCode}\n                    placeholder=\"Item Code\"\n                    autoComplete='off'\n                    // onChange={onSKUChange} \n                    />\n            </div>\n\n            <div className=\"form-group\">\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'vehicleModel'\n                    id={`vehicleModel sku`}\n                    value = {skuData.vehicleModel}\n                    placeholder=\"Vehicle Model\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'brandCompany'\n                    id={`brandCompany sku`}\n                    value = {skuData.brandCompany}\n                    placeholder=\"Brand Company\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'partNum'\n                    id={`partNum sku`}\n                    value = {skuData.partNum}\n                    placeholder=\"Part Number\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <button type=\"submit\" className=\"submit-btn\">\n                    Search\n                </button>\n            </div>\n\n            {productSKUData.length!==0 && !noMatch && \n            <div className=\"form-group\">\n                <label>SKU</label>\n                <div className=\"card-form-control\"\n                    style={{display:\"flex\", flexDirection:\"column\", alignItems:\"flex-start\"}}\n                >\n                    {productSKUData.map((item,i)=>{\n                        return (\n                        <p className='sku-list-item'\n                        onClick={()=>copyText(item.sku)}\n                        >\n                            {item.sku}\n                        </p>\n                        )\n                    })}\n                </div>\n            </div>}\n            \n            {noMatch && <p>No Match Found</p>  }\n\n        </form>\n    </div>\n  )\n}\n\nexport default ProductForm","import { useState, useEffect } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchSKUProducts } from '../../features/products/productSlice';\nimport { logOutUser } from '../../features/auth/authSlice';\nimport { FiEdit2 } from 'react-icons/fi'\nimport { AiOutlineClose } from 'react-icons/ai'\n\nimport \"./Products.css\"\n\nimport Loader from '../../components/Loader/Loader';\nimport ProductForm from '../../components/Forms/ProductForm';\nimport useAuth from '../../hooks/useAuth';\n\nfunction Product() {\n    const params = useParams()\n    const navigate = useNavigate()\n    const dispatch = useDispatch();\n\n    const [editFlag, setEditFlag] = useState(false)\n\n    const {productData, isLoading, message} = useSelector((state)=>state.product)\n    const filteredProduct = productData?.filter(prod=>prod.sku===params.sku)[0]\n\n    const { token } = useSelector((state)=>state.auth)\n    const { isAdmin } = useAuth()\n\n    useEffect(()=>{\n        if(!token){\n            dispatch(logOutUser())\n            navigate(\"/\")\n        }\n        dispatch(searchSKUProducts({\n            itemCode:params.sku.split(\"-\")[0],\n            vehicleModel:params.sku.split(\"-\")[1],\n            brandCompany:params.sku.split(\"-\")[2],\n            partNum:params.sku.split(\"-\")[3],\n            skuOnlyFlag:\"false\"\n          }))        \n    },[])\n\n    useEffect(()=>{\n        if(!editFlag && message===`Updated ${params.sku}`){\n            dispatch(searchSKUProducts({\n                itemCode:params.sku.split(\"-\")[0],\n                vehicleModel:params.sku.split(\"-\")[1],\n                brandCompany:params.sku.split(\"-\")[2],\n                partNum:params.sku.split(\"-\")[3],\n                skuOnlyFlag:\"false\"\n              }))   \n        }\n    },[editFlag])\n\n  return (\n    <>\n\n    {isLoading && <Loader />}\n    <div className=\"product-container\">\n        {isAdmin && \n            <div className='edit-btn' \n                onClick={()=>setEditFlag(!editFlag)}>\n                {editFlag?<AiOutlineClose />:<FiEdit2 />}\n            </div>\n        }\n\n        <h1>Product</h1>\n        \n        {editFlag?\n        <ProductForm initialValue={filteredProduct} setFlag={setEditFlag}/>\n        :\n        <>\n            <p>itemCode:{filteredProduct?.itemCode} </p>\n            <p>vehicleModel:{filteredProduct?.vehicleModel} </p>\n            <p>brandCompany: {filteredProduct?.brandCompany} </p>\n            <p>partNum:{filteredProduct?.partNum} </p>\n            <p>sku:{filteredProduct?.sku} </p>\n            <p>mrp:{filteredProduct?.mrp} </p>\n            <br />\n            <p>compatibleModels:</p>\n            {filteredProduct?.compatibleModels.map((model,index)=>{\n                return <p key={index}>{model}</p>\n            })}\n            <br />\n            <p>metaData:</p>\n            {filteredProduct?.metaData && Object.keys(filteredProduct?.metaData).map((field,index)=>{\n                return(\n                    <p key={index}>{field}:{filteredProduct?.metaData[field]}</p>\n                    )\n                })}\n        </>}\n\n    </div>\n    </>\n  )\n}\n\nexport default Product","import React from 'react'\n\nfunction NotFound() {\n  return (\n    <div className='data-container'>\n        {/* <div className=\"window-content\" > */}\n\n          <h1>404</h1>\n          <br />\n          <h3>Page Not Found</h3>\n        {/* </div> */}\n\n    </div>\n  )\n}\n\nexport default NotFound","import { useState } from 'react'\nimport { useDispatch } from \"react-redux\"\nimport \"./Form.css\"\nimport {resetAuth, setUserCredentials} from \"../../features/auth/authSlice\"\n\nfunction LoginForm() {\n    const dispatch = useDispatch(); \n\n    const [formData, setFormData] = useState({\n        username:'',\n        password:'',\n    })\n\n    const [showPasswordFlag, setShowPasswordFlag] = useState(false)\n\n    const {username, password } = formData\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n\n    const onChange=(e)=>{\n        setFormData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        if(username===null || password===null){\n            console.log(`Please fill all fields`)\n        }else{\n            dispatch(resetAuth())\n            const userData = {\n                username,\n                password\n            }\n            // dispatch(refreshToken(userData))\n            dispatch(setUserCredentials(userData))\n            // console.log(JSON.stringify(userData,null,4))\n        }\n    }\n\n  return (\n    <>\n    <div className='form-container'>\n        <form onSubmit={onSubmit}>\n            <div className=\"form-grid\">\n                \n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input type=\"text\" \n                        className='form-control'\n                        name= 'username'\n                        id='username'\n                        value = {username}\n                        placeholder=\"Username\"\n                        autoComplete='off'\n                        onChange={onChange} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type={showPasswordFlag?`text`:`password`} \n                        className='form-control'\n                        name= 'password'\n                        id='password'\n                        value = {password}\n                        placeholder=\"Password\"\n                        autoComplete='off'\n                        onChange={onChange} />\n                </div>\n\n                <div className=\"form-group\">\n                    <div className=\"submit-btn\"\n                        onClick={()=>setShowPasswordFlag(!showPasswordFlag)}\n                    >\n                        Show Password\n                    </div>\n                </div>\n\n            </div>\n\n            <div className=\"form-group\">\n                <button type=\"submit\" className=\"submit-btn\">\n                    Submit\n                </button>\n            </div>\n        </form>\n    </div>\n    </>\n  )\n}\n\nexport default LoginForm","import { useEffect } from 'react'\nimport { useSelector } from \"react-redux\"\nimport LoginForm from '../../components/Forms/LoginForm'\n\nimport \"./Login.css\"\nimport Loader from '../../components/Loader/Loader'\nimport { useNavigate } from \"react-router-dom\"\n\nfunction Login() {\n  const navigate= useNavigate()\n  const {isLoading,isSuccess, isError, message} =useSelector((state)=>state.auth)\n\n  useEffect(()=>{\n    if(isSuccess){\n      navigate(\"/\")\n    }\n  },[isLoading])\n\n  return (\n    <>\n    {isLoading && <Loader />}\n    <div>\n        {/* Login */}\n        <LoginForm />\n        {isError && <p>{message}</p>}\n    </div>\n    </>\n  )\n}\n\nexport default Login","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport \"./Modal.css\"\n\nfunction LoginAgainModal() {\n    const navigate = useNavigate()\n\n  return (\n    <>\n    <div className=\"modal-backdrop\"></div>\n    <div className='modal-container'>\n        <div className=\"form-container\">\n            <p>Login has Expired. Login again.</p>\n            <br />\n\n        <div className=\"control-box\">\n          <div className=\"control-section\">\n            \n            <div className=\"control-btn\"\n            //   style={{backgroundColor:`var(--buttonGreen)`}}\n            onClick={()=>navigate(\"/\")}\n            >\n              Go to Login\n            </div>\n            </div>\n        </div>\n        </div>\n\n    </div>\n    </>\n  )\n}\n\nexport default LoginAgainModal","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\n\nimport \"./Form.css\"\nimport { getAllUsers, updateUser } from '../../features/users/usersSlice';\n\nfunction UserForm({initialValue, setFlag}) {\n    const dispatch = useDispatch(); \n\n    const { isSuccess, message } = useSelector((state)=>state.users)\n\n    const [formData, setFormData] = useState({\n        id: initialValue._id,\n        username: initialValue.username,\n        firstname: initialValue.firstname,\n        lastname: initialValue.lastname,\n        active: initialValue.active,\n        roles: initialValue.roles\n    })\n\n    const { id, username, firstname, lastname, active, roles } = formData\n    const [checkList, setCheckList] = useState([...initialValue.roles])\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n\n    const onChange=(e)=>{\n        setFormData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const handleRoles=(e)=>{\n        if(e.target.value===\"admin\"){\n            setCheckList([\"Admin\",\"Manager\",\"Employee\"])\n        }else if(e.target.value===\"manager\"){\n            setCheckList([\"Manager\",\"Employee\"])\n        }else if(e.target.value===\"employee\"){\n            setCheckList([\"Employee\"])\n        }\n    }\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        if(username===null || firstname===null || lastname===null ||\n            !Array.isArray(roles)){\n            console.log(`Please enter valid data`)\n        }else{\n            // console.log(`formData:${JSON.stringify(formData,null,4)}`)\n            const userInfo = {\n                id,\n                username,\n                firstname,\n                lastname,\n                active:active===true||active===\"true\"?true:false,\n                roles\n            }\n            \n            dispatch(updateUser(userInfo))\n        }\n    }\n\n    /////////////////////////////////////////////////\n    //////// Hooks //////////////////////////////////\n    ////////////////////////////////////////////////\n    \n    useEffect(()=>{\n        setFormData((prevState)=>({...prevState, roles:checkList}))\n        // console.log(`formData:${JSON.stringify(formData,null,4)}`)\n    },[checkList])\n\n    useEffect(()=>{\n        if(isSuccess && message!==\"\"){\n            dispatch(getAllUsers())\n\n            if(isSuccess){\n                // console.log(`get all finished`)\n                setFlag(false)\n             }\n        }\n    },[isSuccess])\n\n  return (\n    <div className='card-container' style={{padding:\"0\", border:\"none\"}}>\n        <p><span style={{fontWeight:\"bold\", marginBottom:\"0.5rem\"}}>id: </span> {initialValue._id}</p>\n        <form onSubmit={onSubmit}>\n\n            <div className=\"form-group\">\n                <label htmlFor={`username ${initialValue.username}`}>username</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'username'\n                    id={`username ${initialValue.username}`}\n                    value = {username}\n                    placeholder=\"Username\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`firstname ${initialValue.firstname}`}>firstname</label>\n                <input type=\"text\" \n                    className='form-control'\n                    name= 'firstname'\n                    id={`firstname ${initialValue.firstname}`}\n                    value = {firstname}\n                    placeholder=\"firstname\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`lastname ${initialValue.lastname}`}>lastname</label>\n                <input type=\"text\" \n                    className='form-control'\n                    name='lastname'\n                    id={`lastname ${initialValue.lastname}`}\n                    value = {lastname}\n                    placeholder=\"lastname\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                    <label>active</label>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"active\" \n                            id={`${initialValue.username} active true`} \n                            value={`true`}\n                            defaultChecked={initialValue.active?true:false}\n                            onChange={onChange} />\n                        <label htmlFor={`${initialValue.username} active true`}>Yes</label>\n                        </div>\n                    </div>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"active\" \n                            id={`${initialValue.username} active false`} \n                            value={`false`}\n                            defaultChecked={initialValue.active?false:true}\n                            onChange={onChange} />\n                        <label htmlFor={`${initialValue.username} active false`}>No</label>\n                        </div>\n                    </div>\n                </div>\n\n            <div className=\"form-group\">\n                    <label>roles</label>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"roles\" \n                            id={`${initialValue.username} role admin`} \n                            value=\"admin\"\n                            defaultChecked={initialValue.roles.includes(\"Admin\")?true:false}\n                            onChange={handleRoles} />\n                        <label htmlFor={`${initialValue.username} role admin`}>Admin</label>\n                        </div>\n                    </div>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"roles\" \n                            id={`${initialValue.username} role manager`} \n                            value=\"manager\"\n                            defaultChecked={initialValue.roles.includes(\"Manager\") && \n                                            !initialValue.roles.includes(\"Admin\") ?\n                                            true:false}\n                            onChange={handleRoles} />\n                        <label htmlFor={`${initialValue.username} role manager`}>Manager</label>\n                        </div>\n                    </div>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"roles\" \n                            id={`${initialValue.username} role employee`} \n                            value=\"employee\"\n                            defaultChecked={initialValue.roles.includes(\"Employee\") && \n                                            !initialValue.roles.includes(\"Admin\") && \n                                            !initialValue.roles.includes(\"Manager\") ?\n                                            true:false}\n                            onChange={handleRoles} />\n                        <label htmlFor={`${initialValue.username} role employee`}>Employee</label>\n                        </div>\n                    </div>\n                \n                </div>\n\n                <div className=\"form-group\">\n                    <button type=\"submit\" className=\"submit-btn\">\n                        Update\n                    </button>\n                </div>\n                \n        </form>\n    </div>\n  )\n}\n\nexport default UserForm","import { useState } from 'react'\nimport { FiEdit2 } from 'react-icons/fi'\nimport { AiOutlineClose } from 'react-icons/ai'\n\n\nimport \"./Card.css\"\nimport UserForm from '../Forms/UserForm'\n\nfunction UserCard({info}) {\n  const [editFlag, setEditFlag] = useState(false)\n\n  return (\n    <>\n    \n    <div className='card-container'>\n        <div className='edit-btn' \n            onClick={()=>setEditFlag(!editFlag)}>\n            {editFlag?<AiOutlineClose />:<FiEdit2 />}\n        </div>\n      {editFlag?\n      <UserForm initialValue={info} setFlag={setEditFlag}/>\n      :\n      <>\n        <p><span>id: </span> {info._id}</p>\n        <p><span>username: </span>{info.username}</p>\n        <p><span>firstname: </span> {info.firstname}</p>\n        <p><span>lastname: </span> {info.lastname}</p>\n        <p><span>active: </span>{info.active ?\"Yes\":\"No\"}</p>\n        <p><span>roles: </span>\n        {info.roles?.map((role,i)=><span style={{fontWeight:\"normal\"}} key={i}>{role} </span>)}</p>\n        <br />\n      </>\n      }\n    </div>\n    </>\n  )\n}\n\nexport default UserCard","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { getAllUsers } from '../../features/users/usersSlice'\n\nimport \"./User.css\"\n\nimport LoginAgainModal from '../../components/Modals/LoginAgainModal'\nimport useAuth from '../../hooks/useAuth'\nimport Loader from '../../components/Loader/Loader'\nimport UserCard from '../../components/Cards/UserCard'\n\nfunction Users() {\n    const dispatch = useDispatch()\n    const {token} = useSelector((state)=>state.auth)\n    const {isAdmin} = useAuth()\n\n    const { usersList, isLoading } = useSelector((state)=>state.users)\n\n    useEffect(()=>{\n        dispatch(getAllUsers())\n    },[])\n\n  return (\n    <>\n    {!token && <LoginAgainModal />}\n    {isLoading && <Loader />}\n    <div>\n        \n         <div className='form-container' style={{width:\"60vw\"}}>\n            <div className=\"form-grid\">\n            {(isAdmin)?\n            <>\n                <div className=\"form-group\">\n\n                    <div className=\"header\">\n                        <h3>User Data</h3>\n                    </div>\n                \n                </div>\n\n                <div className=\"user-card-grid\">\n\n                {(usersList && usersList?.length!==0) && \n                    usersList?.map((userInfo,index)=>\n                    \n                    <div key={index}>\n                        <UserCard info={userInfo} />\n                    </div>\n                    )\n                }\n                </div>\n            \n            </>\n            :\n            <p>Unauthorized</p>\n            }\n            </div>\n        </div>\n    </div>\n    </>\n  )\n}\n\nexport default Users","import React from 'react'\nimport \"./Footer.css\"\nimport useAuth from '../../hooks/useAuth'\n\nfunction Footer() {\n    const {status} = useAuth()\n  return (\n    <div className='footer-container'>\n        {(status!==\"\" && status)?`Din 2024 | ${status}`:\"Din 2024\"}\n    </div>\n  )\n}\n\nexport default Footer","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { AiOutlinePlus, AiOutlineClose,AiOutlineSearch } from \"react-icons/ai\"\nimport { resetSearchProducts,searchProducts, searchSKUProducts,searchSKUProductsOnly } from '../../features/products/productSlice';\nimport { generateDemandSlip, getFilteredDemandSlips, resetAfterNewDemandSlip, resetOrders } from '../../features/orders/orderSlice';\nimport Loader from '../Loader/Loader';\n\nimport debouce from \"lodash.debounce\";\n\nfunction QuickProdSearchForm({setToggleFlag,passNextFlag }) {\n    const dispatch = useDispatch();\n\n    const { productData, noMatch } = useSelector((state)=>state.product)\n    const { newDemandSlip, isSuccess, isLoading, message } = useSelector((state)=>state.orders)\n\n    const [newDSFlag, setNewDSFlag] = useState(false)\n\n    const [searchInput, setSearchInput] = useState(\"\");\n\n    const [formData, setFormData] = useState({\n        deliveryPartnerName: \"\",\n        distributorName: \"\",\n        orderedProductList: [{\n            sku:\"\",\n            productFullName:\"\",\n            quantity:\"\"\n        }]\n    })\n\n    const [updatedOrderList, setUpdatedOrderList] = useState([{\n        sku:\"MANUAL\",\n        productFullName:\"\",\n        quantity:\"\"\n    }])\n\n    const [skuData, setSKUData] = useState({\n        itemCode:\"\",\n        vehicleModel:\"\",\n        brandCompany:\"\",\n        partNum:\"\",\n        skuOnlyFlag:\"true\"\n    })\n      \n    const { deliveryPartnerName, distributorName } = formData\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n\n    // const copyText=(text)=>{\n    //     navigator.clipboard.writeText(text)\n    // }\n    const handleSearchChange = (e) => {\n        setSearchInput(e.target.value);\n    }\n\n    // Debounce function\n    const debouncedResults = debouce(handleSearchChange, 800)\n\n    const handleModalClose =()=>{\n        setNewDSFlag(false)\n        setUpdatedOrderList([{\n            sku:\"MANUAL\",\n            productFullName:\"\",\n            quantity:\"\"\n        }])\n        setFormData({\n            deliveryPartnerName: \"\",\n            distributorName: \"\",\n            orderedProductList: [{\n                sku:\"\",\n                productFullName:\"\",\n                quantity:\"\"\n            }]\n        })\n\n        dispatch(resetSearchProducts())\n    }\n\n    // const handleNumField = (e) => {\n    //     const value = e.target.value.replace(/\\D/g, \"\");\n    //     setFormData((prevState)=>({...prevState, \n    //         [e.target.name]:value}));\n    // };\n\n    const addItemfromSearch=(item)=>{\n        const newItem = {\n            sku: item.sku,\n            productFullName: item.productFullName,\n            quantity:\"\"\n        }\n        \n        // Check for Duplicates\n        var duplicateCheck = []\n        duplicateCheck = updatedOrderList.filter(prod=>prod.sku===item.sku)\n        \n        if(duplicateCheck.length>0){\n            return alert('Item Already Exists')\n        }\n\n        setUpdatedOrderList((prevState)=>([\n            ...prevState,\n            newItem\n        ]\n        ))\n    }\n\n    const onChange=(e)=>{\n        setFormData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onSKUChange=(e)=>{\n        setSKUData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onOrderItemChange=(e,i)=>{\n        let orderList = [...updatedOrderList]\n        let orderItem = orderList[i]\n        if(e.target.name===\"quantity\"){\n            const numValue = e.target.value.replace(/\\D/g, \"\")\n            orderItem[e.target.name] = numValue\n        }else{\n            orderItem[e.target.name] = e.target.value.toUpperCase()\n        }\n\n        setUpdatedOrderList(orderList)\n    }\n\n    const handleAddItem=()=>{\n        const modelList = [...updatedOrderList,{sku:\"MANUAL\",productFullName:\"\",quantity:\"\"}]\n        setUpdatedOrderList(modelList)\n    }\n\n    const handleItemDelete = (index)=>{\n        const modelList = [...updatedOrderList]\n        modelList.splice(index,1)\n\n        setUpdatedOrderList(modelList)\n    }\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        let emptyOrderListObj = []\n        emptyOrderListObj = updatedOrderList.filter(prod=>(prod.sku===\"\"\n                                                    ||prod.productFullName===\"\"\n                                                    ||prod.quantity===\"\"))\n\n        if(emptyOrderListObj.length>0){\n            return alert('Empty Field/s')\n        }\n\n        // if(updatedOrderList)\n\n        if(deliveryPartnerName===\"\" || distributorName===\"\" || updatedOrderList.length===0 \n            || !Array.isArray(updatedOrderList)){\n            return alert(`Please enter valid data`)\n        }else{\n            const orderInfo = {\n                deliveryPartnerName:deliveryPartnerName.toUpperCase(),\n                distributorName:distributorName.toUpperCase(),\n                orderedProductList:updatedOrderList,\n            }\n            \n            // console.log(`formData:${JSON.stringify(orderInfo,null,4)}`)\n            \n            dispatch(generateDemandSlip(orderInfo))\n            \n        }\n    }\n\n    // Get SKU Products API call \n    const onSKUSubmit=(e)=>{\n        e.preventDefault()\n        \n        if(skuData.itemCode===\"\"){\n            return alert(`Please Enter Item Code`)\n        }else{\n            setSearchInput(\"\")\n            dispatch(searchSKUProducts(skuData))\n        }\n    }\n\n    /////////////////////////////////////////////////\n    //////// Hooks //////////////////////////////////\n    ////////////////////////////////////////////////\n\n    // Search API call\n    useEffect(()=>{\n        if (searchInput!==\"\") {\n        dispatch(searchProducts(searchInput))\n        }\n    },[searchInput])\n\n    // Success reset\n    useEffect(()=>{\n        if(isSuccess && message!==\"\"){\n            // dispatch(resetOrders())\n            dispatch(getFilteredDemandSlips())\n\n            if(isSuccess){\n                setFormData({\n                    deliveryPartnerName: \"\",\n                    distributorName: \"\",\n                    orderedProductList: [{\n                        sku:\"\",\n                        productFullName:\"\",\n                        quantity:\"\"\n                    }]\n                })\n\n                setSKUData({\n                    itemCode:\"\",\n                    vehicleModel:\"\",\n                    brandCompany:\"\",\n                    partNum:\"\",\n                    skuOnlyFlag:\"true\"\n                })\n                setSearchInput(\"\")\n                dispatch(resetAfterNewDemandSlip())\n                setNewDSFlag(true)\n                // passNextFlag(true)\n                // setToggleFlag(false)\n            }\n        }\n    },[isSuccess])\n\n    // useEffect(()=>{\n    //     console.log(`uOL:${JSON.stringify(updatedOrderList,null,4)}`)\n    // },[updatedOrderList])\n\n    // useEffect(()=>{\n    //     console.log(`oL:${JSON.stringify(newDemandSlip.orderedProductList,null,4)}`)\n    // },[newDemandSlip])\n\n  return (\n    <>\n    {isLoading && <Loader/>}\n    {newDSFlag &&\n    <>\n    <div className=\"modal-backdrop\" ></div> \n        <div className='modal-container'>\n            <div className=\"edit-btn\"\n                onClick={()=>handleModalClose()}\n            >\n            <AiOutlineClose />\n            </div>\n            <div className='ds-new-box'>\n\n                <div className='ds-new-col'>\n\n                <p><span>Ticket Number: </span>{`${newDemandSlip.ticketNumber}`}</p>\n                <p><span>Date: </span>{`${newDemandSlip.date}`}</p>\n                <br />\n\n                <p><span>Delivery Partner Name: </span>{`${newDemandSlip.deliveryPartnerName}`}</p>\n                <p><span>Distributor Name: </span>{`${newDemandSlip.distributorName}`}</p>\n                {/* <br /> */}\n                </div>\n\n                <div className='ds-new-col'>\n                <p>{`Prodcuts:`}</p>\n\n                 {newDemandSlip.orderedProductList?.map((item,index)=>{\n                     return(\n                    <div className='ds-col-prod-list' key={index}>\n                        <p><span>SKU: </span> {`${item.sku}`}</p>\n                        <p><span>Product Full Name: </span> {`${item.productFullName}`}</p>\n                        <p><span>Quantity: </span> {`${item.quantity}`}</p>\n                        <br />\n                    </div>\n                    )\n                })}\n                </div>\n            </div>\n\n        </div>\n    </>\n    }\n    <div className='card-container card-grid' style={{padding:\"0\", border:\"none\"}}>\n        <form onSubmit={onSubmit}>\n            <div className=\"form-group\">\n                <label htmlFor={`deliveryPartnerName`}>Delivery Partner Name</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'deliveryPartnerName'\n                    id={`deliveryPartnerName`}\n                    value = {deliveryPartnerName}\n                    placeholder=\"Delivery Partner Name\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`distributorName`}>Distributor Name</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'distributorName'\n                    id={`distributorName`}\n                    value = {distributorName}\n                    placeholder=\"Distributor Name\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group-flex\" style={{marginBottom:`1rem`}}>\n                <label>Products</label>\n                {updatedOrderList.map((prod,index)=>{\n                    return(\n                        <div className='model-input-container' key={index}>\n                            <section>\n\n                            <input\n                                className='card-form-control'\n                                type='text'\n                                style={{width:\"99%\",marginRight:\"0.2rem\"}}\n                                name= {`sku`}\n                                id={`sku ${index}`}\n                                value = {prod.sku}\n                                placeholder=\"Prod SKU\"\n                                autoComplete='off'\n                                onChange={(e)=>onOrderItemChange(e,index)}\n                                />\n                             <input\n                                className='card-form-control'\n                                type='text'\n                                style={{width:\"99%\",marginRight:\"0.2rem\"}}\n                                name= {`productFullName`}\n                                id={`productFullName ${index}`}\n                                value = {prod.productFullName}\n                                placeholder=\"Prod Full Name\"\n                                autoComplete='off'\n                                onChange={(e)=>onOrderItemChange(e,index)}\n                                />\n                            </section>\n\n                            <div style={{display:`flex`, \n                                flexDirection:`column`,\n                                alignSelf:`flex-end`\n                                }}\n                            >\n\n                            <div className=\"delete-btn\" \n                                onClick={()=>handleItemDelete(index)}\n                                >\n                                <AiOutlineClose />\n                            </div>\n                             <input\n                                className='card-form-control'\n                                type='text'\n                                style={{width:\"99%\",marginRight:\"0.2rem\"}}\n                                name= {`quantity`}\n                                id={`quantity ${index}`}\n                                value = {prod.quantity}\n                                placeholder=\"Qty\"\n                                autoComplete='off'\n                                onChange={(e)=>onOrderItemChange(e,index)}\n                                />\n\n                            </div>\n\n                        </div >\n                    )\n                })}\n                    <br />\n                <div className=\"add-btn\"\n                    onClick={handleAddItem}\n                >\n                    <AiOutlinePlus />\n                </div>\n\n            </div>\n            <div className=\"form-group\">\n                <button type=\"submit\" className=\"submit-btn\">\n                    Generate\n                </button>\n            </div>\n        </form>\n        {/* /////////////////////////////// */}\n        <form onSubmit={onSKUSubmit}>\n            {/* Load Product Controls */}\n            <div className=\"controlbox\">\n\n            <label style={{fontWeight:\"bold\"}}>Search</label>\n            <div className=\"search-bar\">\n            <AiOutlineSearch className='search-icon'/>\n            <input\n                type=\"text\"\n                name=\"search\"\n                placeholder=\"Search for Product\"\n                onChange={debouncedResults}\n                autoComplete='off'\n                />\n\n            </div>\n            </div> \n\n            {/* Search by SKU */}\n        <label style={{fontWeight:\"bold\"}}>Search by SKU</label>\n        <div className=\"form-group\" >\n            <input type=\"text\" \n                className='card-form-control'\n                name= 'itemCode'\n                id={`itemCode sku`}\n                value = {skuData.itemCode}\n                placeholder=\"Item Code\"\n                autoComplete='off'\n                onChange={onSKUChange} \n                />\n        </div>\n\n        <div className=\"form-group\">\n            <input type=\"text\" \n                className='card-form-control'\n                name= 'vehicleModel'\n                id={`vehicleModel sku`}\n                value = {skuData.vehicleModel}\n                placeholder=\"Vehicle Model\"\n                autoComplete='off'\n                onChange={onSKUChange} />\n        </div>\n\n        <div className=\"form-group\">\n            <input type=\"text\" \n                className='card-form-control'\n                name= 'brandCompany'\n                id={`brandCompany sku`}\n                value = {skuData.brandCompany}\n                placeholder=\"Brand Company\"\n                autoComplete='off'\n                onChange={onSKUChange} />\n        </div>\n\n        <div className=\"form-group\">\n            <input type=\"text\" \n                className='card-form-control'\n                name= 'partNum'\n                id={`partNum sku`}\n                value = {skuData.partNum}\n                placeholder=\"Part Number\"\n                autoComplete='off'\n                onChange={onSKUChange} />\n        </div>\n\n        <div className=\"form-group\">\n            <button type=\"submit\" className=\"submit-btn\">\n                Search\n            </button>\n        </div>\n\n        {productData.length!==0 && !noMatch && \n        <div className=\"form-group\">\n            <label>Results {`(${productData.length})`}</label>\n            <div className=\"search-result-container\">\n\n            <div \n            // className=\"card-form-control\"\n                // style={{display:\"flex\", flexDirection:\"column\", alignItems:\"flex-start\"}}\n                >\n                {productData.map((item,i)=>{\n                    return (\n                        <div className='sku-list-item'\n                        key={i}\n                        onClick={()=>addItemfromSearch(item)}\n                        >\n                            <p>{i+1}</p>\n                            \n                            <section>\n                                <p>\n                                    {item.sku}\n                                </p>\n                                {/* <br /> */}\n                                <p style={{fontWeight:\"bold\"}}>{item.productFullName}</p>\n                            </section>\n                        {/* <br /> */}\n                        </div>\n                    )\n                })}\n            </div>\n            </div>\n        </div>}\n        \n        {noMatch && <p>No Match Found</p>  }\n\n        </form>\n    </div>\n    </>\n  )\n}\n\nexport default QuickProdSearchForm","import React, { useState, useEffect, useRef } from 'react'\nimport { FaAngleDown } from \"react-icons/fa6\";\nimport \"./Dropdown.css\"\n\nfunction UserDropdown({value, dataList, passUsername}) {\n    const boxRef = useRef(null) \n\n    const [isActive, setIsActive] = useState(false)\n    const [selectedItem, setSelectedItem] = useState(\"\")\n\n    const handleClick=()=>{\n        setIsActive(!isActive)\n    }\n\n    const handleItemClick=(user)=>{\n        const data = user\n\n        passUsername(data)\n        setSelectedItem(user)\n        setIsActive(!isActive)\n    }\n\n    useEffect(()=>{\n        setSelectedItem(value)\n    },[value])\n\n    // Modal close\n    useEffect(()=>{\n        let handler = (event) => {\n            if(!boxRef.current.contains(event.target)\n               )\n              {\n                setIsActive(false)\n              }\n        };\n        document.addEventListener(\"mousedown\", handler);\n    \n        return()=>{\n        document.removeEventListener(\"mousedown\",handler);\n        }\n    })\n\n  return (\n    <div className=\"drop-down-container no-border-dropdown-container\" ref={boxRef}>\n        <div className=\"drop-down-item selected-drop-down\" onClick={()=>handleClick()}>\n            <p>{selectedItem===\"\"?`Select a User`:selectedItem}</p>\n            <div className='arrow-container'>\n            <FaAngleDown className='down-arrow' />\n            </div>\n        </div>     \n\n        {isActive && \n        <div className=\"drop-down-list-container no-border-dropdown-list\">\n            {dataList?.map((item,index)=>\n            <div className=\"drop-down-item\" key={index}\n                onClick={()=>handleItemClick(item)}\n            >\n                <p>{item}</p>\n            </div>\n            )\n            }\n\n        </div>\n        }     \n    </div>\n  )\n}\n\nexport default UserDropdown","import React, { useEffect, useState } from 'react'\nimport useAuth from '../../hooks/useAuth'\n\nimport '../../pages/DemandSlip/DemandSlip.css'\n\nfunction DemandSlipCard({info, partialFlag=false}) {\n    const { isAdmin, isManager } = useAuth()\n\n    const [statusColour, setStatusColour] = useState({})\n\n    const createdTimeString = new Date(info.createdAt).toString().split(' ')[4]\n    const updatedTimeString = new Date(info.updatedAt).toString().split(' ')[4]\n    \n    useEffect(()=>{\n        if(info.status==='partial'){\n            setStatusColour({backgroundColor:`#ffb703`})\n        }else if(info.status==='failed'){\n            setStatusColour({backgroundColor:`#e63946`})\n        }else if(info.status==='fulfilled'){\n            setStatusColour({backgroundColor:`#8ac926`})\n        }else{\n            setStatusColour({border:`1px solid black`})\n        }\n    },[])\n\n  return (\n    <>\n    <div className='ds-slip-box'>\n    <div style={{width:`100%`}}>\n        <div className=\"card-row\">\n            <div className=\"card-element\">\n\n            <h3>{info.ticketNumber}</h3>\n            {(isAdmin||isManager) && \n            <h3>{info?.username}</h3>\n            }\n            </div>\n\n            <div className=\"card-element\">\n                <div className=\"status-circle\"\n                    style={statusColour}\n                >\n                </div>\n            </div>\n\n        </div>\n        <br />\n\n        {(isAdmin||isManager) && \n        <div className=\"card-row\">\n\n            <div className=\"card-element\">\n                <h3>Created</h3>\n                {createdTimeString}\n            </div>\n\n            <div className=\"card-element\">\n                <h3>Updated</h3>\n                {updatedTimeString}\n            </div>\n        </div>\n        }\n        {/* <div className=\"card-row\">\n        </div> */}\n        \n        <br />\n        \n        <div className=\"card-row\">\n            <div className=\"card-element\">\n                <h3>Delivery Partner</h3>\n                <p>{info.deliveryPartnerName}</p>\n            </div>\n\n            <div className=\"card-element\">\n                <h3>Distributor</h3> \n                <p>{info.distributorName}</p>\n            </div>\n        </div>\n    {/* <p><span>Status: </span> {info.status}</p> */}\n\n    <br />\n    <p><span>Total Cost: </span>{info.totalCost}</p>\n    <br />\n\n    <div className=\"card-grid-row\">\n        <h3></h3>\n        <h3>Products</h3>\n        <h3>Ord.</h3>\n        {partialFlag && <h3>Recv.</h3>}  \n    </div>\n\n    {/* <div className='ds-new-col'> */}\n        {info.orderedProductList?.map((prod,i)=>\n            <div className=\"card-grid-row\" key={i}>\n                <p>{i+1}.</p>\n\n                <div className=\"card-element\">\n\n                    <p style={{fontWeight:`bold`}}>{prod.productFullName}</p>\n                    <p>{prod.sku}</p>\n                </div>\n\n                <p>{prod.quantity}</p>\n                \n                {partialFlag && \n                    <p>{info.recievedProductList[i]?.quantity}</p>\n                }\n                \n                {/* <br /> */}\n            {/* </React.Fragment>   */}\n        </div>\n        )}\n    </div>\n    </div>\n    </>\n  )\n}\n\nexport default DemandSlipCard","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { AiOutlinePlus, AiOutlineClose } from \"react-icons/ai\"\nimport { getFilteredDemandSlips, resetAfterNewDemandSlip, updateDemandSlip } from '../../features/orders/orderSlice';\nimport useAuth from '../../hooks/useAuth';\n\nfunction UpdateOrderForm({ initialValue, setFlag}) {\n    const dispatch = useDispatch();\n\n    const {isAdmin, isManager} = useAuth()\n\n    const {isSuccess, updatedDataFlag} = useSelector((state)=>state.orders)\n\n    const [formData, setFormData] = useState({\n        ...initialValue, \n        recievedProductList: initialValue.orderedProductList\n    })\n    \n    const { deliveryPartnerName, distributorName } = formData\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n\n    const onChange=(e)=>{\n        setFormData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onRecievedListChange=(e,i)=>{\n        var tempList = [...formData.recievedProductList]\n\n        const numValue = e.target.value.replace(/\\D/g, \"\");\n\n        // console.log(`nV:${numValue}`)\n        const intInputValue = parseInt(numValue.replace(/\\D/g, \"\"),10)\n        const intMaxValue = parseInt(initialValue.orderedProductList[i].quantity,10)\n        \n        if(intInputValue>intMaxValue){\n            return alert('Invalid Quanity')\n        }\n        var tempItem = tempList[i]\n        let newItem = {\n            sku:tempItem.sku,\n            productFullName:tempItem.productFullName,\n            quantity:intInputValue?intInputValue:0\n        }\n\n\n        // tempItem[\"quantity\"] = e.target.value\n        tempList.splice(i,1,newItem)\n\n        // console.log(`itemList:${JSON.stringify(tempList,null,4)}`)\n        setFormData((prevState)=>({\n            ...prevState,\n            recievedProductList:tempList\n        }))\n\n    }\n\n    const handleNumField = (e) => {\n        const value = e.target.value.replace(/\\D/g, \"\");\n        setFormData((prevState)=>({...prevState, \n            [e.target.name]:value}));\n    };\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        let updatedOrderList = [...formData.recievedProductList]\n        // console.log(`updatedOL:${JSON.stringify(updatedOrderList,null,4)}`)\n        // console.log(`orderedList:${JSON.stringify(formData.orderedProductList,null,4)}`)\n        \n        let emptyOrderListObj = []\n        emptyOrderListObj = updatedOrderList.filter(prod=>(prod.sku===\"\"\n                                                    ||prod.productFullName===\"\"\n                                                    ||prod.quantity===\"\"))\n\n        //Check for Empty Order List\n        if(emptyOrderListObj.length>0){\n            return alert('Empty Field/s')\n        }\n\n        // Status-wise Order List update\n        if(formData.status===\"failed\"){\n            updatedOrderList = []\n        }else if(formData.status===\"fulfilled\"){\n            updatedOrderList = [...formData.orderedProductList]\n        }\n\n        // Invalid Partial Status input check\n        if(formData.status===\"partial\"){\n            let allQtyZeroBool = true\n            let noQtyChangeBool = true\n\n            updatedOrderList.map((item,index)=>{\n                // All qty zero flag check\n                `${item.quantity}`==='0'?\n                    allQtyZeroBool=allQtyZeroBool && true \n                    :\n                    allQtyZeroBool=allQtyZeroBool && false;\n                \n                // All qty same as ordered check\n                `${item.quantity}`===formData.orderedProductList[index].quantity?\n                    noQtyChangeBool = noQtyChangeBool && true\n                    :\n                    noQtyChangeBool = noQtyChangeBool && false;\n                }\n            )\n\n            // Partial to Failed Alert\n            if(allQtyZeroBool){\n                return alert('All prodcut quantity zero:\\nSet status to Failed')\n            }\n\n            // Partial to Fulfilled Alert\n            if(noQtyChangeBool){\n                return alert('Partial status invalid:\\nSet Status to Fulfilled')\n            }\n        }\n\n\n        // Total Cost Zero check for Partial and Fulfilled status\n        if(formData.status!==\"failed\" && `${formData.totalCost}`==='0' ){\n            return alert('Invalid Total Cost')\n        }\n\n\n        // Invalid status check\n        if( formData.status===\"\" \n            || (formData.status!==\"partial\" && formData.status!==\"fulfilled\" && formData.status!==\"failed\") \n            || !Array.isArray(updatedOrderList)\n            ){\n            return alert(`Please enter valid data`)\n        }else{\n            const updatedInfo = {\n                ...formData,\n                recievedProductList: updatedOrderList,\n            }\n            \n            // console.log(`formData:${JSON.stringify(updatedInfo,null,4)}`)\n            \n            dispatch(updateDemandSlip(updatedInfo))\n            \n        }\n    }\n    /////////////////////////////////////////////////\n    //////// Hooks //////////////////////////////////\n    ////////////////////////////////////////////////\n\n    // useEffect(()=>{\n    //     console.log(`iV:${JSON.stringify(initialValue,null,4)}`)\n    // },[])\n\n    useEffect(()=>{\n        if(isSuccess && updatedDataFlag){\n            // dispatch(resetOrders())\n            dispatch(getFilteredDemandSlips())\n\n            if(isSuccess){\n                dispatch(resetAfterNewDemandSlip())\n                // setNewDSFlag(true)\n                // passNextFlag(true)\n                // setToggleFlag(false)\n            }\n        }\n    },[isSuccess, updatedDataFlag])\n\n  return (\n    <>\n    <div className=\"card-row\">\n            <div className=\"card-element\">\n\n            <h3>{initialValue.ticketNumber}</h3>\n            {(isAdmin||isManager) && \n            <h3>{initialValue?.username}</h3>\n            }\n            </div>\n    </div>\n    <br />\n    <div className=\"card-row\">\n        <div className=\"card-element\">\n            <h3>Delivery Partner</h3>\n            <p>{initialValue.deliveryPartnerName}</p>\n        </div>\n\n        <div className=\"card-element\">\n            <h3>Distributor</h3> \n            <p>{initialValue.distributorName}</p>\n        </div>\n    </div>\n    <br />\n\n    {/* <div className='card-container' style={{padding:\"0\", border:\"none\"}}> */}\n        \n        <form onSubmit={onSubmit} style={{width:`100%`}}>\n            <div className=\"form-group\">\n                    <label>Status</label>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"status\" \n                            id={`${initialValue.ticketNumber} partial`} \n                            value=\"partial\"\n                            defaultChecked={initialValue.status===\"partial\"?true:false}\n                            onChange={onChange} />\n                        <label htmlFor={`${initialValue.ticketNumber} partial`}>Partial</label>\n                        </div>\n                    {/* </div> */}\n\n                    {/* <div className=\"radio-group\"> */}\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"status\" \n                            id={`${initialValue.ticketNumber} failed`} \n                            value=\"failed\"\n                            defaultChecked={initialValue.status===\"failed\"?true:false}\n                            onChange={onChange} />\n                        <label htmlFor={`${initialValue.ticketNumber} failed`}>Failed</label>\n                        </div>\n                    {/* </div> */}\n\n                    {/* <div className=\"radio-group\"> */}\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"status\" \n                            id={`${initialValue.ticketNumber} fulfilled`} \n                            value=\"fulfilled\"\n                            defaultChecked={initialValue.status===\"fulfilled\"?true:false}\n                            onChange={onChange} />\n                        <label htmlFor={`${initialValue.ticketNumber} fulfilled`}>Fulfilled</label>\n                        </div>\n                    {/* </div> */}\n\n                    </div>\n                </div>\n\n            {formData.status!==\"failed\" &&\n             <div className=\"form-group\">\n                <label htmlFor={`totalCost`}>Total Cost</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'totalCost'\n                    id={`totalCost`}\n                    value = {formData.totalCost}\n                    placeholder=\"Total Cost\"\n                    autoComplete='off'\n                    onChange={handleNumField} \n                    style={{width:`40%`}}\n                    />\n            </div>}\n\n            {formData.status===\"partial\" &&\n\n            <div className=\"form-group\">\n                <div className=\"card-grid-row\">\n                    <h3></h3>\n                    <label>Products</label>\n                    <h3>Ordered</h3>\n                    <h3>Recieved</h3>\n                </div>\n                {formData.recievedProductList.map((prod,k)=>{\n                    return(\n\n                    <div className=\"card-grid-row\" key={k}>\n                        <p>{k+1}.</p>\n\n                        {/* <p>{prod.sku}</p>\n                        \n                        <p>{prod.productFullName}</p> */}\n                        <div className=\"card-element\">\n\n                            <p style={{fontWeight:`bold`}}>{prod.productFullName}</p>\n                            <p>{prod.sku}</p>\n                        </div>\n\n                        <p>{prod.quantity}</p>\n                        \n                        <input\n                            type=\"text\" \n                            className='card-form-control'\n                            name=\"quantity\"\n                            id={`${initialValue.ticketNumber} ${k} quantity`}\n                            value = {formData.recievedProductList[k].quantity}\n                            placeholder=\"qty\"\n                            autoComplete='off'\n                            onChange={(e)=>onRecievedListChange(e,k)} \n                        />\n                        {/* <br /> */}\n                    </div>\n                        )\n                })}\n            </div>\n            }\n\n            <div className=\"form-group\">\n                <button type=\"submit\" className=\"submit-btn\"\n                    style={{width:`50%`, justifySelf:`center`}}\n                >\n                    Update\n                </button>\n            </div>\n        </form>\n    {/* </div> */}\n\n    </>\n  )\n}\n\nexport default UpdateOrderForm","import React, { useEffect, useState } from 'react'\nimport jsPDF from 'jspdf'\nimport autoTable from 'jspdf-autotable'\nimport { FiEdit2 } from 'react-icons/fi'\nimport { AiOutlineClose } from 'react-icons/ai'\nimport UpdateOrderForm from '../Forms/UpdateOrderForm'\nimport useAuth from '../../hooks/useAuth'\n\nfunction DemandSlipEditCard({info}) {\n    const {isAdmin, isManager} = useAuth()\n\n    const [editFlag, setEditFlag] = useState(false)\n\n    const pdfBodyData = info.orderedProductList.map((order)=>{\n      return [order.productFullName,order.quantity]\n    })\n\n    const ticketDate = info.ticketNumber.slice(3,5)+\"-\"+info.ticketNumber.slice(5,7)+\"-\"+info.ticketNumber.slice(7) \n    \n    // useEffect(()=>{\n    //   console.log(Array.isArray(pdfBodyData))\n    //   console.log(`\\npdfBodyData:${JSON.stringify(info,null,4)}`)\n    // },[])\n\n    const addHeaderAndFooter = doc => {\n      const pageCount = doc.internal.getNumberOfPages()\n      doc.setFont('helvetica', 'normal')\n      for (var i = 1; i <= pageCount; i++) {\n        doc.setPage(i)\n        doc.setFontSize(17)\n        doc.text('NAS',doc.internal.pageSize.width/2,40,{align:\"center\"})\n        \n        doc.setFontSize(10)\n        doc.text('Demand Reciept / Quotation',doc.internal.pageSize.width/2,55,{align:\"center\"})\n        \n        doc.text(20,75,`TID: ${info.ticketNumber}`)\n      \n        doc.text(20,90,`Date: ${ticketDate}`)\n        \n        // doc.text(20,105,`Dist.: ${testData.distributorName}`)\n  \n        doc.setFontSize(8)\n        \n        doc.text('Page ' + String(i) + ' of ' + String(pageCount), doc.internal.pageSize.width / 2,  doc.internal.pageSize.height - 20, {\n          align: 'center'\n        })\n        doc.text('This is an auto generated quotation', doc.internal.pageSize.width / 2,  doc.internal.pageSize.height - 10, {\n          align: 'center'\n        })\n      }\n    }\n\n    const handlePDFGenerate=()=>{\n\n      const headerData = [\"Product\",\"Qty\"]\n  \n      var doc = new jsPDF('p','pt',[201,470])\n  \n      doc.setProperties({\n          title: `DemandSlip${info.ticketNumber}`\n      });    \n      \n      autoTable(doc,{\n        startY:105,\n        margin:{left:20,top:105},\n        rowPageBreak:\"avoid\",\n        tableWidth:161,\n        theme:\"plain\",\n        headStyles:{halign:\"center\"},\n        // bodyStyles:{lineWidth:1},\n        columnStyles: { 1: { cellWidth:50, halign:'center'} },\n        head:[headerData],\n        body: pdfBodyData})\n  \n      addHeaderAndFooter(doc)\n  \n      doc.output('dataurlnewwindow',{filename:`DemandSlip${info.ticketNumber}`})\n      doc.save(`DemandSlip${info.ticketNumber}`)\n    }\n\n  return (\n    <>\n    \n    <div className='ds-slip-box'>\n        \n        <div className='edit-btn' \n            onClick={()=>setEditFlag(!editFlag)}>\n            {editFlag?<AiOutlineClose />:<FiEdit2 />}\n        </div>\n\n      {editFlag?\n      <div style={{width:`100%`, height:'100%'}}>\n        <UpdateOrderForm initialValue={info} setFlag={setEditFlag}/>\n      </div>\n      :\n      <>\n      <div style={{width:`100%`}}>\n        <div className=\"card-row\">\n            <div className=\"card-element\">\n\n            <h3>{info.ticketNumber}</h3>\n            {(isAdmin||isManager) && \n            <h3>{info?.username}</h3>\n            }\n            </div>\n        </div>\n\n        <br />\n\n        <div className=\"card-row\">\n            <div className=\"card-element\">\n                <h3>Delivery Partner</h3>\n                <p>{info.deliveryPartnerName}</p>\n            </div>\n\n            <div className=\"card-element\">\n                <h3>Distributor</h3> \n                <p>{info.distributorName}</p>\n            </div>\n        </div>\n\n        <br />\n\n        <div className=\"card-grid-row\">\n            <h3></h3>\n            <h3>Products</h3>\n            <h3>Ordered</h3> \n        </div>\n\n        {/* <div className='ds-new-col'> */}\n            {info.orderedProductList?.map((prod,i)=>\n                <div className=\"card-grid-row\" key={i}>\n                    <p>{i+1}.</p>\n\n                    <div className=\"card-element\">\n\n                        <p style={{fontWeight:`bold`}}>{prod.productFullName}</p>\n                        <p>{prod.sku}</p>\n                    </div>\n\n                    <p>{prod.quantity}</p> \n            </div>\n            )}\n\n        <br />\n\n      </div>\n\n        <div className=\"pdf-btn\"\n          onClick={(e)=>handlePDFGenerate()}\n          >\n          Generate PDF\n        </div>\n      </>\n      }\n    </div>\n    </>\n  )\n}\n\nexport default DemandSlipEditCard","import React,{useEffect, useState} from 'react'\nimport DemandSlipCard from '../../components/Cards/DemandSlipCard'\nimport useAuth from '../../hooks/useAuth'\n\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa6\";\nimport DemandSlipEditCard from '../../components/Cards/DemandSlipEditCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilteredDemandSlips } from '../../features/orders/orderSlice';\n\nfunction AllOrderPagination({\n    dataList, \n    isLoaded, \n    pendingPageFlag=false,\n    cardsPerPageLimit,\n    filterParams\n}\n) {\n\n    const dispatch = useDispatch()\n    \n    const { isManager } = useAuth()\n\n    const { \n        pageCount,\n        currentPage } = useSelector((state)=>state.orders)\n\n    const dots = `...`\n\n    // const cardsPerPageLimit = 2\n\n    const [numPages, setNumPages] = useState(1)\n\n    const nums = [...Array(numPages+1).keys()].slice(1)\n\n    const [paginationArray, setPaginationArray] = useState([])\n\n    // const [filterStatusString, setfilterStatusString]=useState(null)\n\n    ////////////////////////////////////////////////////\n    ////////////////Functions///////////////////////////\n    ////////////////////////////////////////////////////\n    const handlePrevClick=()=>{\n        if(currentPage!==1){\n            // setCurrentPage(currentPage-1)\n            dispatch(getFilteredDemandSlips({\n                ...filterParams,\n                page:currentPage-1,\n                limit:cardsPerPageLimit,\n                // filterStatus\n            }))\n        }else{\n            // setCurrentPage(1)\n            dispatch(getFilteredDemandSlips({\n                ...filterParams,\n                page:1,\n                limit:cardsPerPageLimit,\n                // filterStatus\n            }))\n        }\n    }\n\n    const handleNextClick=()=>{\n        // if(currentPage!==numPages){\n        if(currentPage<pageCount){\n            dispatch(getFilteredDemandSlips({\n                ...filterParams,\n                page:currentPage+1,\n                limit:cardsPerPageLimit,\n                // filterStatus\n            }))\n        }else if(currentPage===pageCount){\n            // setCurrentPage(pageCount)\n            dispatch(getFilteredDemandSlips({\n                ...filterParams,\n                page:pageCount,\n                limit:cardsPerPageLimit,\n                // filterStatus\n            }))\n        }\n    }\n\n    const handleCurrentClick=(pageNum)=>{\n        dispatch(getFilteredDemandSlips({\n            ...filterParams,\n            page:pageNum,\n            limit:cardsPerPageLimit,\n            // filterStatus\n        }))\n    }\n\n    ////////////////////////////////////////////////////\n    ////////////////Hooks///////////////////////////////\n    ////////////////////////////////////////////////////\n\n    useEffect(()=>{\n        if(numPages<8){\n            setPaginationArray(nums)\n        }else{\n            let leftPageNumArray = Array.from(Array(5), (_, i) => i+1)\n            setPaginationArray([...leftPageNumArray, dots, numPages])\n        }\n\n    },[isLoaded, dataList, numPages])\n\n    useEffect(()=>{        \n        if(numPages<8){\n            setPaginationArray(nums)\n        }\n        else{   \n            if(currentPage<=3){\n                let leftPageNumArray = Array.from(Array(5), (_, i) => i+currentPage)\n                setPaginationArray([...leftPageNumArray, dots, numPages])\n            }\n            else if(currentPage>3 && numPages-currentPage>4 ){\n                let middlePageNumArray = Array.from(Array(3), (_, i) => i+currentPage-1)\n                setPaginationArray([1,dots,...middlePageNumArray, dots, numPages])\n            }\n            else if(numPages-currentPage<=4){\n                let rightPageNumArray = Array.from(Array(5), (_, i) => i+numPages-4)\n                setPaginationArray([1, dots, ...rightPageNumArray])\n            }\n        }\n    },[currentPage])\n\n    useEffect(()=>{\n        let pC = pageCount || 1\n        setNumPages(pC)\n        // console.log(`pageCount:${pageCount}`)\n    },[pageCount])\n        \n\n  return (\n    <>\n    {/* Pagination Bars */}\n    {numPages>1 && dataList.length!==0 &&\n    <div className=\"ds-filter-container\"\n        style={{height:`auto`, \n            marginBottom:`3vh`\n        }}\n    >\n        <div className=\"ds-pagination-container\">\n            \n            {/* Previous Btn */}\n            <div className={`ds-page-btn ${currentPage!==1?``:`ds-page-inactive`}`} \n                onClick={(currentPage!==1) ? (()=>handlePrevClick()): undefined}\n            >\n                <FaAngleLeft style={{fontSize:`1rem`}}/>\n            </div>\n\n            {/* Pagination Numbers */}\n            {paginationArray.map((number,index)=>{\n                return(\n                    <React.Fragment key={index}>\n                        {number===dots? \n                        <div className={`ds-page-btn ds-page-inactive`}\n                            style={{color:`black`}}\n                        >\n                            {number}\n                        </div>\n                        :\n                        <div className={`ds-page-btn \n                            ${number===currentPage?\"ds-page-btn-active\":\"\"}\n                            `} \n                            onClick={()=>handleCurrentClick(number)}\n                            >\n                            {number}\n                        </div>\n                        }\n                    </React.Fragment>\n                )\n            })\n            }\n\n            {/* Next Btn */}\n            <div className={`ds-page-btn ${currentPage!==numPages?``:`ds-page-inactive`}`} \n                onClick={(currentPage!==pageCount) ? (()=>handleNextClick()):undefined}\n            >\n                <FaAngleRight style={{fontSize:`1rem`}}/>\n            </div>\n\n        </div>\n    </div>\n    }\n\n    {/* Cards */}\n    <div className=\"ds-filter-data-container\">\n        <div className=\"ds-content ds-card-content\">\n        {dataList.length>0 &&\n            dataList.map((order,key)=>{\n            return (\n                <React.Fragment key={key}>\n                    {\n                        pendingPageFlag?\n                        <DemandSlipEditCard info={order}/>\n                        :\n                        <DemandSlipCard info={order}\n                            partialFlag={order.status==='partial'}\n                        />\n                    }\n                </React.Fragment>\n                )\n            })\n            \n        }\n        {isLoaded && dataList.length===0 &&\n\n            <div style={{gridColumn:\"1/span 3\"}}>\n                <h1>No Orders {isManager?`Today`:``}</h1>\n            </div>\n        }\n        \n        </div>\n    \n    </div>\n\n\n    <br />\n\n    {/* Pagination Bars */}\n    {numPages>1 &&\n    <div className=\"ds-filter-container\"\n        style={{height:`auto`, \n            marginBottom:`3vh`\n        }}\n    >\n        <div className=\"ds-pagination-container\">\n\n            \n            <div className={`ds-page-btn ${currentPage!==1?``:`ds-page-inactive`}`} onClick={()=>handlePrevClick()}>\n                <FaAngleLeft style={{fontSize:`1rem`}}/>\n            </div>\n\n            {paginationArray.map((number,index)=>{\n                return(\n                    <React.Fragment key={index}>\n                        {number===dots? \n                        <div className={`ds-page-btn ds-page-inactive`}\n                            style={{color:`black`}}\n                        >\n                            {number}\n                        </div>\n                        :\n                        <div className={`ds-page-btn \n                            ${number===currentPage?\"ds-page-btn-active\":\"\"}\n                            `} \n                            onClick={()=>handleCurrentClick(number)}\n                            >\n                            {number}\n                        </div>\n                        }\n                    </React.Fragment>\n                )\n            })\n            }\n\n            <div className={`ds-page-btn ${currentPage!==numPages?``:`ds-page-inactive`}`} onClick={()=>handleNextClick()}>\n                <FaAngleRight style={{fontSize:`1rem`}}/>\n            </div>\n        </div>\n    </div>\n    }\n    </>\n  )\n}\n\nexport default AllOrderPagination","import React, { useEffect, useState, useRef } from 'react'\n\nimport \"./DemandSlip.css\"\nimport QuickProdSearchForm from '../../components/Forms/QuickProdSearchForm'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllDemandSlips, getFilteredDemandSlips } from '../../features/orders/orderSlice'\nimport Loader from '../../components/Loader/Loader'\nimport LoginAgainModal from '../../components/Modals/LoginAgainModal'\nimport useAuth from '../../hooks/useAuth'\nimport { resetProducts } from '../../features/products/productSlice'\nimport { AiOutlineClose } from 'react-icons/ai'\nimport { getAllUsers } from '../../features/users/usersSlice'\nimport UserDropdown from '../../components/Dropdown/UserDropdown'\nimport AllOrderPagination from './AllOrderPagination'\n\nfunction DemandSlip() {\n  const dispatch = useDispatch()\n\n  const { isAdmin, isManager } = useAuth()\n  \n  const dateInputRef = useRef(null);\n\n  const {token} = useSelector((state)=>state.auth)\n\n  const {prodCodeList} = useSelector((state)=>state.product)\n  \n  const {usersList} = useSelector((state)=>state.users)\n\n  const { orderData,\n          totalDataLength,\n          isSuccess,\n          isLoading } = useSelector((state)=>state.orders)\n\n  const usernameList = [`all`, ...usersList.map(user=>user.username)]\n\n  const [createFlag, setCreateFlag] = useState(true)\n  const [allFlag, setAllFlag] = useState(false)\n  const [pendingFlag, setPendingFlag] = useState(false)\n  const [fulfilledFlag, setFulfilledFlag] = useState(false)\n  const [failedFlag, setFailedFlag] = useState(false)\n  const [partialFlag, setPartialFlag] = useState(false)\n\n  const [legendFlag, setLegendFlag] = useState(false)\n\n  const [filterParams,setFilterParams] = useState({\n    rawDate:'',\n    filterDate:'',\n    filterPublisherUsername:'',\n    filterStatus:'',\n    filterTicketNum:'',\n    accessLevel: isManager\n  })\n\n  const pageLimit = 50\n\n  const [filterUsername, setFilterUsername] = useState('')\n\n  /////////////////////////////////////////////////\n  //////// Functions /////////////////////////////\n  ////////////////////////////////////////////////\n\n  const onFilterChange=(e)=>{\n    if(e.target.name==='rawDate'){\n      const fD = handleDateFilter(e.target.value)\n      // console.log(`fD:${fD}`)\n\n      setFilterParams((prevState)=>({\n          ...prevState,\n          filterDate:fD\n      }))\n    }\n    \n    setFilterParams((prevState)=>({\n      ...prevState,\n      [e.target.name]:e.target.value\n  }))\n  }\n\n  const handleNumField = (e) => {\n    const value = e.target.value.replace(/\\D/g, \"\");\n    setFilterParams((prevState)=>({...prevState, [e.target.name]:value}));\n  };\n\n  const handleFilterClear =()=>{\n    setFilterParams({\n      rawDate:'',\n      filterDate:'',\n      filterPublisherUsername:'',\n      filterStatus:'',\n      filterTicketNum:'',\n      accessLevel: isManager\n    })\n\n    setFilterUsername('')\n  }\n\n  const handleFilterSearch =()=>{\n    // console.log(`filterParams:${JSON.stringify(filterParams,null,4)}`)\n    dispatch(getFilteredDemandSlips(filterParams))\n  }\n  \n  const handleCreateClick=()=>{\n    setCreateFlag(true)\n    \n    setAllFlag(false)\n    setFailedFlag(false)\n    setPartialFlag(false)\n    setPendingFlag(false)\n    setFulfilledFlag(false)\n  }\n\n  const handleAllClick=()=>{\n    setFilterParams((prevState)=>(\n      {...prevState, \n        filterStatus:''\n      }))\n    \n    dispatch(getFilteredDemandSlips(\n      {...filterParams,\n        filterStatus:'',\n        page:1,\n        limit:pageLimit\n      }\n    ))\n\n    \n    setCreateFlag(false)\n    setFailedFlag(false)\n    setPartialFlag(false)\n    setPendingFlag(false)\n    setFulfilledFlag(false)\n    \n    setAllFlag(true)\n  }\n  \n  const handlePendingClick=()=>{\n    setFilterParams((prevState)=>(\n      {...prevState, \n        filterStatus:'pending'\n      }))\n\n    dispatch(getFilteredDemandSlips(\n      {...filterParams,\n        filterStatus:'pending',\n        page:1,\n        limit:pageLimit\n      }\n    ))\n\n    setCreateFlag(false)\n    setAllFlag(false)\n    setFailedFlag(false)\n    setPartialFlag(false)\n    setFulfilledFlag(false)\n    \n    setPendingFlag(true)\n  }\n  \n  const handlePartialClick=()=>{\n    setFilterParams(((prevState)=>({...prevState, filterStatus:'partial'})))\n    dispatch(getFilteredDemandSlips(\n      {...filterParams,\n        filterStatus:'partial',\n        page:1,\n        limit:pageLimit\n      }\n    ))\n      \n      setCreateFlag(false)\n      setAllFlag(false)\n      setPendingFlag(false)\n      setFailedFlag(false)\n      setFulfilledFlag(false)\n      \n      setPartialFlag(true)\n    }\n  \n  const handleFailedClick=()=>{\n    setFilterParams(((prevState)=>({...prevState, filterStatus:'failed'})))\n    dispatch(getFilteredDemandSlips(\n      {...filterParams,\n        filterStatus:'failed',\n        page:1,\n        limit:pageLimit\n      }\n    ))\n\n    setCreateFlag(false)\n    setAllFlag(false)\n    setPendingFlag(false)\n    setPartialFlag(false)\n    setFulfilledFlag(false)\n    \n    setFailedFlag(true)\n  }\n  \n  const handleFulfilledClick=()=>{\n    setFilterParams(((prevState)=>({...prevState, filterStatus:'fulfilled'})))\n    dispatch(getFilteredDemandSlips(\n      { ...filterParams,\n        filterStatus:'fulfilled',\n        page:1,\n        limit:pageLimit\n      }\n    ))\n\n    setCreateFlag(false)\n    setAllFlag(false)\n    setPendingFlag(false)\n    setFailedFlag(false)\n    setPartialFlag(false)\n    \n    setFulfilledFlag(true)\n  }\n  \n  const handleLegendClick=()=>{\n    setLegendFlag(!legendFlag)\n  }\n  \n  const handleDateFilter=(rawData)=>{\n    if(rawData!==''){\n      // Get filtered order data\n      let inputYear = rawData.slice(0,4)\n      let inputMonth = rawData.slice(5,7)\n      let inputDay = rawData.slice(8)\n      let formatterFilterDate = inputDay+inputMonth+inputYear\n      \n      return formatterFilterDate\n      // console.log(`formatted Date:${inputDay+inputMonth+inputYear}`)\n      // dispatch(getFilteredDemandSlips(filterDate)) \n    }\n  }\n  \n  ///////////////////////////////////////////////////////\n  ///////////////////////Hooks///////////////////////////\n  ///////////////////////////////////////////////////////\n  \n  // Reset Prod Search Results and Load Demand Slips\n  useEffect(()=>{\n    if(isAdmin || isManager){\n      dispatch(getAllDemandSlips())\n      dispatch(getAllUsers())\n    }else{\n      dispatch(getFilteredDemandSlips())\n    }\n    \n    dispatch(resetProducts())\n\n    // console.log(JSON.stringify(({...filterParams, filterStatus:'p'}),null,4))\n    \n  },[])\n  \n  // Set Filter Username\n  useEffect(()=>{\n    if(filterUsername!=='all'){\n      setFilterParams((prevState)=>({\n        ...prevState,\n        filterPublisherUsername:filterUsername\n      }))\n    }else{\n      setFilterParams((prevState)=>({\n        ...prevState,\n        filterPublisherUsername:''\n      }))\n    }\n\n  },[filterUsername])\n\n  return (\n    <>\n    {!token && <LoginAgainModal />}\n    {isLoading && <Loader/>}\n    <div className='container' \n      style={{\n        // border:'1px solid red', \n        justifyContent:\"flex-start\",\n        \n      }}\n    >\n      <>\n      {legendFlag &&\n        <>\n        <div className=\"modal-backdrop\" ></div> \n        <div className='modal-container'>\n            <div className=\"edit-btn\"\n                onClick={()=>handleLegendClick()}\n            >\n            <AiOutlineClose />\n            </div>\n            <div className='ds-new-box'>\n              {prodCodeList.map((item,index)=>{\n                return(\n                  <p key={index}><span style={{fontWeight:`bold`}}>{item.itemCode}: </span>{item.productName}</p>\n                )\n              })}\n            </div>\n        </div>\n      </>\n      }\n\n      <div className=\"ds-filter-container\">\n        \n        <div className={`ds-filter-btn ${createFlag?\"ds-filer-btn-active\":\"\"}`}\n          onClick={()=>handleCreateClick()}\n        >\n          Create          \n        </div>\n\n        <div className={`ds-filter-btn ${allFlag?\"ds-filer-btn-active\":\"\"}`}\n          onClick={()=>handleAllClick()}\n        >\n          All\n        </div>\n        \n        <div className={`ds-filter-btn ${pendingFlag?\"ds-filer-btn-active\":\"\"}`}\n          onClick={()=>handlePendingClick()}\n        >\n          Pending\n        </div>\n        \n        <div className={`ds-filter-btn ${partialFlag?\"ds-filer-btn-active\":\"\"}`}\n          onClick={()=>handlePartialClick()}\n        >\n          Partial\n        </div>\n\n        <div className={`ds-filter-btn ${failedFlag?\"ds-filer-btn-active\":\"\"}`}\n          onClick={()=>handleFailedClick()}\n        >\n          Failed\n        </div>\n        \n        <div className={`ds-filter-btn ${fulfilledFlag?\"ds-filer-btn-active\":\"\"}`}\n          onClick={()=>handleFulfilledClick()}\n        >\n          Fulfilled        \n        </div>\n\n        <div className={`ds-filter-btn ${legendFlag?\"ds-filer-btn-active\":\"\"}`}\n          onClick={()=>handleLegendClick()}\n        >\n          Legend        \n        </div>\n\n\n      </div>\n\n      {(allFlag||pendingFlag||failedFlag||partialFlag||fulfilledFlag) \n        &&\n        <div className=\"ds-filter-container\"\n          style={{height:`auto`, marginBottom:`3vh`}}\n          >\n\n        {(isAdmin || isManager) && \n        <>\n          {/* Filter Date Input */}\n          <input\n            className='date-input-box'\n            name='rawDate'\n            type=\"date\"\n            value={filterParams.rawDate}\n            onChange={onFilterChange}\n            ref={dateInputRef}\n          />\n\n          {/* Username Dropdown button */}\n          <div className='ds-filter-dropdown-container'>\n            <UserDropdown\n              value={filterUsername} \n              dataList={usernameList} \n              passUsername={setFilterUsername}\n              />\n          </div>\n        </>\n        }\n\n        {/* Ticket Number Search*/}\n          <input \n            className='ds-filter-form-control'\n            type='text'\n            name='filterTicketNum'\n            placeholder=\"Ticket Number\"\n            value={filterParams.filterTicketNum}\n            onChange={handleNumField}\n          />\n\n        {/* Filter Submit Button */}\n        <div className='ds-filter-btn' onClick={()=>handleFilterSearch()}>Search</div>\n      \n        {/* Clear Filter Button */}\n        <div className='ds-filter-btn' onClick={()=>handleFilterClear()}>Clear</div>\n      \n      </div>\n    }\n      \n      {/* All results count */}\n      {!createFlag &&\n        <div className=\"ds-filter-container\"\n          style={{height:`auto`, marginBottom:`5vh`}}\n        >\n          <p style={{fontWeight:`bold`}}>Results ({totalDataLength})</p>  \n        </div>\n      }\n\n        {createFlag &&\n        <div className=\"ds-filter-data-container\">\n        \n          {/* Create Demand Slip */}\n          <>\n          <div className=\"ds-content\"\n          >\n          <div className=\"ds-search-container\">\n              <QuickProdSearchForm setToggleFlag={setCreateFlag} passNextFlag={setPendingFlag} />\n          </div>\n          </div>\n\n          </>\n        </div>\n        }\n        \n\n        {/* All Orders */}\n        {allFlag &&\n        <AllOrderPagination \n          dataList={orderData} \n          isLoaded={isSuccess}\n          filterParams={filterParams}\n          cardsPerPageLimit={pageLimit}\n        />\n        }\n\n        {/* Pending Orders */}\n        {pendingFlag &&\n        <AllOrderPagination dataList={orderData} \n          isLoaded={isSuccess}\n          pendingPageFlag={true}\n          filterParams={filterParams}\n          cardsPerPageLimit={pageLimit}\n        />\n        }\n\n        {/* Partial Orders */}\n        {partialFlag &&\n        <AllOrderPagination \n          dataList={orderData} \n          isLoaded={isSuccess}\n          filterParams={filterParams}\n          cardsPerPageLimit={pageLimit}\n        />\n        }\n\n        {/* Failed Orders */}\n        {failedFlag &&\n        <AllOrderPagination \n          dataList={orderData} \n          isLoaded={isSuccess}\n          filterParams={filterParams}\n          cardsPerPageLimit={pageLimit}\n        />\n        }\n\n        {/* Fulfilled Orders */}\n        {fulfilledFlag &&\n        <AllOrderPagination \n          dataList={orderData} \n          isLoaded={isSuccess}\n          filterParams={filterParams}\n          cardsPerPageLimit={pageLimit}\n        />\n        }\n        </>\n    </div>\n    </>\n  )\n} \n\nexport default DemandSlip","import { BrowserRouter as Router, HashRouter, Routes, Route } from 'react-router-dom'\n\nimport Navbar from './components/Navbar/Navbar';\nimport QuickRes from './pages/IndiaMartRes/QuickRes';\nimport Products from './pages/Products/Products';\nimport Landing from './pages/Landing/Landing';\nimport Product from './pages/Products/Product';\nimport NotFound from './pages/NotFound/NotFound';\nimport Login from './pages/Login/Login';\nimport Users from './pages/UserManagement/Users';\n\nimport './App.css';\nimport Footer from './components/Footer/Footer';\nimport DemandSlip from './pages/DemandSlip/DemandSlip';\n\nfunction App() {\n  return (\n    <>\n    <HashRouter>\n\n    <div className=\"container\">\n      <Navbar />\n     \n      <Routes>\n        <Route path=\"/\" element={<Landing />} />\n        <Route path='/login' element={<Login />} />\n        <Route path=\"/indiamart-templates\" element={<QuickRes />} />\n        <Route path=\"/products\" element={<Products />} />\n        <Route path='/products/:sku' element={<Product /> }/> \n        <Route path='/user-management' element={<Users />} />\n        <Route path='/demand-slip-generator' element={<DemandSlip />} />\n\n        <Route path='*' element={<NotFound /> } />\n      </Routes>\n\n      <Footer />\n    </div>\n    \n    </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store';\nimport App from './App';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}