{"version":3,"sources":["features/template/templateService.js","features/template/templateSlice.js","features/products/productService.js","features/auth/authService.js","features/users/usersService.js","features/users/usersSlice.js","features/auth/authSlice.js","features/products/productSlice.js","features/orders/orderService.js","features/orders/orderSlice.js","app/store.js","components/Navbar/Navbar.jsx","components/Forms/CopyForm.jsx","pages/IndiaMartRes/QuickRes.jsx","components/Dropdown/Dropdown.jsx","components/Loader/Loader.jsx","pages/Products/Products.jsx","hooks/useAuth.js","pages/Landing/Landing.jsx","components/Forms/ProductForm.jsx","pages/Products/Product.jsx","pages/NotFound/NotFound.jsx","components/Forms/LoginForm.jsx","pages/Login/Login.jsx","components/Modals/LoginAgainModal.jsx","components/Forms/UserForm.jsx","components/Cards/UserCard.jsx","pages/UserManagement/Users.jsx","components/Footer/Footer.jsx","components/Forms/QuickProdSearchForm.jsx","components/Forms/UpdateOrderForm.jsx","components/Cards/DemandSlipCard.jsx","pages/DemandSlip/DemandSlip.jsx","App.js","index.js"],"names":["templateService","formSubmit","formRes","returnData","customer_name","pricePerUnit","unit","initialState","formResponseData","pricePerUnitOE","excDeliveryCharge","product","responseTemplate","isError","isSuccess","isLoading","message","formResponseSubmit","createAsyncThunk","async","formResponse","thunkAPI","error","response","data","toString","rejectWithValue","templateSlice","createSlice","name","reducers","resetTemplate","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","prod_URI","productService","createProductDataJSON","csvFileData","length","console","log","map","prod","sku","metaData","iC","itemCode","toUpperCase","replace","cleanedVM","spaceRemovedVM","vehicleModel","delimitedVM","split","slice","vM","spaceRemovedBC","brandCompany","bC","spaceRemovedPN","partNum","pN","join","delimitedCM","compatibileModels","prodClone","Object","assign","mrp","getProducts","axios","get","concat","itemData","searchProducts","searchKey","searchSKUProducts","skuOnlyFlag","post","item","productFullName","productName","updateProduct","token","_ref","config","headers","Authorization","patch","prodInfo","auth_URI","authService","healthCheck","setUserCredentials","userData","sessionStorage","setItem","JSON","stringify","refreshToken","logoutUser","removeItem","users_URI","usersService","getAllUsers","updateUser","userInfo","usersList","_","getState","auth","err","status","dispatch","usersSlice","resetUser","_JSON$parse","parse","getItem","accessToken","username","roles","res","errorStatus","refreshResult","logOutUser","resetProducts","authSlice","resetAuth","verified","productData","productSKUData","noMatch","searchSKUProductsOnly","productSlice","resetSearchProducts","order_URI","orderService","getAllDemandSlips","getFilteredDemandSlips","currDate","Date","ticketDate","getDate","ticketMonth","getMonth","ticketYear","getFullYear","fullDate","generateDemandSlip","demandSlipData","updateDemandSlip","updatedData","_ref2","ticketNumber","orderData","pendingOrderList","partialOrderList","failedOrderList","fulfilledOrderList","newDemandSlip","updatedDataFlag","orderSlice","resetOrders","resetAfterNewDemandSlip","filter","order","store","configureStore","reducer","authReducer","productReducer","template","templateReducer","users","usersReducer","orders","ordersReducer","Navbar","navigate","useNavigate","useDispatch","useSelector","_jsxs","className","style","justifyContent","children","_jsx","BiMenu","onClick","BiLogOut","CopyForm","formData","setFormData","useState","excDeliveryCharges","onChange","e","prevState","target","value","_Fragment","onSubmit","preventDefault","type","id","placeholder","autoComplete","htmlFor","QuickRes","successPopup","setSuccessPopup","ResponseList","text","index","copyText","navigator","clipboard","writeText","setTimeout","AnimatePresence","motion","div","initial","opacity","animate","exit","transition","duration","Dropdown","dataList","passItemCode","isActive","setIsActive","selectedItem","setSelectedItem","saveFile","handleItemClick","Loader","Products","showSKUFlag","setShowSKUFlag","prodNavFlag","setProdNavFlag","searchInput","setSearchInput","setItemData","skuData","setSKUData","onSKUChange","debouncedResults","debouce","useEffect","cancel","width","fontWeight","AiOutlineSearch","alert","backgroundColor","_Object$keys","handleProductClick","compatibleModels","i","keys","k","useAuth","isManager","isAdmin","isEmployee","decoded","jwtDecode","UserInfo","includes","Landing","pathname","accessLevel","path","handleNavigation","ProductForm","initialValue","setFlag","qty","updatedMetaData","setUpdatedMetaData","updatedModels","setUpdatedModels","onMetaDataChange","padding","border","display","flexDirection","model","onModelItemChange","modelList","splice","handleItemDelete","AiOutlineClose","handleAddItem","AiOutlinePlus","alignItems","field","React","Fragment","Product","params","useParams","editFlag","setEditFlag","filteredProduct","FiEdit2","NotFound","LoginForm","password","showPasswordFlag","setShowPasswordFlag","Login","LoginAgainModal","UserForm","_id","firstname","lastname","active","checkList","setCheckList","handleRoles","marginBottom","Array","isArray","defaultChecked","UserCard","_info$roles","info","role","Users","Footer","QuickProdSearchForm","_newDemandSlip$ordere","setToggleFlag","passNextFlag","newDSFlag","setNewDSFlag","deliveryPartnerName","distributorName","orderedProductList","quantity","updatedOrderList","setUpdatedOrderList","onOrderItemChange","orderList","orderItem","numValue","date","emptyOrderListObj","marginRight","newItem","addItemfromSearch","UpdateOrderForm","recievedProductList","updatedInfo","totalCost","onRecievedListChange","tempList","intInputValue","parseInt","tempItem","DemandSlipCard","_info$orderedProductL","pdfBodyData","handlePDFGenerate","doc","jsPDF","setProperties","title","autoTable","startY","margin","left","top","rowPageBreak","tableWidth","theme","headStyles","halign","columnStyles","cellWidth","head","body","pageCount","internal","getNumberOfPages","setFont","setPage","setFontSize","pageSize","align","String","height","addHeaderAndFooter","output","filename","save","DemandSlip","createFlag","setCreateFlag","allFlag","setAllFlag","pendingFlag","setPendingFlag","fulfilledFlag","setFulfilledFlag","failedFlag","setFailedFlag","partialFlag","setPartialFlag","testData","ticketID","employeeId","key","_order$orderedProduct","gridColumn","_order$orderedProduct2","_order$orderedProduct3","_order$orderedProduct4","App","HashRouter","Routes","Route","element","container","document","getElementById","createRoot","render","StrictMode","Provider"],"mappings":"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","file":"static/js/main.3a71e33a.chunk.js","sourcesContent":["\n// Form Submit\nconst formSubmit = (formRes) => {\n    let returnData = {}\n    if(formRes.customer_name===null \n        || formRes.pricePerUnit===null \n        || formRes.unit===null){\n        returnData = {\n            customer_name:\"\",\n            pricePerUnit:\"\",\n            unit:\"\"\n        }\n    }else{\n        returnData = formRes\n    }\n\n    return returnData\n  }\n\n  const templateService = {\n    formSubmit,\n    \n  }\n  \n  export default templateService","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport templateService from './templateService'\n\nconst initialState = {\n    formResponseData: {\n        customer_name:\"\",\n        pricePerUnit:\"\",\n        pricePerUnitOE:\"\",\n        excDeliveryCharge:\"\",\n        unit:\"\",\n        product:'',\n    },\n    responseTemplate:[{}],\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: '',\n  }\n\n\n// Form Response Submit\nexport const formResponseSubmit = createAsyncThunk(\n    'formSubmit',\n    async(formResponse, thunkAPI) =>{\n        try {\n            return await templateService.formSubmit(formResponse)\n        } catch (error) {\n            const message =\n            (error.response && error.response.data && error.response.data.message) ||\n            error.message ||\n            error.toString()\n        return thunkAPI.rejectWithValue(message) \n        }\n    }\n) \n\nexport const templateSlice = createSlice({\n    name: 'template',\n    initialState,\n    reducers: {\n      resetTemplate: (state) => initialState\n    },\n    extraReducers: (builder) => {\n      builder\n      //form response submit\n        .addCase(formResponseSubmit.pending, (state) => {\n          state.isLoading = true\n        })\n        .addCase(formResponseSubmit.fulfilled, (state, action) => {\n          state.isLoading = false\n          state.isSuccess = true\n          state.formResponseData = action.payload\n        })\n        .addCase(formResponseSubmit.rejected, (state, action) => {\n          state.isLoading = false\n          state.isError = true\n          state.message = action.payload\n          state.formResponseSubmit = null\n        })\n    },\n})\n\nexport const { resetTemplate } = templateSlice.actions\nexport default templateSlice.reducer","import axios from 'axios'\n\nconst prod_URI = 'https://api.dinmotoindia.com/api/prod/'\n\n// Convert Product CSV Data to JSON Data\nconst createProductDataJSON = (csvFileData) => {\n    var returnData = []\n    if(csvFileData.length===0){\n        returnData=[]\n        console.log(`Error`)\n    }else{\n        returnData = \n        csvFileData.map((prod)=>{\n          var sku=\"\"\n          var metaData = []\n\n          const cleanedIC = prod.itemCode.toUpperCase()\n          const iC = cleanedIC.replace(/ /g,'')\n          // const iC = cleanedIC.split(\" \").join(\"\")\n          \n          let cleanedVM =\"\"\n          const spaceRemovedVM = prod.vehicleModel.replace(/ /g,\"\")\n\n          const delimitedVM = spaceRemovedVM.split('-',2)\n          if(delimitedVM.length>1){\n            cleanedVM = delimitedVM[0].slice(0,3)+delimitedVM[1]\n          }else{\n            cleanedVM = delimitedVM[0].slice(0,3)\n          }\n          const vM = cleanedVM.toUpperCase()\n\n          const spaceRemovedBC = prod.brandCompany.replace(/ /g,\"\")\n          const cleanedBC = spaceRemovedBC.slice(0,3)\n          const bC = cleanedBC.toUpperCase()\n\n          const spaceRemovedPN = prod.partNum.replace(/ /g,\"\")\n          const cleanedPN = spaceRemovedPN.split(\"-\").join(\"\")\n          const pN = cleanedPN.toUpperCase()\n\n          const delimitedCM = prod.compatibileModels.split(',')\n\n          sku = iC+\"-\"+vM+\"-\"+bC+\"-\"+pN\n\n          const prodClone = Object.assign({},prod)\n          delete prodClone.itemCode\n          delete prodClone.vehicleModel\n          delete prodClone.brandCompany\n          delete prodClone.partNum\n          delete prodClone.mrp\n          delete prodClone.compatibileModels\n\n          metaData = prodClone\n\n          return {\n            itemCode: iC,\n            vehicleModel: spaceRemovedVM,\n            brandCompany: spaceRemovedBC,\n            partNum: spaceRemovedPN,\n            mrp: prod.mrp.replace(/ /g,\"\"),\n            sku: sku,\n            compatibileModels: delimitedCM,\n            metaData: metaData\n          }\n        })\n    }\n\n    return returnData\n  }\n\n  // Get Products\n  const getProducts = async (itemData) => {\n    const response = await axios.get(prod_URI + `${itemData.itemCode}`)\n    // if(response.data){\n    //   localStorage.setItem('productData', JSON.stringify(response.data))\n    // }\n    return response.data\n  } \n\n  // Search Products\n  const searchProducts = async (searchKey) => {\n    const response = await axios.get(prod_URI +`search/${searchKey}`)\n\n    return response.data\n  } \n\n  // Search Products\n  const searchSKUProducts = async (itemData,skuOnlyFlag) => {\n    const response = await axios.post(prod_URI +`search/sku/${skuOnlyFlag}`, itemData)\n    const res = response.data.map((item)=>{\n      var productFullName = item.productName+\" \"+item.vehicleModel+\" \"+item.brandCompany+\" \"+item.partNum\n      return {...item, productFullName:productFullName} \n    })\n    // console.log(JSON.stringify(res,null,4))\n    return res\n  } \n\n  // Update Products\n  const updateProduct = async ({itemData,token}) => {\n    const config = {\n      headers: {\n          Authorization: `Bearer ${token}`\n      }\n    }\n\n    // console.log(`itemData SKU:${itemData.sku}`)\n    // console.log(`itemData prodInfo:${JSON.stringify(itemData.prodInfo,null,4)}`)\n\n    const response = await axios.patch(prod_URI +`${itemData.sku}`, itemData.prodInfo, config)\n\n    return response.data\n    // return itemData.sku\n  } \n\n  const productService = {\n    createProductDataJSON,  \n    getProducts,\n    searchProducts,\n    searchSKUProducts,\n    updateProduct\n  }\n  \n  export default productService","import axios from 'axios'\n\nconst auth_URI = 'https://api.dinmotoindia.com/api/auth'\n\n// Polling Function to check for Validity of Access Token\nconst healthCheck = async(token)=> {\n    const config = {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n      }\n    const response = await axios.get(auth_URI, config)\n    return response.data\n}\n\n// Set User Credentials from Access Token\nconst setUserCredentials = async (userData) => {\n    const response = await axios.post(auth_URI, userData)\n    if(response.data){\n        sessionStorage.setItem('token', JSON.stringify(response.data))\n    }\n    return response.data\n}\n\n// Refresh Token\nconst refreshToken= async ()=>{\n    const response = await axios.get(auth_URI+\"refresh\")\n    return response\n}\n\n// Logout User\nconst logoutUser = () => {\n    sessionStorage.removeItem('token')\n}\n\nconst authService = {\n    healthCheck,\n    setUserCredentials,\n    refreshToken,\n    logoutUser,\n  }\n  \n  export default authService","import axios from 'axios'\n\nconst users_URI = 'https://api.dinmotoindia.com/api/users/'\n\nconst getAllUsers = async(token)=>{\n  const config = {\n    headers: {\n        Authorization: `Bearer ${token}`\n    }\n  }\n  const response = await axios.get(users_URI, config)\n\n  return response.data\n}\n\nconst updateUser = async({userInfo, token})=>{\n  const config = {\n    headers: {\n        Authorization: `Bearer ${token}`\n    }\n  }\n  \n  const response = await axios.patch(users_URI, userInfo, config)\n\n  return response.data\n} \n\nconst usersService = {\n    getAllUsers,\n    updateUser,\n  }\n  \nexport default usersService","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport usersService from './usersService'\nimport { refreshToken } from '../auth/authSlice'\n\nconst initialState = {\n    usersList: [],\n    isSuccess: false,\n    isError: false,\n    isLoading: false,\n    message: '',\n  }\n\nexport const getAllUsers = createAsyncThunk(\n    'users/getAllUsers',\n    async(_, thunkAPI) =>{\n        try {\n          try {\n            \n            const token = thunkAPI.getState().auth.token\n            return await usersService.getAllUsers(token) \n\n          } catch (err) {\n            \n            if(err.response.status === 403){\n              await thunkAPI.dispatch(refreshToken())\n\n              const token = thunkAPI.getState().auth.token\n              return await usersService.getAllUsers(token) \n            }\n          }\n        } catch (error) {\n            const message = (error.response && error.response.data && error.response.data.message) \n            || error.message || error.toString()\n\n            return thunkAPI.rejectWithValue(message)\n        }\n    }\n)  \n\nexport const updateUser = createAsyncThunk(\n  'users/updateUser',\n  async(userInfo,thunkAPI)=>{\n    try {\n\n      try {  \n        const token = thunkAPI.getState().auth.token\n        return await usersService.updateUser({userInfo,token}) \n\n      } catch (err) {\n        \n        if(err.response.status === 403){\n          await thunkAPI.dispatch(refreshToken())\n          const token = thunkAPI.getState().auth.token\n          return await usersService.updateUser({userInfo,token}) \n        }\n      }\n    } catch (error) {\n      const message = (error.response && error.response.data && error.response.data.message) \n      || error.message || error.toString()\n\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n) \n\nexport const usersSlice = createSlice({\n    name: 'users',\n    initialState,\n    reducers: {\n      resetUser: (state) => initialState\n    },\n    extraReducers: (builder) => {\n      builder\n      // Get All Listed Users\n      .addCase(getAllUsers.pending, (state) => {\n        state.isError = false\n        state.isSuccess = false\n        state.message = \"\"\n        state.isLoading = true\n      })\n      .addCase(getAllUsers.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.usersList = action.payload\n        state.message = \"\"\n      })\n      .addCase(getAllUsers.rejected, (state, action) => {\n        state.usersList = []\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Update User Data\n      .addCase(updateUser.pending, (state) => {\n        state.isError = false\n        state.isSuccess = false\n        state.message = \"\"\n        state.isLoading = true\n      })\n      .addCase(updateUser.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.message = action.payload.message\n      })\n      .addCase(updateUser.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n    }\n})\n\nexport const { resetUser } = usersSlice.actions\nexport default usersSlice.reducer","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport authService from './authService'\nimport { resetUser } from '../users/usersSlice'\nimport { resetProducts } from '../products/productSlice'\n\n// Get user from sessionStorage\nconst token = JSON.parse(sessionStorage.getItem('token'))?.accessToken\n\n// Access Token : {UserInfo: \"username\":username, \"roles\":[roles]}\n\nconst initialState = {\n  token: token?token:null, // Access Token\n  username:\"\",\n  roles:[],\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: '',\n}\n\nexport const healthCheck= createAsyncThunk(\n  'auth/healthCheck',\n  async(_,thunkAPI)=>{\n    try {\n        const accessToken = thunkAPI.getState().auth.token ? thunkAPI.getState().auth.token : null;\n        return await authService.healthCheck(accessToken)\n    } catch (error) {\n      const message = (error.response && error.response.data \n        && error.response.data.message) \n        || error.message || error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\nexport const setUserCredentials = createAsyncThunk(\n  'auth/setUserCredentials',\n  async(userData, thunkAPI) =>{\n      try {\n        const response = await authService.setUserCredentials(userData)\n        return response\n      } catch (error) {\n          const message = (error.response && error.response.data \n            && error.response.data.message) \n            || error.message || error.toString()\n            return thunkAPI.rejectWithValue(message)\n      }\n  }\n)  \n\nexport const refreshToken = createAsyncThunk(\n  'auth/refreshToken',\n  async(_,thunkAPI)=>{\n    try {\n      const accessToken = thunkAPI.getState().auth.token\n      const res = await authService.healthCheck(accessToken)\n\n      console.log(`res status:${JSON.stringify(res)}`)\n      \n      return res\n    } catch (error) {\n      \n      const errorStatus =  error.response.status\n      \n      if(errorStatus === 403){\n        try {\n          const refreshResult = await authService.refreshToken()\n          // console.log(`refreshSuccess:${JSON.stringify(refreshResult.data,null,4)}`)\n          return refreshResult?.data\n        } catch (err) {\n          const errStatus = err.response.status\n\n          if(errStatus){\n            const message = (err.response && err.response.data \n              && err.response.data.message) \n              || err.message || err.toString()\n\n            await thunkAPI.dispatch(logOutUser())\n\n            return thunkAPI.rejectWithValue(message)\n          }\n        }\n      }\n\n      console.log(`Error Status type: ${typeof errorStatus}`)\n    }\n  }\n  )\n\nexport const logOutUser = createAsyncThunk(\n  'auth/logOutUser',\n  async(_, thunkAPI) =>{\n      try {\n          thunkAPI.dispatch(resetUser())\n          thunkAPI.dispatch(resetProducts())\n          return authService.logoutUser()\n      } catch (error) {\n        const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n\n        return thunkAPI.rejectWithValue(message)\n    }\n  }\n)  \n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    resetAuth: (state) => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      // Health Check\n      .addCase(healthCheck.pending, (state) => {\n        state.isError = false\n        state.isSuccess = false\n        state.isLoading = true\n      })\n      .addCase(healthCheck.fulfilled, (state, action) => {\n        state.verified = action.payload.verified\n        state.isLoading = false\n      })\n      .addCase(healthCheck.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Set User Credentials from Verified Access Token\n      .addCase(setUserCredentials.pending, (state) => {\n        state.isError = false\n        state.isSuccess = false\n        state.isLoading = true\n      })\n      .addCase(setUserCredentials.fulfilled, (state, action) => {\n        state.token = action.payload.accessToken\n        state.isLoading = false\n        state.isSuccess = true\n      })\n      .addCase(setUserCredentials.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Refresh Access Token\n      .addCase(refreshToken.pending, (state) => {\n        state.isError = false\n        state.isSuccess = false\n        state.isLoading = true\n        state.message = \"\"\n      })\n      .addCase(refreshToken.fulfilled, (state, action) => {\n        if(action.payload.accessToken){\n          state.token = action.payload.accessToken\n          sessionStorage.setItem('token', JSON.stringify(action.payload))\n        }\n        // console.log(`Success Paylod: ${JSON.stringify(action.payload,null,4)}`)\n        state.isLoading = false\n        state.isSuccess = true\n      })\n      .addCase(refreshToken.rejected, (state, action) => {\n        if(action.payload.accessToken){\n          state.token=action.payload.accessToken\n        }\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      //Logout User\n      .addCase(logOutUser.fulfilled, (state, action) => {\n        state.isError = false\n        state.isLoading = false\n        state.isSuccess = false\n        state.token = null\n        state.message = \"\"\n      })\n  }\n})\n\nexport const { resetAuth } = authSlice.actions\nexport default authSlice.reducer","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport productService from './productService'\nimport { refreshToken } from '../auth/authSlice'\n\n// Get user from localStorage\n// const productData = JSON.parse(localStorage.getItem('productData'))\n\nconst initialState = {\n    productData: [],\n    productSKUData:[],\n    noMatch: false,\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: '',\n  }\n\n\n// Form Response Submit\nexport const createProductDataJSON = createAsyncThunk(\n    'createProductDataJSON',\n    async(csvFileData, thunkAPI) =>{\n        try {\n            return await productService.createProductDataJSON(csvFileData)\n        } catch (error) {\n            const message =\n            (error.response && error.response.data && error.response.data.message) ||\n            error.message ||\n            error.toString()\n        return thunkAPI.rejectWithValue(message) \n        }\n    }\n) \n\n// Get Products\nexport const getProducts = createAsyncThunk(\n  'prod/getProducts',\n  async(itemData, thunkAPI)=>{\n    try {\n      return await productService.getProducts(itemData)\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message) \n    }\n  }\n)\n\n// Search Products\nexport const searchProducts = createAsyncThunk(\n  'prod/searchProducts',\n  async(searchKey, thunkAPI)=>{\n    try {\n      return await productService.searchProducts(searchKey)\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message) \n    }\n  }\n)\n\n// Search by SKU\nexport const searchSKUProducts = createAsyncThunk(\n  'prod/searchSKUProducts',\n  async(itemData, thunkAPI)=>{\n    try {\n      return await productService.searchSKUProducts(itemData,itemData.skuOnlyFlag)\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message) \n    }\n  }\n)\n\n// Search by SKU\nexport const searchSKUProductsOnly = createAsyncThunk(\n  'prod/searchSKUProductsOnly',\n  async(itemData, thunkAPI)=>{\n    try {\n      return await productService.searchSKUProducts(itemData,itemData.skuOnlyFlag)\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message) \n    }\n  }\n)\n\n// Update Product Data\nexport const updateProduct = createAsyncThunk(\n  'prod/updateProduct',\n  async(itemData, thunkAPI)=>{\n    try { \n      try {\n            \n        const token = thunkAPI.getState().auth.token\n        return await productService.updateProduct({itemData,token})\n\n      } catch (err) {\n        \n        if(err.response.status === 403){\n          await thunkAPI.dispatch(refreshToken())\n\n          const token = thunkAPI.getState().auth.token\n          return await productService.updateProduct({itemData,token}) \n        }\n      }\n        \n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message) \n    }\n  }\n)\n\nexport const productSlice = createSlice({\n    name: 'products',\n    initialState,\n    reducers: {\n      resetProducts: (state) => initialState,\n      resetSearchProducts: (state)=>({...state,\n        productSKUData:[],\n        noMatch: false,\n      })\n    },\n    extraReducers: (builder) => {\n      builder\n      // Convert Product CSV Data to JSON Data //////\n        .addCase(createProductDataJSON.pending, (state) => {\n          state.isLoading = true\n          state.productSKUData=[]\n          state.noMatch = false\n        })\n        .addCase(createProductDataJSON.fulfilled, (state, action) => {\n          state.isLoading = false\n          state.isSuccess = true\n          state.productData = action.payload\n        })\n        .addCase(createProductDataJSON.rejected, (state, action) => {\n          state.isLoading = false\n          state.isError = true\n          state.message = action.payload\n        })\n\n      // Get products /////////////////////////////\n      .addCase(getProducts.pending, (state) => {\n        state.isLoading = true\n        state.productSKUData=[]\n        state.message = \"\"\n        state.noMatch = false\n      })\n      .addCase(getProducts.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.productData = action.payload\n        if(action.payload.length===0){\n          state.noMatch = true\n        }\n      })\n      .addCase(getProducts.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Search Products /////////////////////////////\n      .addCase(searchProducts.pending, (state) => {\n        state.isLoading = true\n        state.productSKUData=[]\n        state.message = \"\"\n        state.noMatch = false\n      })\n      .addCase(searchProducts.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.productData = action.payload\n        if(action.payload.length===0){\n          state.noMatch = true\n        }\n      })\n      .addCase(searchProducts.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Search SKU Products /////////////////////////////\n      .addCase(searchSKUProducts.pending, (state) => {\n        state.isLoading = true\n        state.productSKUData=[]\n        state.message = \"\"\n        state.noMatch = false\n      })\n      .addCase(searchSKUProducts.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.productData = action.payload\n        if(action.payload.length===0){\n          state.noMatch = true\n        }\n      })\n      .addCase(searchSKUProducts.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Search SKU Products SKU only /////////////////////////////\n      .addCase(searchSKUProductsOnly.pending, (state) => {\n        state.isLoading = true\n        state.productSKUData=[]\n        state.message = \"\"\n        state.noMatch = false\n      })\n      .addCase(searchSKUProductsOnly.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.productSKUData = action.payload\n        if(action.payload.length===0){\n          state.noMatch = true\n        }\n      })\n      .addCase(searchSKUProductsOnly.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n\n      // Update Product Data /////////////////////////////\n      .addCase(updateProduct.pending, (state) => {\n        state.isLoading = true\n        state.productSKUData=[]\n        state.isError = false\n        state.isSuccess = false\n        state.noMatch = false\n        state.message = \"\"\n      })\n      .addCase(updateProduct.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.message = action.payload.message\n      })\n      .addCase(updateProduct.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n      })\n    },\n})\n\nexport const { resetProducts,\n               resetSearchProducts } = productSlice.actions\nexport default productSlice.reducer","import axios from 'axios'\n\nconst order_URI = 'https://api.dinmotoindia.com/api/order/'\n\nconst getAllDemandSlips = async(token)=>{\n    const config = {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    }\n    const response = await axios.get(order_URI, config)\n\n    return response.data\n}\n\nconst getFilteredDemandSlips = async(token)=>{\n    const config = {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    }\n\n    let currDate = new Date()\n    let ticketDate = currDate.getDate()\n    let ticketMonth = currDate.getMonth()+1\n    let ticketYear = currDate.getFullYear()\n\n    if(ticketDate<10){\n        ticketDate = `0${ticketDate}`\n    }\n\n    if(ticketMonth<10){\n        ticketMonth = `0${ticketMonth}`\n    }\n\n    const fullDate = `${ticketDate}${ticketMonth}${ticketYear}`\n\n    const response = await axios.post(order_URI+`filter/${fullDate}`,{}, config)\n\n    return response.data\n}\n\nconst generateDemandSlip = async({demandSlipData, token})=>{\n    const config = {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    }\n\n    // API Call\n    const response = await axios.post(order_URI, demandSlipData, config) \n    // console.log(`response:${JSON.stringify(response.data.demandSlipData,null,4)}`)\n    return response.data.demandSlipData\n}\n\n// PATCH /:ticketNumber\nconst updateDemandSlip = async({updatedData, token})=>{\n    const config = {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    }\n    // API Call\n    const response = await axios.patch(order_URI+updatedData.ticketNumber, updatedData, config) \n    // console.log(`response:${JSON.stringify(response.data.demandSlipData,null,4)}`)\n    return response.data\n}\n\nconst orderService = {\n    getAllDemandSlips,\n    getFilteredDemandSlips,\n    generateDemandSlip,\n    updateDemandSlip,\n}\n\nexport default orderService","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport orderService from './orderService'\nimport { refreshToken } from '../auth/authSlice'\n\nconst initialState = {\n    orderData:[],\n    pendingOrderList: [],\n    partialOrderList: [],\n    failedOrderList: [],\n    fulfilledOrderList: [],\n    newDemandSlip:{},\n    updatedDataFlag:false,\n    isLoading:false,\n    isError:false,\n    isSuccess:false,\n    message:\"\"\n}\n\n// Get All Demand Orders\nexport const getAllDemandSlips = createAsyncThunk(\n  'orders/getAllDemandSlips',\n  async(_, thunkAPI)=>{\n    try {\n      try {\n            \n        const token = thunkAPI.getState().auth.token\n        return await orderService.getAllDemandSlips(token)\n\n      } catch (err) {\n        \n        if(err.response.status === 403){\n          await thunkAPI.dispatch(refreshToken())\n\n          const token = thunkAPI.getState().auth.token\n          return await orderService.getAllDemandSlips(token) \n        }\n      }\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\n// Get User and Date Filtered Demand Orders\nexport const getFilteredDemandSlips = createAsyncThunk(\n  'orders/getFilteredDemandSlips',\n  async(_, thunkAPI)=>{\n    try {\n      try {\n            \n        const token = thunkAPI.getState().auth.token\n        return await orderService.getFilteredDemandSlips(token)\n\n      } catch (err) {\n        \n        if(err.response.status === 403){\n          await thunkAPI.dispatch(refreshToken())\n\n          const token = thunkAPI.getState().auth.token\n          return await orderService.getFilteredDemandSlips(token) \n        }\n      }\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\nexport const generateDemandSlip = createAsyncThunk(\n  'orders/generateDemandSlip',\n  async(demandSlipData,thunkAPI)=>{\n    try {\n      try {\n            \n        const token = thunkAPI.getState().auth.token\n        return await orderService.generateDemandSlip({demandSlipData,token})\n        // await thunkAPI.dispatch(getFilteredDemandSlips()) \n\n      } catch (err) {\n        \n        if(err.response.status === 403){\n          await thunkAPI.dispatch(refreshToken())\n\n          const token = thunkAPI.getState().auth.token\n          return await orderService.generateDemandSlip({demandSlipData,token})\n          // await thunkAPI.dispatch(getFilteredDemandSlips()) \n        }\n      }\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\nexport const updateDemandSlip = createAsyncThunk(\n  'orders/updateDemandSlip',\n  async(updatedData,thunkAPI)=>{\n    try {\n      try {\n            \n        const token = thunkAPI.getState().auth.token\n        return await orderService.updateDemandSlip({updatedData,token})\n        // await thunkAPI.dispatch(getFilteredDemandSlips()) \n\n      } catch (err) {\n        \n        if(err.response.status === 403){\n          await thunkAPI.dispatch(refreshToken())\n\n          const token = thunkAPI.getState().auth.token\n          return await orderService.updateDemandSlip({updatedData,token})\n          // await thunkAPI.dispatch(getFilteredDemandSlips()) \n        }\n      }\n    } catch (error) {\n      const message =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString()\n      return thunkAPI.rejectWithValue(message)\n    }\n  }\n)\n\nexport const orderSlice = createSlice({\n    name: 'orders',\n    initialState,\n    reducers: {\n      resetOrders: (state) => initialState,\n      resetAfterNewDemandSlip: (state)=>({...state,\n        isError:false,\n        isLoading:false,\n        updatedDataFlag:false,\n        isSuccess:false,\n        message:\"\"\n      })\n    },\n    extraReducers: (builder) => {\n      builder\n      // Get All Demand Slip Data //////\n        .addCase(getAllDemandSlips.pending, (state) => {\n          state.isLoading = true\n          state.updatedDataFlag=false\n          state.orderData=[]\n          state.pendingOrderList=[]\n          state.partialOrderList=[]\n          state.failedOrderList=[]\n          state.fulfilledOrderList=[]\n        })\n        .addCase(getAllDemandSlips.fulfilled, (state, action) => {\n          state.isLoading = false\n          state.isSuccess = true\n          state.orderData = action.payload\n          state.pendingOrderList = action.payload.filter((order)=>order.status===\"pending\")\n          state.partialOrderList = action.payload.filter((order)=>order.status===\"partial\")\n          state.failedOrderList = action.payload.filter((order)=>order.status===\"failed\")\n          state.fulfilledOrderList = action.payload.filter((order)=>order.status===\"fulfilled\")\n        \n        })\n        .addCase(getAllDemandSlips.rejected, (state, action) => {\n          state.isLoading = false\n          state.isError = true\n          state.message = action.payload\n        })\n      \n      // Get User and Date Filtered Demand Slip Data //////\n        .addCase(getFilteredDemandSlips.pending, (state) => {\n          state.isLoading = true\n          state.updatedDataFlag=false\n          state.orderData=[]\n          state.pendingOrderList=[]\n          state.partialOrderList=[]\n          state.failedOrderList=[]\n          state.fulfilledOrderList=[]\n        })\n        .addCase(getFilteredDemandSlips.fulfilled, (state, action) => {\n          state.isLoading = false\n          state.isSuccess = true\n          state.orderData = action.payload\n          state.pendingOrderList = action.payload.filter((order)=>order.status===\"pending\")\n          state.partialOrderList = action.payload.filter((order)=>order.status===\"partial\")\n          state.failedOrderList = action.payload.filter((order)=>order.status===\"failed\")\n          state.fulfilledOrderList = action.payload.filter((order)=>order.status===\"fulfilled\")\n        })\n        .addCase(getFilteredDemandSlips.rejected, (state, action) => {\n          state.isLoading = false\n          state.isError = true\n          state.message = action.payload\n        })\n\n      // Generate New Demand Slip //////\n        .addCase(generateDemandSlip.pending, (state) => {\n          state.isLoading = true\n          state.updatedDataFlag=false\n          state.isSuccess = false\n          state.isError = false\n          state.newDemandSlip = {}\n          // state.orderData=[]\n        })\n        .addCase(generateDemandSlip.fulfilled, (state, action) => {\n          state.isLoading = false\n          state.isError = false\n          state.isSuccess = true\n          state.newDemandSlip = action.payload\n          state.message = `New Demand Reciept ${action.payload.ticketNumber} created`\n        })\n        .addCase(generateDemandSlip.rejected, (state, action) => {\n          state.isLoading = false\n          state.isSuccess = false\n          state.isError = true\n          state.message = action.payload\n        })\n\n      // Update Demand Slip Data //////\n        .addCase(updateDemandSlip.pending, (state) => {\n          state.isLoading = true\n          state.updatedDataFlag=false\n        })\n        .addCase(updateDemandSlip.fulfilled, (state, action) => {\n          state.isLoading = false\n          state.isSuccess = true\n          state.updatedDataFlag=true\n          state.message = action.payload\n        })\n        .addCase(updateDemandSlip.rejected, (state, action) => {\n          state.isLoading = false\n          state.isError = true\n          state.message = action.payload\n        })\n    }\n})\n\nexport const { resetOrders,\n              resetAfterNewDemandSlip } = orderSlice.actions\nexport default orderSlice.reducer","import { configureStore } from '@reduxjs/toolkit';\nimport templateReducer from '../features/template/templateSlice'\nimport productReducer from \"../features/products/productSlice\"\nimport authReducer from \"../features/auth/authSlice\"\nimport usersReducer from \"../features/users/usersSlice\"\nimport ordersReducer from \"../features/orders/orderSlice\"\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    product: productReducer,\n    template: templateReducer,\n    users: usersReducer,\n    orders: ordersReducer,\n  },\n});\n","import { useDispatch, useSelector } from \"react-redux\"\nimport { useNavigate } from 'react-router-dom'\nimport { BiLogOut, BiMenu } from \"react-icons/bi\"\nimport { logOutUser } from '../../features/auth/authSlice';\n\nimport \"./Navbar.css\"\n\nfunction Navbar() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch()\n\n  const {token} = useSelector((state)=>state.auth)\n\n  const handleClick=()=>{\n    navigate(\"/\")\n  }\n\n  const handleLogout=()=>{\n    dispatch(logOutUser())\n    navigate(\"/login\")\n  }\n\n  return (\n    <div className='navbar-container' style={token?{}:{justifyContent:`center`}}> \n        {token && <div className='menu-btn'><BiMenu /></div>}\n        <h1 onClick={()=>handleClick()}>Din</h1>\n        {token && <div className='logout-btn' onClick={()=>handleLogout()}> <BiLogOut/></div>}\n    </div>\n  )\n}\n\nexport default Navbar","import React, { useState } from 'react'\nimport { useDispatch } from \"react-redux\"\nimport {formResponseSubmit} from \"../../features/template/templateSlice\"\nimport \"./Form.css\"\n\nfunction CopyForm() {\n    const dispatch = useDispatch(); \n\n    const [formData, setFormData] = useState({\n        customer_name:'',\n        pricePerUnit:'',\n        pricePerUnitOE:'',\n        unit:'',\n        product:'',\n    })\n\n    const {customer_name, pricePerUnit, pricePerUnitOE, excDeliveryCharges, unit, product} = formData\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n\n    const onChange=(e)=>{\n        setFormData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        if(customer_name===null || pricePerUnit===null || unit===null){\n            console.log(`Please enter valid data`)\n        }else{\n            dispatch(formResponseSubmit({\n                customer_name,\n                pricePerUnit,\n                pricePerUnitOE,\n                excDeliveryCharges,\n                unit,\n                product\n            }))\n        }\n    }\n\n  return (\n    <>\n        <div className='form-container left-border-form'>\n        <form onSubmit={onSubmit}>\n\n            <div className=\"form-grid\">\n                <div className=\"form-group\">\n                    <label>Name *</label>\n                    <input type=\"text\" \n                        className='form-control'\n                        name= 'customer_name'\n                        id='customer_name'\n                        value = {customer_name}\n                        placeholder=\"Customer's name\"\n                        autoComplete='off'\n                        onChange={onChange} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Price Per Unit *</label>\n                    <input type=\"text\" \n                        className='form-control'\n                        name= 'pricePerUnit'\n                        id='pricePerUnit'\n                        value = {pricePerUnit}\n                        placeholder='Price Per Unit'\n                        onChange={onChange}\n                        // onKeyPress={(e) => !/[0-9, ]/.test(e.key) && e.preventDefault()} \n                        />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Price Per Unit #2</label>\n                    <input type=\"text\" \n                        className='form-control'\n                        name= 'pricePerUnitOE'\n                        id='pricePerUnitOE'\n                        value = {pricePerUnitOE}\n                        placeholder='Alternate Price Per Unit'\n                        onChange={onChange}\n                        // onKeyPress={(e) => !/[0-9, ]/.test(e.key) && e.preventDefault()} \n                        />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Excluding Delivery Charges</label>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"excDeliveryCharges\" \n                            id=\"true\" \n                            value=\"true\"\n                            onChange={onChange} />\n                        <label htmlFor=\"true\">Yes</label>\n                        </div>\n                    </div>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"excDeliveryCharges\" \n                            id=\"false\" \n                            value=\"false\"\n                            onChange={onChange} />\n                        <label htmlFor=\"false\">No</label>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"form-group \">\n                    <label>Unit *</label>\n                    \n                    <div className='radio-group'>\n                    <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"unit\" \n                            id=\"piece\" \n                            value=\"piece\"\n                            onChange={onChange} />\n                        <label htmlFor=\"piece\">Piece</label>\n                    </div>\n\n                    <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"unit\" \n                            id=\"set\" \n                            value=\"set\"\n                            onChange={onChange} />\n                        <label htmlFor=\"set\">Set</label>\n                    </div>\n\n                    <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"unit\" \n                            id=\"litre\" \n                            value=\"litre\"\n                            onChange={onChange} />\n                        <label htmlFor=\"litre\">Litre</label>\n                    </div>\n\n                    <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"unit\" \n                            id=\"mL\" \n                            value=\"mL\"\n                            onChange={onChange} />\n                        <label htmlFor=\"mL\">mL</label>\n                    </div>\n\n                    \n                    </div>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Product</label>\n                    <input type=\"text\" \n                        className='form-control'\n                        name= 'product'\n                        id='product'\n                        value = {product}\n                        placeholder='Product'\n                        onChange={onChange}\n                        />\n                </div>\n            </div>\n\n\n            <div className=\"form-group\">\n                <button type=\"submit\" className=\"submit-btn\">\n                    Submit\n                </button>\n            </div>\n            {/* <p>* Mandatory Fields</p> */}\n\n        </form>\n        </div>\n    </>\n  )\n}\n\nexport default CopyForm","import { useState } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { AnimatePresence, motion } from \"framer-motion\"\nimport CopyForm from '../../components/Forms/CopyForm'\n\nimport \"./IndiaMartRes.css\"\n\nfunction QuickRes() {\n\n    const {formResponseData} =useSelector(\n        (state)=>state.template\n    )\n    const [successPopup, setSuccessPopup] = useState(false)\n\n    const {customer_name, pricePerUnit, pricePerUnitOE, excDeliveryCharges, unit, product} = formResponseData\n\n    const ResponseList = [{\n        text:`Hi ${customer_name}, thanks for the inquiry.\\n\\nWe can provide ${product===\"\"?`the product`:product} at Rs.${pricePerUnit} per ${unit}${pricePerUnitOE!==\"\"?` and Rs.${pricePerUnitOE} per ${unit}(Original)`:``}${excDeliveryCharges===`true`?\"(excluding shipping charges)\":\"\"}.\\n\\nFor further details you can call us on 9230021058/ 08043818766 (preferred call time 10am to 11am).`\n    },{\n        text:`Hi ${customer_name}, thanks for the inquiry.\\n\\nWe can provide ${product===\"\"?`the product`:product} at Rs.${pricePerUnit} per ${unit}${pricePerUnitOE!==\"\"?` and Rs.${pricePerUnitOE} per ${unit}(Original)`:``}${excDeliveryCharges===`true`?\"(excluding shipping charges)\":\"\"} onwards as per vehicle model. Kindly mention the model/s you are looking for.\\n\\nFor further details you can call us on 9230021058/ 08043818766 (preferred call time 10am to 11am).`\n    },{\n    //     text:`We can deliver ${product===\"\"?`the product`:product} for Rs.${pricePerUnit} per ${unit} ${pricePerUnitOE!==\"\"?`and Rs. ${pricePerUnitOE} per ${unit}`:``}.\\n\\nYou can call us on 08043818766/ 9230021058 (preferred call time between 10am to 11am).`\n    // },{\n        text:`Hi ${customer_name}, thanks for the inquiry but we do not deal in ${product===\"\"?`this product`:product}.\\n\\nFor any further requirements you can call us on 08043818766/ 9230021058 (preferred call time between 10am to 11am).`\n    },{\n        text:`Hi ${customer_name}, thanks for the inquiry but ${product===\"\"?`the product`:product} is currently out of stock.\\n\\nFor any further requirements you can call us on 08043818766/ 9230021058 (preferred call time between 10am to 11am).`\n    },{\n        text:`Hi ${customer_name}, thanks for the inquiry and sorry for our late response.\\n\\nWe can provide ${product===\"\"?`the product`:product} at Rs.${pricePerUnit} per ${unit}${pricePerUnitOE!==\"\"?` and Rs. ${pricePerUnitOE} per ${unit}`:``}.\\n\\nFor further details you can call us on 9230021058/ 08043818766 (preferred call time 10am to 11am).`\n    },{\n        text:`Hi ${customer_name}, thanks for the inquiry and sorry for our late response.\\n\\nWe can provide ${product===\"\"?`the product`:product} at Rs.${pricePerUnit} per ${unit}${pricePerUnitOE!==\"\"?` and Rs. ${pricePerUnitOE} per ${unit}`:``} onwards as per vehicle model. Kindly mention the model/s you are looking for.\\n\\nFor further details you can call us on 9230021058/ 08043818766 (preferred call time 10am to 11am).`\n    },{\n        text:`Hi ${customer_name}, thanks for the inquiry.\\n\\nWe do not supply to your location at the moment.\\n\\nFor any further queries/ inquiries you can call us on 9230021058/ 08043818766 (preferred call time 10am to 11am).`\n    },]\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n    const copyText=(text)=>{\n        navigator.clipboard.writeText(text)\n        setSuccessPopup(false)\n        setTimeout(()=>{\n            setSuccessPopup(true)\n        },100)\n        setTimeout(()=>{\n            setSuccessPopup(false)\n          },2000)\n      }\n\n  return (\n    <div className='quick-res-container'>\n    \n    <CopyForm />\n    \n    <div className='copy-container'>\n\n        {ResponseList.map((item, index)=>\n            <div key={index}\n                className='template-text' \n                onClick={()=>copyText(item.text)}>\n                {item.text}\n            </div>\n        )}\n      </div>\n\n      <AnimatePresence>\n        {successPopup && \n            <motion.div className=\"alert-content\"\n                initial={{opacity:0}} \n                animate={{opacity:1}}\n                exit={{opacity:0}}\n                transition={{duration:0.8}}\n            >\n                Messgae Copied\n            </motion.div>\n        }\n    </AnimatePresence>\n    \n    </div>\n  )\n}\n\nexport default QuickRes","import React, { useState } from 'react'\nimport \"./Dropdown.css\"\n\nfunction Dropdown({dataList, passItemCode}) {\n    const [isActive, setIsActive] = useState(false)\n    const [selectedItem, setSelectedItem] = useState(\"\")\n\n    const handleClick=()=>{\n        setIsActive(!isActive)\n    }\n\n    const handleItemClick=(prod)=>{\n        const data = {\n            saveFile:false,\n            itemCode: prod.itemCode\n        }\n\n        passItemCode(data)\n        setSelectedItem(prod.productName)\n        setIsActive(!isActive)\n    }\n\n  return (\n    <div className=\"drop-down-container\">\n        <div className=\"drop-down-item selected-drop-down\" onClick={()=>handleClick()}>\n            <p>{selectedItem===\"\"?`Select a Cateogry`:selectedItem}</p>\n        </div>     \n\n        {isActive && \n        <div className=\"drop-down-list-container\">\n            {dataList?.map((item,index)=>\n            <div className=\"drop-down-item\" key={index}\n                onClick={()=>handleItemClick(item)}\n            >\n                <p>{item.productName}</p>\n            </div>\n            )\n            }\n\n        </div>\n        }     \n    </div>\n  )\n}\n\nexport default Dropdown","import React from 'react'\nimport \"./Loader.css\"\n\nfunction Loader() {\n  return (\n    <div className='loader-container'>\n        <div className=\"lds-dual-ring\"></div>\n    </div>\n  )\n}\n\nexport default Loader","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useNavigate } from 'react-router-dom';\nimport { getProducts, searchProducts, resetProducts, searchSKUProducts} from \"../../features/products/productSlice\"\n// import Papa from 'papaparse'\nimport debouce from \"lodash.debounce\";\n\nimport \"./Products.css\"\nimport Dropdown from '../../components/Dropdown/Dropdown';\nimport Loader from '../../components/Loader/Loader';\nimport { logOutUser } from '../../features/auth/authSlice';\n\nimport { AiOutlineSearch } from \"react-icons/ai\"\n\nfunction Products() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const { productData, noMatch, isLoading } = useSelector(\n    (state)=>state.product\n  )\n\n  const {token, isError} = useSelector((state)=>state.auth)\n\n  const [showSKUFlag, setShowSKUFlag] = useState(false)\n  const [prodNavFlag, setProdNavFlag] = useState(false)\n\n  const [searchInput, setSearchInput] = useState(\"\");\n\n  const [itemData, setItemData] = useState({\n    // saveFile: false,\n    itemCode:\"\"\n  })\n\n  const [skuData, setSKUData] = useState({\n    itemCode:\"\",\n    vehicleModel:\"\",\n    brandCompany:\"\",\n    partNum:\"\",\n    skuOnlyFlag:\"false\"\n  })\n  \n  const { itemCode } = itemData\n\n  const prodCodeList = [{\n    productName:\"Shocker\",\n    itemCode:\"SKR\",\n  },\n  {\n    productName:\"Brake-Shoe\",\n    itemCode:\"BSH\",\n  },\n  {\n    productName:\"Disc-Pad\",\n    itemCode:\"DPD\",\n  },\n  {\n    productName:\"Mobil-Filter\",\n    itemCode:\"MOF\",\n  },\n  {\n    productName:\"Ball-Racer\",\n    itemCode:\"RSR\",\n  },\n  {\n    productName:\"Bendex\",\n    itemCode:\"BDX\",\n  },\n  {\n    productName:\"Foot-Rest\",\n    itemCode:\"FTR\",\n  },\n  {\n    productName:\"Air-Filter\",\n    itemCode:\"ARF\",\n  },\n  {\n    productName:\"Side-Stand\",\n    itemCode:\"SSN\",\n  },\n  {\n    productName:\"Main-Stand\",\n    itemCode:\"MSN\",\n  },\n  ]\n\n  /////////////////////////////////////////////////\n  //////// Functions /////////////////////////////\n  ////////////////////////////////////////////////\n\n  const handleProductClick = (sku) =>{\n    if(prodNavFlag){\n      dispatch(resetProducts())\n      navigate(`${sku}`)\n    }\n  }\n\n  const handleSearchChange = (e) => {\n    setSearchInput(e.target.value);\n  }\n\n  const onSKUChange=(e)=>{\n    setSKUData((prevState)=>({\n        ...prevState,\n        [e.target.name]:e.target.value\n    }))\n  }\n\n  // Debounce function\n  const debouncedResults = debouce(handleSearchChange, 800)\n  \n  // Get Products API call \n  const onSubmit=(e)=>{\n    e.preventDefault()\n      \n    if(itemCode===\"\"){\n      alert(`Please enter Item`)\n    }else{\n      setSearchInput(\"\")\n      dispatch(getProducts(itemData))\n    }\n  }\n\n  // Get SKU Products API call \n  const onSKUSubmit=(e)=>{\n    e.preventDefault()\n      \n    if(skuData.itemCode===\"\"){\n      alert(`Please Enter Item Code`)\n    }else{\n      dispatch(searchSKUProducts(skuData))\n    }\n  }\n\n  /////////////////////////////////////////////////\n  //////// Hooks /////////////////////////////////\n  ////////////////////////////////////////////////\n\n  // Logout on Bad Token\n  useEffect(()=>{    \n    if(isError || !token){\n      dispatch(logOutUser())\n      navigate(\"/login\")\n    }\n\n    dispatch(resetProducts())\n  },[])\n\n  // Debounce Search\n  useEffect(() => {\n    return () => {\n      debouncedResults.cancel();\n    };\n  });\n\n  // Search API call\n  useEffect(()=>{\n    if (searchInput!==\"\") {\n      dispatch(searchProducts(searchInput))\n    }\n  },[searchInput])\n\n  return (\n    <>\n    {isLoading && <Loader />}\n    <div className='data-container'>\n      \n      <div className=\"controlbox-container\" >\n        \n        {/* Load Product Controls */}\n        <div className=\"controlbox\" style={{width:\"80%\"}}>\n\n          <label style={{fontWeight:\"bold\"}}>Search</label>\n          <div className=\"search-bar\">\n            <AiOutlineSearch className='search-icon'/>\n            <input\n              type=\"text\"\n              name=\"search\"\n              placeholder=\"Search for Product\"\n              onChange={debouncedResults}\n              autoComplete='off'\n              />\n\n        </div>\n        </div>\n\n        <form onSubmit={onSKUSubmit}>\n\n          <label style={{fontWeight:\"bold\"}}>Search by SKU</label>\n          <div className=\"form-group\">\n                {/* <label htmlFor={`itemCode sku`}>Item Code</label> */}\n                <input type=\"text\" \n                    className='form-control'\n                    name= 'itemCode'\n                    id={`itemCode sku`}\n                    value = {skuData.itemCode}\n                    placeholder=\"Item Code\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n                {/* <label htmlFor={`vehicleModel sku`}>Vehicle Model</label> */}\n                <input type=\"text\" \n                    className='form-control'\n                    name= 'vehicleModel'\n                    id={`vehicleModel sku`}\n                    value = {skuData.vehicleModel}\n                    placeholder=\"Vehicle Model\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n                {/* <label htmlFor={`brandCompany sku`}>Brand Company</label> */}\n                <input type=\"text\" \n                    className='form-control'\n                    name= 'brandCompany'\n                    id={`brandCompany sku`}\n                    value = {skuData.brandCompany}\n                    placeholder=\"Brand Company\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n                {/* <label htmlFor={`partNum sku`}>Part Number</label> */}\n                <input type=\"text\" \n                    className='form-control'\n                    name= 'partNum'\n                    id={`partNum sku`}\n                    value = {skuData.partNum}\n                    placeholder=\"Part Number\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n            <button type=\"submit\" className=\"submit-btn\">\n                Search\n            </button>\n          </div>\n        </form>\n        \n\n        \n        <form onSubmit={onSubmit}>\n        \n        {/* Search Input */}\n\n        <div className=\"controlbox\">\n\n          <div className=\"control-section\">\n            <label>Product Category</label>\n\n            <Dropdown  \n              dataList={prodCodeList} \n              passItemCode={setItemData}\n              />\n          </div>\n\n          <div className=\"form-group\">\n            <button type=\"submit\" className=\"submit-btn\">\n                Search\n            </button>\n          </div>\n\n        </div>\n        </form>\n          \n        {/* On Product Load Controls */}\n        {productData.length>0 &&\n          <div className=\"control-box\">\n          <div className=\"control-section\">\n            \n            <div className=\"control-btn\"\n              style={{backgroundColor:`var(--buttonGreen)`}}\n              onClick={()=>setShowSKUFlag(!showSKUFlag)}\n            >\n              {showSKUFlag?\"Show Product Name\":\"Show SKU\"}\n            </div>\n            \n            <div className=\"control-btn\"\n              style={prodNavFlag?{backgroundColor:`var(--buttonRed)`}:{backgroundColor:`var(--buttonGreen)`}}\n              onClick={()=>setProdNavFlag(!prodNavFlag)}\n            >\n              {prodNavFlag?\"De-activate Products\":\"Activate Products\"}\n            </div>\n\n          </div>\n        </div>}\n\n\n      </div>\n\n      {noMatch &&  \n        <h3>No Match</h3>\n      }\n\n      <div className='grid'>\n        <div className=\"productCol-conatiner\">\n          {/* Product Fields */}\n          {productData?.length>0 &&\n            <div className=\"productCol\">\n                <h3>vehicleModel</h3>\n                <h3>brandCompany</h3>\n                <h3>sku</h3>\n                <h3>mrp</h3>\n                <h3>compatibleModels</h3>\n                <h3>metaData</h3>\n            </div>\n          }\n\n          {/* Product Data */}\n          {productData?.map((item,index)=>\n            <div className={`productCol ${prodNavFlag?\"navProdCol\":\"\"}`}\n              // style={prodNavFlag?{cursor:`pointer`}:{}} \n              key={index}\n              onClick={()=>handleProductClick(item.sku)}\n            >\n              <h3>{item.vehicleModel}</h3>\n              <h3>{item.brandCompany}</h3>\n              <h3>{item.sku}</h3>\n              <h3>{item.mrp}</h3>\n              <h3>{item.compatibleModels.map((item,i)=>{\n                return <p key={i}>{ \n                  showSKUFlag?\n                  item\n                  :\n                  // Write logic for when whole list isnt loaded\n                  productData.filter(prod=>prod.sku===item).map(prod=>\n                    prod.productName+\" \"+ prod.vehicleModel+\" \"+prod.brandCompany\n                  )\n                }\n                </p>})}\n              </h3>\n              {item.metaData && \n              <h3>\n                {Object.keys(item.metaData)?.map((k,i)=>{\n                  return <p key={i}>{k}- {item.metaData[k]}</p>\n                  } \n                )}\n              </h3>\n              }\n            </div>\n            )\n          }\n        </div>\n        \n\n    \n      </div>\n\n    </div>\n    </>\n  )\n}\n\nexport default Products","import { useSelector } from 'react-redux'\nimport jwtDecode from 'jwt-decode'\n\nconst useAuth = () => {\n    const { token } = useSelector((state)=>state.auth)\n    let isManager = false\n    let isAdmin = false\n    let isEmployee = false\n    let status = \"\"\n\n    if(token){\n        const decoded = jwtDecode(token)\n        const { username, roles } = decoded.UserInfo\n\n        isManager = roles.includes('Manager')\n        isAdmin = roles.includes('Admin')\n        isEmployee = roles.includes('Employee')\n\n        if(isEmployee){\n            status = \"Employee\"\n        }\n        if(isManager){\n            status = \"Manager\"\n        }\n        if(isAdmin){\n            status = \"Admin\"\n        }\n\n        return { username, roles, isManager, isAdmin, status }\n    }\n\n    return {username:\"\", roles:[], isManager, isAdmin, status}\n}\n\nexport default useAuth","import { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useSelector } from 'react-redux';\nimport useAuth from '../../hooks/useAuth';\n\nimport \"./Landing.css\"\n\nfunction Landing() {\n    const navigate = useNavigate();\n    const {token} = useSelector((state)=>state.auth)\n    const {status} = useAuth()\n\n    const pathList = [{\n        pathname:\"products\",\n        name:\"Products\",\n        accessLevel:[\"Admin\",\"Manager\",\"Employee\"]\n    },{\n        pathname:\"indiamart-templates\",\n        name:\"Templates\",\n        accessLevel:[\"Admin\",\"Manager\",\"Employee\"]\n    },{\n        pathname:\"user-management\",\n        name:\"User Management\",\n        accessLevel:[\"Admin\"]\n    },{\n        pathname:\"demand-slip-generator\",\n        name:\"Demand Slip Generator\",\n        accessLevel:[\"Admin\",\"Manager\",\"Employee\"]\n    }]\n\n    const handleNavigation=(pathname)=>{\n        let path = \"/\"+pathname\n        navigate(path)\n    }\n\n    useEffect(()=>{\n        if(!token){\n            navigate(\"/login\")\n        }\n    },[])\n\n\n  return (\n    <div>\n       <>\n       {pathList.filter(path=> path.accessLevel.includes(status)).map((item,index)=>\n        <div className=\"path-options\" key={index} \n            onClick={()=>handleNavigation(item.pathname)}>\n                {item.name}\n        </div>\n        )}\n        </>\n    </div>\n  )\n}\n\nexport default Landing","import React,{ useState, useEffect } from 'react'\nimport { AiOutlinePlus, AiOutlineClose } from \"react-icons/ai\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { updateProduct, searchSKUProductsOnly } from '../../features/products/productSlice';\n\nfunction ProductForm({initialValue, setFlag}) {\n    const dispatch = useDispatch();\n\n    const {productSKUData, noMatch, isSuccess, message} = useSelector((state)=>state.product)\n\n    const [formData, setFormData] = useState({\n        itemCode: initialValue.itemCode,\n        vehicleModel: initialValue.vehicleModel,\n        brandCompany: initialValue.brandCompany,\n        partNum: initialValue.partNum,\n        sku: initialValue.sku,\n        compatibleModels: initialValue.compatibleModels,\n        qty: initialValue?.qty,\n        mrp: initialValue.mrp,\n        metaData: initialValue?.metaData\n    })\n\n    const [skuData, setSKUData] = useState({\n        itemCode:`${initialValue.itemCode.split(\"-\")[0]}`,\n        vehicleModel:\"\",\n        brandCompany:\"\",\n        partNum:\"\",\n        skuOnlyFlag:\"true\"\n      })\n\n    const [updatedMetaData, setUpdatedMetaData] = useState({...initialValue?.metaData})\n    const [updatedModels, setUpdatedModels] = useState([...initialValue.compatibleModels])\n\n    const {itemCode, vehicleModel, brandCompany, partNum, sku, mrp} = formData\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n\n    const copyText=(text)=>{\n        navigator.clipboard.writeText(text.slice(4))\n    }\n\n    const onChange=(e)=>{\n        setFormData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onMetaDataChange=(e)=>{\n        setUpdatedMetaData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onModelItemChange=(e,i)=>{\n        const modelList = [...updatedModels]\n        modelList[i] = e.target.value\n        // console.log(modelList)\n        setUpdatedModels(modelList)\n    }\n\n    const handleAddItem=()=>{\n        const modelList = [...updatedModels,`${sku.split(\"-\")[0]}-`]\n        setUpdatedModels(modelList)\n    }\n\n    const handleItemDelete = (index)=>{\n        const modelList = [...updatedModels]\n        modelList.splice(index,1)\n        // console.log(modelList)\n        setUpdatedModels(modelList)\n    }\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        if(itemCode===null || vehicleModel===null || brandCompany===null ||\n            partNum===null || mrp===null){\n            console.log(`Please enter valid data`)\n        }else{\n            const prodInfo = {\n                itemCode,\n                vehicleModel,\n                brandCompany,\n                partNum,\n                compatibleModels:updatedModels.join(\",\"),\n                mrp,\n                ...updatedMetaData\n            }\n            \n            // console.log(`formData:${JSON.stringify(prodInfo,null,4)}`)\n            \n            dispatch(updateProduct({prodInfo,sku}))\n        }\n    }\n\n    const onSKUChange=(e)=>{\n        setSKUData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    // Get SKU Products API call \n    const onSKUSubmit=(e)=>{\n        e.preventDefault()\n        \n        if(skuData.itemCode===\"\"){\n        alert(`Please Enter Item Code`)\n        }else{\n        dispatch(searchSKUProductsOnly(skuData))\n        }\n    }\n\n    /////////////////////////////////////////////////\n    //////// Hooks //////////////////////////////////\n    ////////////////////////////////////////////////\n    useEffect(()=>{\n        if(isSuccess && message===`Updated ${initialValue.sku}`){\n            setFlag(false)\n        }\n    },[message])\n\n  return (\n    <div className='card-container card-grid' style={{padding:\"0\", border:\"none\"}}>\n        <form onSubmit={onSubmit}>\n            \n            <div className=\"form-group\">\n                <label htmlFor={`itemCode`}>Item Code</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'itemCode'\n                    id={`itemCode`}\n                    value = {itemCode}\n                    placeholder=\"itemCode\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`vehicleModel`}>Vehicle Model</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'vehicleModel'\n                    id={`vehicleModel`}\n                    value = {vehicleModel}\n                    placeholder=\"vehicleModel\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`brandCompany`}>Brand Company</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'brandCompany'\n                    id={`brandCompany`}\n                    value = {brandCompany}\n                    placeholder=\"brandCompany\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`partNum`}>Part Number</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'partNum'\n                    id={`partNum`}\n                    value = {partNum}\n                    placeholder=\"partNum\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label >SKU</label>\n                <div className=\"card-form-control\">\n                    {sku}\n                </div>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`mrp`}>MRP</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'mrp'\n                    id={`mrp`}\n                    value = {mrp}\n                    placeholder=\"mrp\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\" \n                style={{display:\"flex\", flexDirection:\"column\", justifyContent:\"center\"}}\n            >\n                <label>Compatible Models</label>\n                {updatedModels.map((model,index)=>{\n                    return(\n                        <div className='model-input-container' key={index}>\n                            <input\n                                className='card-form-control'\n                                style={{width:\"90%\"}}\n                                name= {model}\n                                id={`model ${index}`}\n                                value = {model}\n                                placeholder=\"Model SKU\"\n                                autoComplete='off'\n                                onChange={(e)=>onModelItemChange(e,index)}\n                            />\n\n                            <div className=\"delete-btn\" \n                                onClick={()=>handleItemDelete(index)}\n                            >\n                                <AiOutlineClose />\n                            </div>\n                        </div >\n                    )\n                })}\n                    <br />\n                <div className=\"add-btn\"\n                    onClick={handleAddItem}\n                >\n                    <AiOutlinePlus />\n                </div>\n\n\n\n            </div>\n            \n            {initialValue?.metaData &&\n            <div className=\"form-group\">\n                <label>Meta Data</label>\n                <div className=\"card-form-control\" \n                    style={{display:\"flex\", flexDirection:\"column\", alignItems:\"flex-start\"}}\n                >\n                    {Object.keys(initialValue?.metaData).map((field,index)=>{\n                        return(\n                            <React.Fragment key={index}>\n                                <label htmlFor={field}>{field}</label>\n                                <input type=\"text\" \n                                    className='card-form-control'\n                                    name={field}\n                                    id={field}\n                                    value = {updatedMetaData[field]}\n                                    placeholder={field}\n                                    autoComplete='off'\n                                    onChange={onMetaDataChange} />\n                            </React.Fragment>\n                            )\n                        })}\n                </div>\n            </div>\n            }\n\n            <div className=\"form-group\">\n                <button type=\"submit\" className=\"submit-btn\">\n                    Update\n                </button>\n            </div>\n        \n        </form>\n\n        <form onSubmit={onSKUSubmit}>\n\n          <label style={{fontWeight:\"bold\"}}>Search by SKU</label>\n          <div className=\"form-group\">\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'itemCode'\n                    id={`itemCode sku`}\n                    value = {initialValue.itemCode}\n                    placeholder=\"Item Code\"\n                    autoComplete='off'\n                    // onChange={onSKUChange} \n                    />\n            </div>\n\n            <div className=\"form-group\">\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'vehicleModel'\n                    id={`vehicleModel sku`}\n                    value = {skuData.vehicleModel}\n                    placeholder=\"Vehicle Model\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'brandCompany'\n                    id={`brandCompany sku`}\n                    value = {skuData.brandCompany}\n                    placeholder=\"Brand Company\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'partNum'\n                    id={`partNum sku`}\n                    value = {skuData.partNum}\n                    placeholder=\"Part Number\"\n                    autoComplete='off'\n                    onChange={onSKUChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <button type=\"submit\" className=\"submit-btn\">\n                    Search\n                </button>\n            </div>\n\n            {productSKUData.length!==0 && !noMatch && \n            <div className=\"form-group\">\n                <label>SKU</label>\n                <div className=\"card-form-control\"\n                    style={{display:\"flex\", flexDirection:\"column\", alignItems:\"flex-start\"}}\n                >\n                    {productSKUData.map((item,i)=>{\n                        return (\n                        <p className='sku-list-item'\n                        onClick={()=>copyText(item.sku)}\n                        >\n                            {item.sku}\n                        </p>\n                        )\n                    })}\n                </div>\n            </div>}\n            \n            {noMatch && <p>No Match Found</p>  }\n\n        </form>\n    </div>\n  )\n}\n\nexport default ProductForm","import { useState, useEffect } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchSKUProducts } from '../../features/products/productSlice';\nimport { logOutUser } from '../../features/auth/authSlice';\nimport { FiEdit2 } from 'react-icons/fi'\nimport { AiOutlineClose } from 'react-icons/ai'\n\nimport \"./Products.css\"\n\nimport Loader from '../../components/Loader/Loader';\nimport ProductForm from '../../components/Forms/ProductForm';\nimport useAuth from '../../hooks/useAuth';\n\nfunction Product() {\n    const params = useParams()\n    const navigate = useNavigate()\n    const dispatch = useDispatch();\n\n    const [editFlag, setEditFlag] = useState(false)\n\n    const {productData, isLoading, message} = useSelector((state)=>state.product)\n    const filteredProduct = productData?.filter(prod=>prod.sku===params.sku)[0]\n\n    const { token } = useSelector((state)=>state.auth)\n    const { isAdmin } = useAuth()\n\n    useEffect(()=>{\n        if(!token){\n            dispatch(logOutUser())\n            navigate(\"/\")\n        }\n        dispatch(searchSKUProducts({\n            itemCode:params.sku.split(\"-\")[0],\n            vehicleModel:params.sku.split(\"-\")[1],\n            brandCompany:params.sku.split(\"-\")[2],\n            partNum:params.sku.split(\"-\")[3],\n            skuOnlyFlag:\"false\"\n          }))        \n    },[])\n\n    useEffect(()=>{\n        if(!editFlag && message===`Updated ${params.sku}`){\n            dispatch(searchSKUProducts({\n                itemCode:params.sku.split(\"-\")[0],\n                vehicleModel:params.sku.split(\"-\")[1],\n                brandCompany:params.sku.split(\"-\")[2],\n                partNum:params.sku.split(\"-\")[3],\n                skuOnlyFlag:\"false\"\n              }))   \n        }\n    },[editFlag])\n\n  return (\n    <>\n\n    {isLoading && <Loader />}\n    <div className=\"product-container\">\n        {isAdmin && \n            <div className='edit-btn' \n                onClick={()=>setEditFlag(!editFlag)}>\n                {editFlag?<AiOutlineClose />:<FiEdit2 />}\n            </div>\n        }\n\n        <h1>Product</h1>\n        \n        {editFlag?\n        <ProductForm initialValue={filteredProduct} setFlag={setEditFlag}/>\n        :\n        <>\n            <p>itemCode:{filteredProduct?.itemCode} </p>\n            <p>vehicleModel:{filteredProduct?.vehicleModel} </p>\n            <p>brandCompany: {filteredProduct?.brandCompany} </p>\n            <p>partNum:{filteredProduct?.partNum} </p>\n            <p>sku:{filteredProduct?.sku} </p>\n            <p>mrp:{filteredProduct?.mrp} </p>\n            <br />\n            <p>compatibleModels:</p>\n            {filteredProduct?.compatibleModels.map((model,index)=>{\n                return <p key={index}>{model}</p>\n            })}\n            <br />\n            <p>metaData:</p>\n            {filteredProduct?.metaData && Object.keys(filteredProduct?.metaData).map((field,index)=>{\n                return(\n                    <p key={index}>{field}:{filteredProduct?.metaData[field]}</p>\n                    )\n                })}\n        </>}\n\n    </div>\n    </>\n  )\n}\n\nexport default Product","import React from 'react'\n\nfunction NotFound() {\n  return (\n    <div className='data-container'>\n        {/* <div className=\"window-content\" > */}\n\n          <h1>404</h1>\n          <br />\n          <h3>Page Not Found</h3>\n        {/* </div> */}\n\n    </div>\n  )\n}\n\nexport default NotFound","import { useState } from 'react'\nimport { useDispatch } from \"react-redux\"\nimport \"./Form.css\"\nimport {resetAuth, setUserCredentials} from \"../../features/auth/authSlice\"\n\nfunction LoginForm() {\n    const dispatch = useDispatch(); \n\n    const [formData, setFormData] = useState({\n        username:'',\n        password:'',\n    })\n\n    const [showPasswordFlag, setShowPasswordFlag] = useState(false)\n\n    const {username, password } = formData\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n\n    const onChange=(e)=>{\n        setFormData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        if(username===null || password===null){\n            console.log(`Please fill all fields`)\n        }else{\n            dispatch(resetAuth())\n            const userData = {\n                username,\n                password\n            }\n            // dispatch(refreshToken(userData))\n            dispatch(setUserCredentials(userData))\n            // console.log(JSON.stringify(userData,null,4))\n        }\n    }\n\n  return (\n    <>\n    <div className='form-container'>\n        <form onSubmit={onSubmit}>\n            <div className=\"form-grid\">\n                \n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input type=\"text\" \n                        className='form-control'\n                        name= 'username'\n                        id='username'\n                        value = {username}\n                        placeholder=\"Username\"\n                        autoComplete='off'\n                        onChange={onChange} />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input type={showPasswordFlag?`text`:`password`} \n                        className='form-control'\n                        name= 'password'\n                        id='password'\n                        value = {password}\n                        placeholder=\"Password\"\n                        autoComplete='off'\n                        onChange={onChange} />\n                </div>\n\n                <div className=\"form-group\">\n                    <div className=\"submit-btn\"\n                        onClick={()=>setShowPasswordFlag(!showPasswordFlag)}\n                    >\n                        Show Password\n                    </div>\n                </div>\n\n            </div>\n\n            <div className=\"form-group\">\n                <button type=\"submit\" className=\"submit-btn\">\n                    Submit\n                </button>\n            </div>\n        </form>\n    </div>\n    </>\n  )\n}\n\nexport default LoginForm","import { useEffect } from 'react'\nimport { useSelector } from \"react-redux\"\nimport LoginForm from '../../components/Forms/LoginForm'\n\nimport \"./Login.css\"\nimport Loader from '../../components/Loader/Loader'\nimport { useNavigate } from \"react-router-dom\"\n\nfunction Login() {\n  const navigate= useNavigate()\n  const {isLoading,isSuccess, isError, message} =useSelector((state)=>state.auth)\n\n  useEffect(()=>{\n    if(isSuccess){\n      navigate(\"/\")\n    }\n  },[isLoading])\n\n  return (\n    <>\n    {isLoading && <Loader />}\n    <div>\n        {/* Login */}\n        <LoginForm />\n        {isError && <p>{message}</p>}\n    </div>\n    </>\n  )\n}\n\nexport default Login","import React from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport \"./Modal.css\"\n\nfunction LoginAgainModal() {\n    const navigate = useNavigate()\n\n  return (\n    <>\n    <div className=\"modal-backdrop\"></div>\n    <div className='modal-container'>\n        <div className=\"form-container\">\n            <p>Login has Expired. Login again.</p>\n            <br />\n\n        <div className=\"control-box\">\n          <div className=\"control-section\">\n            \n            <div className=\"control-btn\"\n            //   style={{backgroundColor:`var(--buttonGreen)`}}\n            onClick={()=>navigate(\"/\")}\n            >\n              Go to Login\n            </div>\n            </div>\n        </div>\n        </div>\n\n    </div>\n    </>\n  )\n}\n\nexport default LoginAgainModal","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\n\nimport \"./Form.css\"\nimport { getAllUsers, updateUser } from '../../features/users/usersSlice';\n\nfunction UserForm({initialValue, setFlag}) {\n    const dispatch = useDispatch(); \n\n    const { isSuccess, message } = useSelector((state)=>state.users)\n\n    const [formData, setFormData] = useState({\n        id: initialValue._id,\n        username: initialValue.username,\n        firstname: initialValue.firstname,\n        lastname: initialValue.lastname,\n        active: initialValue.active,\n        roles: initialValue.roles\n    })\n\n    const { id, username, firstname, lastname, active, roles } = formData\n    const [checkList, setCheckList] = useState([...initialValue.roles])\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n\n    const onChange=(e)=>{\n        setFormData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const handleRoles=(e)=>{\n        if(e.target.value===\"admin\"){\n            setCheckList([\"Admin\",\"Manager\",\"Employee\"])\n        }else if(e.target.value===\"manager\"){\n            setCheckList([\"Manager\",\"Employee\"])\n        }else if(e.target.value===\"employee\"){\n            setCheckList([\"Employee\"])\n        }\n    }\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        if(username===null || firstname===null || lastname===null ||\n            !Array.isArray(roles)){\n            console.log(`Please enter valid data`)\n        }else{\n            // console.log(`formData:${JSON.stringify(formData,null,4)}`)\n            const userInfo = {\n                id,\n                username,\n                firstname,\n                lastname,\n                active:active===true||active===\"true\"?true:false,\n                roles\n            }\n            \n            dispatch(updateUser(userInfo))\n        }\n    }\n\n    /////////////////////////////////////////////////\n    //////// Hooks //////////////////////////////////\n    ////////////////////////////////////////////////\n    \n    useEffect(()=>{\n        setFormData((prevState)=>({...prevState, roles:checkList}))\n        // console.log(`formData:${JSON.stringify(formData,null,4)}`)\n    },[checkList])\n\n    useEffect(()=>{\n        if(isSuccess && message!==\"\"){\n            dispatch(getAllUsers())\n\n            if(isSuccess){\n                // console.log(`get all finished`)\n                setFlag(false)\n             }\n        }\n    },[isSuccess])\n\n  return (\n    <div className='card-container' style={{padding:\"0\", border:\"none\"}}>\n        <p><span style={{fontWeight:\"bold\", marginBottom:\"0.5rem\"}}>id: </span> {initialValue._id}</p>\n        <form onSubmit={onSubmit}>\n\n            <div className=\"form-group\">\n                <label htmlFor={`username ${initialValue.username}`}>username</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'username'\n                    id={`username ${initialValue.username}`}\n                    value = {username}\n                    placeholder=\"Username\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`firstname ${initialValue.firstname}`}>firstname</label>\n                <input type=\"text\" \n                    className='form-control'\n                    name= 'firstname'\n                    id={`firstname ${initialValue.firstname}`}\n                    value = {firstname}\n                    placeholder=\"firstname\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`lastname ${initialValue.lastname}`}>lastname</label>\n                <input type=\"text\" \n                    className='form-control'\n                    name='lastname'\n                    id={`lastname ${initialValue.lastname}`}\n                    value = {lastname}\n                    placeholder=\"lastname\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                    <label>active</label>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"active\" \n                            id={`${initialValue.username} active true`} \n                            value={`true`}\n                            defaultChecked={initialValue.active?true:false}\n                            onChange={onChange} />\n                        <label htmlFor={`${initialValue.username} active true`}>Yes</label>\n                        </div>\n                    </div>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"active\" \n                            id={`${initialValue.username} active false`} \n                            value={`false`}\n                            defaultChecked={initialValue.active?false:true}\n                            onChange={onChange} />\n                        <label htmlFor={`${initialValue.username} active false`}>No</label>\n                        </div>\n                    </div>\n                </div>\n\n            <div className=\"form-group\">\n                    <label>roles</label>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"roles\" \n                            id={`${initialValue.username} role admin`} \n                            value=\"admin\"\n                            defaultChecked={initialValue.roles.includes(\"Admin\")?true:false}\n                            onChange={handleRoles} />\n                        <label htmlFor={`${initialValue.username} role admin`}>Admin</label>\n                        </div>\n                    </div>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"roles\" \n                            id={`${initialValue.username} role manager`} \n                            value=\"manager\"\n                            defaultChecked={initialValue.roles.includes(\"Manager\") && \n                                            !initialValue.roles.includes(\"Admin\") ?\n                                            true:false}\n                            onChange={handleRoles} />\n                        <label htmlFor={`${initialValue.username} role manager`}>Manager</label>\n                        </div>\n                    </div>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"roles\" \n                            id={`${initialValue.username} role employee`} \n                            value=\"employee\"\n                            defaultChecked={initialValue.roles.includes(\"Employee\") && \n                                            !initialValue.roles.includes(\"Admin\") && \n                                            !initialValue.roles.includes(\"Manager\") ?\n                                            true:false}\n                            onChange={handleRoles} />\n                        <label htmlFor={`${initialValue.username} role employee`}>Employee</label>\n                        </div>\n                    </div>\n                \n                </div>\n\n                <div className=\"form-group\">\n                    <button type=\"submit\" className=\"submit-btn\">\n                        Update\n                    </button>\n                </div>\n                \n        </form>\n    </div>\n  )\n}\n\nexport default UserForm","import { useState } from 'react'\nimport { FiEdit2 } from 'react-icons/fi'\nimport { AiOutlineClose } from 'react-icons/ai'\n\n\nimport \"./Card.css\"\nimport UserForm from '../Forms/UserForm'\n\nfunction UserCard({info}) {\n  const [editFlag, setEditFlag] = useState(false)\n\n  return (\n    <>\n    \n    <div className='card-container'>\n        <div className='edit-btn' \n            onClick={()=>setEditFlag(!editFlag)}>\n            {editFlag?<AiOutlineClose />:<FiEdit2 />}\n        </div>\n      {editFlag?\n      <UserForm initialValue={info} setFlag={setEditFlag}/>\n      :\n      <>\n        <p><span>id: </span> {info._id}</p>\n        <p><span>username: </span>{info.username}</p>\n        <p><span>firstname: </span> {info.firstname}</p>\n        <p><span>lastname: </span> {info.lastname}</p>\n        <p><span>active: </span>{info.active ?\"Yes\":\"No\"}</p>\n        <p><span>roles: </span>\n        {info.roles?.map((role,i)=><span style={{fontWeight:\"normal\"}} key={i}>{role} </span>)}</p>\n        <br />\n      </>\n      }\n    </div>\n    </>\n  )\n}\n\nexport default UserCard","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { getAllUsers } from '../../features/users/usersSlice'\n\nimport \"./User.css\"\n\nimport LoginAgainModal from '../../components/Modals/LoginAgainModal'\nimport useAuth from '../../hooks/useAuth'\nimport Loader from '../../components/Loader/Loader'\nimport UserCard from '../../components/Cards/UserCard'\n\nfunction Users() {\n    const dispatch = useDispatch()\n    const {token} = useSelector((state)=>state.auth)\n    const {isAdmin} = useAuth()\n\n    const { usersList, isLoading } = useSelector((state)=>state.users)\n\n    useEffect(()=>{\n        dispatch(getAllUsers())\n    },[])\n\n  return (\n    <>\n    {!token && <LoginAgainModal />}\n    {isLoading && <Loader />}\n    <div>\n        \n         <div className='form-container' style={{width:\"60vw\"}}>\n            <div className=\"form-grid\">\n            {(isAdmin)?\n            <>\n                <div className=\"form-group\">\n\n                    <div className=\"header\">\n                        <h3>User Data</h3>\n                    </div>\n                \n                </div>\n\n                <div className=\"user-card-grid\">\n\n                {(usersList && usersList?.length!==0) && \n                    usersList?.map((userInfo,index)=>\n                    \n                    <div key={index}>\n                        <UserCard info={userInfo} />\n                    </div>\n                    )\n                }\n                </div>\n            \n            </>\n            :\n            <p>Unauthorized</p>\n            }\n            </div>\n        </div>\n    </div>\n    </>\n  )\n}\n\nexport default Users","import React from 'react'\nimport \"./Footer.css\"\nimport useAuth from '../../hooks/useAuth'\n\nfunction Footer() {\n    const {status} = useAuth()\n  return (\n    <div className='footer-container'>\n        {(status!==\"\" && status)?status:\"Din 2023\"}\n    </div>\n  )\n}\n\nexport default Footer","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { AiOutlinePlus, AiOutlineClose } from \"react-icons/ai\"\nimport { resetSearchProducts, searchSKUProductsOnly } from '../../features/products/productSlice';\nimport { generateDemandSlip, getFilteredDemandSlips, resetAfterNewDemandSlip, resetOrders } from '../../features/orders/orderSlice';\nimport Loader from '../Loader/Loader';\n\nfunction QuickProdSearchForm({setToggleFlag,passNextFlag }) {\n    const dispatch = useDispatch();\n\n    const {productSKUData, noMatch } = useSelector((state)=>state.product)\n    const { newDemandSlip, isSuccess, isLoading, message } = useSelector((state)=>state.orders)\n\n    const [newDSFlag, setNewDSFlag] = useState(false)\n\n    const [formData, setFormData] = useState({\n        deliveryPartnerName: \"\",\n        distributorName: \"\",\n        orderedProductList: [{\n            sku:\"\",\n            productFullName:\"\",\n            quantity:\"\"\n        }]\n    })\n\n    const [updatedOrderList, setUpdatedOrderList] = useState([{\n        sku:\"\",\n        productFullName:\"\",\n        quantity:\"\"\n    }])\n\n    const [skuData, setSKUData] = useState({\n        itemCode:\"\",\n        vehicleModel:\"\",\n        brandCompany:\"\",\n        partNum:\"\",\n        skuOnlyFlag:\"true\"\n    })\n      \n    const { deliveryPartnerName, distributorName } = formData\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n\n    // const copyText=(text)=>{\n    //     navigator.clipboard.writeText(text)\n    // }\n\n    const handleModalClose =()=>{\n        setNewDSFlag(false)\n        setUpdatedOrderList([{\n            sku:\"\",\n            productFullName:\"\",\n            quantity:\"\"\n        }])\n        setFormData({\n            deliveryPartnerName: \"\",\n            distributorName: \"\",\n            orderedProductList: [{\n                sku:\"\",\n                productFullName:\"\",\n                quantity:\"\"\n            }]\n        })\n\n        dispatch(resetSearchProducts())\n    }\n\n    const handleNumField = (e) => {\n        const value = e.target.value.replace(/\\D/g, \"\");\n        setFormData((prevState)=>({...prevState, \n            [e.target.name]:value}));\n    };\n\n    const addItemfromSearch=(item)=>{\n        const newItem = {\n            sku: item.sku,\n            productFullName: item.productFullName,\n            quantity:\"\"\n        }\n        \n        // Check for Duplicates\n        var duplicateCheck = []\n        duplicateCheck = updatedOrderList.filter(prod=>prod.sku===item.sku)\n        \n        if(duplicateCheck.length>0){\n            return alert('Item Already Exists')\n        }\n\n        setUpdatedOrderList((prevState)=>([\n            ...prevState,\n            newItem\n        ]\n        ))\n    }\n\n    const onChange=(e)=>{\n        setFormData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onSKUChange=(e)=>{\n        setSKUData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onOrderItemChange=(e,i)=>{\n        let orderList = [...updatedOrderList]\n        let orderItem = orderList[i]\n        if(e.target.name===\"quantity\"){\n            const numValue = e.target.value.replace(/\\D/g, \"\")\n            orderItem[e.target.name] = numValue\n        }else{\n            orderItem[e.target.name] = e.target.value\n        }\n\n        setUpdatedOrderList(orderList)\n    }\n\n    const handleAddItem=()=>{\n        const modelList = [...updatedOrderList,{sku:\"\",productFullName:\"\",quantity:\"\"}]\n        setUpdatedOrderList(modelList)\n    }\n\n    const handleItemDelete = (index)=>{\n        const modelList = [...updatedOrderList]\n        modelList.splice(index,1)\n\n        setUpdatedOrderList(modelList)\n    }\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        let emptyOrderListObj = []\n        emptyOrderListObj = updatedOrderList.filter(prod=>(prod.sku===\"\"\n                                                    ||prod.productFullName===\"\"\n                                                    ||prod.quantity===\"\"))\n\n        if(emptyOrderListObj.length>0){\n            return alert('Empty Field/s')\n        }\n\n        if(deliveryPartnerName===\"\" || distributorName===\"\" || updatedOrderList.length===0 \n            || !Array.isArray(updatedOrderList)){\n            return alert(`Please enter valid data`)\n        }else{\n            const orderInfo = {\n                deliveryPartnerName,\n                distributorName,\n                orderedProductList:updatedOrderList,\n            }\n            \n            // console.log(`formData:${JSON.stringify(orderInfo,null,4)}`)\n            \n            dispatch(generateDemandSlip(orderInfo))\n            \n        }\n    }\n\n    // Get SKU Products API call \n    const onSKUSubmit=(e)=>{\n        e.preventDefault()\n        \n        if(skuData.itemCode===\"\"){\n            return alert(`Please Enter Item Code`)\n        }else{\n            dispatch(searchSKUProductsOnly(skuData))\n        }\n    }\n\n    /////////////////////////////////////////////////\n    //////// Hooks //////////////////////////////////\n    ////////////////////////////////////////////////\n\n    useEffect(()=>{\n        if(isSuccess && message!==\"\"){\n            // dispatch(resetOrders())\n            dispatch(getFilteredDemandSlips())\n\n            if(isSuccess){\n                setFormData({\n                    deliveryPartnerName: \"\",\n                    distributorName: \"\",\n                    orderedProductList: [{\n                        sku:\"\",\n                        productFullName:\"\",\n                        quantity:\"\"\n                    }]\n                })\n\n                setSKUData({\n                    itemCode:\"\",\n                    vehicleModel:\"\",\n                    brandCompany:\"\",\n                    partNum:\"\",\n                    skuOnlyFlag:\"true\"\n                })\n                dispatch(resetAfterNewDemandSlip())\n                setNewDSFlag(true)\n                // passNextFlag(true)\n                // setToggleFlag(false)\n            }\n        }\n    },[isSuccess])\n\n    // useEffect(()=>{\n    //     console.log(`uOL:${JSON.stringify(updatedOrderList,null,4)}`)\n    // },[updatedOrderList])\n\n    // useEffect(()=>{\n    //     console.log(`oL:${JSON.stringify(newDemandSlip.orderedProductList,null,4)}`)\n    // },[newDemandSlip])\n\n  return (\n    <>\n    {isLoading && <Loader/>}\n    {newDSFlag &&\n    <>\n    <div className=\"modal-backdrop\"></div> \n        <div className='modal-container'>\n            <div className=\"edit-btn\"\n                onClick={()=>handleModalClose()}\n            >\n            <AiOutlineClose />\n            </div>\n            <div className='ds-new-box'>\n\n                <div className='ds-new-col'>\n\n                <p><span>Ticket Number: </span>{`${newDemandSlip.ticketNumber}`}</p>\n                <p><span>Date: </span>{`${newDemandSlip.date}`}</p>\n                <br />\n\n                <p><span>Delivery Partner Name: </span>{`${newDemandSlip.deliveryPartnerName}`}</p>\n                <p><span>Distributor Name: </span>{`${newDemandSlip.distributorName}`}</p>\n                {/* <br /> */}\n                </div>\n\n                <div className='ds-new-col'>\n                <p>{`Prodcuts:`}</p>\n\n                 {newDemandSlip.orderedProductList?.map((item,index)=>{\n                     return(\n                    <div className='ds-col-prod-list' key={index}>\n                        <p><span>SKU: </span> {`${item.sku}`}</p>\n                        <p><span>Product Full Name: </span> {`${item.productFullName}`}</p>\n                        <p><span>Quantity: </span> {`${item.quantity}`}</p>\n                        <br />\n                    </div>\n                    )\n                })}\n                </div>\n            </div>\n\n        </div>\n    </>\n    }\n    <div className='card-container card-grid' style={{padding:\"0\", border:\"none\"}}>\n        <form onSubmit={onSubmit}>\n            <div className=\"form-group\">\n                <label htmlFor={`deliveryPartnerName`}>Delivery Partner Name</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'deliveryPartnerName'\n                    id={`deliveryPartnerName`}\n                    value = {deliveryPartnerName}\n                    placeholder=\"Delivery Partner Name\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor={`distributorName`}>Distributor Name</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'distributorName'\n                    id={`distributorName`}\n                    value = {distributorName}\n                    placeholder=\"Distributor Name\"\n                    autoComplete='off'\n                    onChange={onChange} />\n            </div>\n\n            <div className=\"form-group\" \n                style={{display:\"flex\", flexDirection:\"column\", justifyContent:\"center\"}}\n            >\n                <label>Products</label>\n                {updatedOrderList.map((prod,index)=>{\n                    return(\n                        <div className='model-input-container' key={index}>\n                            <input\n                                className='card-form-control'\n                                type='text'\n                                style={{width:\"99%\",marginRight:\"0.2rem\"}}\n                                name= {`sku`}\n                                id={`sku ${index}`}\n                                value = {prod.sku}\n                                placeholder=\"Prod SKU\"\n                                autoComplete='off'\n                                onChange={(e)=>onOrderItemChange(e,index)}\n                            />\n                             <input\n                                className='card-form-control'\n                                type='text'\n                                style={{width:\"99%\",marginRight:\"0.2rem\"}}\n                                name= {`productFullName`}\n                                id={`productFullName ${index}`}\n                                value = {prod.productFullName}\n                                placeholder=\"Prod Full Name\"\n                                autoComplete='off'\n                                onChange={(e)=>onOrderItemChange(e,index)}\n                            />\n                             <input\n                                className='card-form-control'\n                                type='text'\n                                style={{width:\"99%\",marginRight:\"0.2rem\"}}\n                                name= {`quantity`}\n                                id={`quantity ${index}`}\n                                value = {prod.quantity}\n                                placeholder=\"Prod Quantity\"\n                                autoComplete='off'\n                                onChange={(e)=>onOrderItemChange(e,index)}\n                            />\n\n                            <div className=\"delete-btn\" \n                                onClick={()=>handleItemDelete(index)}\n                            >\n                                <AiOutlineClose />\n                            </div>\n                        </div >\n                    )\n                })}\n                    <br />\n                <div className=\"add-btn\"\n                    onClick={handleAddItem}\n                >\n                    <AiOutlinePlus />\n                </div>\n\n            </div>\n            <div className=\"form-group\">\n                <button type=\"submit\" className=\"submit-btn\">\n                    Generate\n                </button>\n            </div>\n        </form>\n        {/* /////////////////////////////// */}\n        <form onSubmit={onSKUSubmit}>\n\n        <label style={{fontWeight:\"bold\"}}>Search by SKU</label>\n        <div className=\"form-group\">\n            <input type=\"text\" \n                className='card-form-control'\n                name= 'itemCode'\n                id={`itemCode sku`}\n                value = {skuData.itemCode}\n                placeholder=\"Item Code\"\n                autoComplete='off'\n                onChange={onSKUChange} \n                />\n        </div>\n\n        <div className=\"form-group\">\n            <input type=\"text\" \n                className='card-form-control'\n                name= 'vehicleModel'\n                id={`vehicleModel sku`}\n                value = {skuData.vehicleModel}\n                placeholder=\"Vehicle Model\"\n                autoComplete='off'\n                onChange={onSKUChange} />\n        </div>\n\n        <div className=\"form-group\">\n            <input type=\"text\" \n                className='card-form-control'\n                name= 'brandCompany'\n                id={`brandCompany sku`}\n                value = {skuData.brandCompany}\n                placeholder=\"Brand Company\"\n                autoComplete='off'\n                onChange={onSKUChange} />\n        </div>\n\n        <div className=\"form-group\">\n            <input type=\"text\" \n                className='card-form-control'\n                name= 'partNum'\n                id={`partNum sku`}\n                value = {skuData.partNum}\n                placeholder=\"Part Number\"\n                autoComplete='off'\n                onChange={onSKUChange} />\n        </div>\n\n        <div className=\"form-group\">\n            <button type=\"submit\" className=\"submit-btn\">\n                Search\n            </button>\n        </div>\n\n        {productSKUData.length!==0 && !noMatch && \n        <div className=\"form-group\">\n            <label>Results</label>\n            <div className=\"card-form-control\"\n                style={{display:\"flex\", flexDirection:\"column\", alignItems:\"flex-start\"}}\n            >\n                {productSKUData.map((item,i)=>{\n                    return (\n                        <div className='sku-list-item'\n                            key={i}\n                            onClick={()=>addItemfromSearch(item)}\n                        >\n\n                        <p>\n                            {item.sku}\n                        </p>\n                        <p>{item.productFullName}</p>\n                        <br />\n                        </div>\n                    )\n                })}\n            </div>\n        </div>}\n        \n        {noMatch && <p>No Match Found</p>  }\n\n        </form>\n    </div>\n    </>\n  )\n}\n\nexport default QuickProdSearchForm","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { AiOutlinePlus, AiOutlineClose } from \"react-icons/ai\"\nimport { getFilteredDemandSlips, resetAfterNewDemandSlip, updateDemandSlip } from '../../features/orders/orderSlice';\n\nfunction UpdateOrderForm({ initialValue, setFlag}) {\n    const dispatch = useDispatch();\n\n    const {isSuccess, updatedDataFlag} = useSelector((state)=>state.orders)\n\n    const [formData, setFormData] = useState({\n        ...initialValue, \n        recievedProductList: initialValue.orderedProductList\n    })\n    \n    const { deliveryPartnerName, distributorName } = formData\n\n    /////////////////////////////////////////////////\n    //////// Functions /////////////////////////////\n    ////////////////////////////////////////////////\n\n    const onChange=(e)=>{\n        setFormData((prevState)=>({\n            ...prevState,\n            [e.target.name]:e.target.value\n        }))\n    }\n\n    const onRecievedListChange=(e,i)=>{\n        var tempList = [...formData.recievedProductList]\n\n        const numValue = e.target.value.replace(/\\D/g, \"\");\n\n        console.log(`nV:${numValue}`)\n        const intInputValue = parseInt(numValue.replace(/\\D/g, \"\"),10)\n        const intMaxValue = parseInt(initialValue.orderedProductList[i].quantity,10)\n        \n        if(intInputValue>intMaxValue){\n            return alert('Invalid Quanity')\n        }\n        var tempItem = tempList[i]\n        let newItem = {\n            sku:tempItem.sku,\n            productFullName:tempItem.productFullName,\n            quantity:intInputValue?intInputValue:0\n        }\n\n\n        // tempItem[\"quantity\"] = e.target.value\n        tempList.splice(i,1,newItem)\n\n        // console.log(`itemList:${JSON.stringify(tempList,null,4)}`)\n        setFormData((prevState)=>({\n            ...prevState,\n            recievedProductList:tempList\n        }))\n\n    }\n\n    const handleNumField = (e) => {\n        const value = e.target.value.replace(/\\D/g, \"\");\n        setFormData((prevState)=>({...prevState, \n            [e.target.name]:value}));\n    };\n\n    const onSubmit = (e) =>{\n        e.preventDefault()\n\n        let updatedOrderList = [...formData.recievedProductList]\n        console.log(JSON.stringify(updatedOrderList,null,4))\n        let emptyOrderListObj = []\n        emptyOrderListObj = updatedOrderList.filter(prod=>(prod.sku===\"\"\n                                                    ||prod.productFullName===\"\"\n                                                    ||prod.quantity===\"\"))\n\n        if(emptyOrderListObj.length>0){\n            return alert('Empty Field/s')\n        }\n\n        if(formData.status===\"failed\"){\n            updatedOrderList = []\n        }else if(formData.status===\"fulfilled\"){\n            updatedOrderList = [...formData.orderedProductList]\n        }\n\n        if( formData.status===\"\" \n            || (formData.status!==\"partial\" && formData.status!==\"fulfilled\" && formData.status!==\"failed\") \n            || !Array.isArray(updatedOrderList)\n            ){\n            return alert(`Please enter valid data`)\n        }else{\n            const updatedInfo = {\n                ...formData,\n                recievedProductList: updatedOrderList,\n            }\n            \n            console.log(`formData:${JSON.stringify(updatedInfo,null,4)}`)\n            \n            dispatch(updateDemandSlip(updatedInfo))\n            \n        }\n    }\n    /////////////////////////////////////////////////\n    //////// Hooks //////////////////////////////////\n    ////////////////////////////////////////////////\n\n    // useEffect(()=>{\n    //     console.log(`iV:${JSON.stringify(initialValue,null,4)}`)\n    // },[])\n\n    useEffect(()=>{\n        if(isSuccess && updatedDataFlag){\n            // dispatch(resetOrders())\n            dispatch(getFilteredDemandSlips())\n\n            if(isSuccess){\n                dispatch(resetAfterNewDemandSlip())\n                // setNewDSFlag(true)\n                // passNextFlag(true)\n                // setToggleFlag(false)\n            }\n        }\n    },[isSuccess, updatedDataFlag])\n\n  return (\n    <>\n    <div className='card-container' style={{padding:\"0\", border:\"none\"}}>\n        <p><span>Ticket Number: </span> {initialValue.ticketNumber}</p>\n        <p><span>Delivery Partner Name: </span>{initialValue.deliveryPartnerName}</p>\n        <p><span>Distributor Name: </span> {initialValue.distributorName}</p>\n    \n        <form onSubmit={onSubmit}>\n            <div className=\"form-group\">\n                    <label>Status</label>\n\n                    <div className=\"radio-group\">\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"status\" \n                            id={`${initialValue.ticketNumber} partial`} \n                            value=\"partial\"\n                            defaultChecked={initialValue.status===\"partial\"?true:false}\n                            onChange={onChange} />\n                        <label htmlFor={`${initialValue.ticketNumber} partial`}>Partial</label>\n                        </div>\n                    {/* </div> */}\n\n                    {/* <div className=\"radio-group\"> */}\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"status\" \n                            id={`${initialValue.ticketNumber} failed`} \n                            value=\"failed\"\n                            defaultChecked={initialValue.status===\"failed\"?true:false}\n                            onChange={onChange} />\n                        <label htmlFor={`${initialValue.ticketNumber} failed`}>Failed</label>\n                        </div>\n                    {/* </div> */}\n\n                    {/* <div className=\"radio-group\"> */}\n                        <div className=\"radio-group-item\">\n                        <input type=\"radio\" \n                            name=\"status\" \n                            id={`${initialValue.ticketNumber} fulfilled`} \n                            value=\"fulfilled\"\n                            defaultChecked={initialValue.status===\"fulfilled\"?true:false}\n                            onChange={onChange} />\n                        <label htmlFor={`${initialValue.ticketNumber} fulfilled`}>Fulfilled</label>\n                        </div>\n                    {/* </div> */}\n\n                    </div>\n                </div>\n\n            {formData.status!==\"failed\" &&\n             <div className=\"form-group\">\n                <label htmlFor={`totalCost`}>Total Cost</label>\n                <input type=\"text\" \n                    className='card-form-control'\n                    name= 'totalCost'\n                    id={`totalCost`}\n                    value = {formData.totalCost}\n                    placeholder=\"Total Cost\"\n                    autoComplete='off'\n                    onChange={handleNumField} />\n            </div>}\n\n            {formData.status===\"partial\" &&\n\n            <div className=\"form-group\">\n                <label>Products</label>\n                {formData.recievedProductList.map((prod,k)=>{\n                    return(\n\n                    <div key={k}>\n                        <p>{prod.sku}</p>\n                        {/* <br /> */}\n                        <p>{prod.productFullName}</p>\n                        {/* <br /> */}\n                        <input\n                            type=\"text\" \n                            className='card-form-control'\n                            name=\"quantity\"\n                            id={`${initialValue.ticketNumber} ${k} quantity`}\n                            value = {formData.recievedProductList[k].quantity}\n                            placeholder=\"qty\"\n                            autoComplete='off'\n                            onChange={(e)=>onRecievedListChange(e,k)} \n                        />\n                        <br />\n                    </div>\n                        )\n                })}\n            </div>\n            }\n\n            <div className=\"form-group\">\n                <button type=\"submit\" className=\"submit-btn\">\n                    Update\n                </button>\n            </div>\n        </form>\n    </div>\n\n    </>\n  )\n}\n\nexport default UpdateOrderForm","import React, { useEffect, useState } from 'react'\nimport jsPDF from 'jspdf'\nimport autoTable from 'jspdf-autotable'\nimport { FiEdit2 } from 'react-icons/fi'\nimport { AiOutlineClose } from 'react-icons/ai'\nimport UpdateOrderForm from '../Forms/UpdateOrderForm'\n\nfunction DemandSlipCard({info}) {\n    const [editFlag, setEditFlag] = useState(false)\n\n    const pdfBodyData = info.orderedProductList.map((order)=>{\n      return [order.productFullName,order.quantity]\n    })\n\n    const ticketDate = info.ticketNumber.slice(3,5)+\"-\"+info.ticketNumber.slice(5,7)+\"-\"+info.ticketNumber.slice(7) \n    \n    // useEffect(()=>{\n    //   console.log(Array.isArray(pdfBodyData))\n    //   console.log(`\\npdfBodyData:${JSON.stringify(info,null,4)}`)\n    // },[])\n\n    const addHeaderAndFooter = doc => {\n      const pageCount = doc.internal.getNumberOfPages()\n      doc.setFont('helvetica', 'normal')\n      for (var i = 1; i <= pageCount; i++) {\n        doc.setPage(i)\n        doc.setFontSize(17)\n        doc.text('NAS',doc.internal.pageSize.width/2,40,{align:\"center\"})\n        \n        doc.setFontSize(10)\n        doc.text('Demand Reciept / Quotation',doc.internal.pageSize.width/2,55,{align:\"center\"})\n        \n        doc.text(20,75,`TID: ${info.ticketNumber}`)\n      \n        doc.text(20,90,`Date: ${ticketDate}`)\n        \n        // doc.text(20,105,`Dist.: ${testData.distributorName}`)\n  \n        doc.setFontSize(8)\n        \n        doc.text('Page ' + String(i) + ' of ' + String(pageCount), doc.internal.pageSize.width / 2,  doc.internal.pageSize.height - 20, {\n          align: 'center'\n        })\n        doc.text('This is an auto generated quotation', doc.internal.pageSize.width / 2,  doc.internal.pageSize.height - 10, {\n          align: 'center'\n        })\n      }\n    }\n\n    const handlePDFGenerate=()=>{\n\n      const headerData = [\"Product\",\"Qty\"]\n      // const bodyData = [\n      //               [\"DPD-ACC-SUZ-59300085000\",\"5\"],\n      //               [\"SKR-ACT-HON-51400KWP902\",\"2\"],\n      //               [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n      //               [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n      //               [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n      //               [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n      //               [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n      //               [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n      //               [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n      //               [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n      //               [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n      //               [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n      //               [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n      //               [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n      //               [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n      //             ]\n  \n      var doc = new jsPDF('p','pt',[201,470])\n  \n      doc.setProperties({\n          title: `DemandSlip${info.ticketNumber}`\n      });    \n      \n      autoTable(doc,{\n        startY:105,\n        margin:{left:20,top:105},\n        rowPageBreak:\"avoid\",\n        tableWidth:161,\n        theme:\"plain\",\n        headStyles:{halign:\"center\"},\n        // bodyStyles:{lineWidth:1},\n        columnStyles: { 1: { cellWidth:50, halign:'center'} },\n        head:[headerData],\n        body: pdfBodyData})\n  \n      addHeaderAndFooter(doc)\n  \n      doc.output('dataurlnewwindow',{filename:`DemandSlip${info.ticketNumber}`})\n      doc.save(`DemandSlip${info.ticketNumber}`)\n    }\n\n  return (\n    <>\n    \n    <div className='ds-slip-box'>\n        \n        <div className='edit-btn' \n            onClick={()=>setEditFlag(!editFlag)}>\n            {editFlag?<AiOutlineClose />:<FiEdit2 />}\n        </div>\n\n      {editFlag?\n      <UpdateOrderForm initialValue={info} setFlag={setEditFlag}/>\n      :\n      <>\n        <p><span>Ticket Number: </span> {info.ticketNumber}</p>\n        <p><span>Delivery Partner Name: </span>{info.deliveryPartnerName}</p>\n        <p><span>Distributor Name: </span> {info.distributorName}</p>\n        <p><span>Status: </span> {info.status}</p>\n        <p><span>Total Cost: </span>{info.totalCost}</p>\n        {/* <br /> */}\n        <p><span>Products: </span></p>\n        <div className='ds-new-col'>\n            {info.orderedProductList?.map((prod,i)=>\n                <React.Fragment key={i}>\n                    <p><span>SKU: </span>{prod.sku}</p>\n                    <p><span>Full Name: </span>{prod.productFullName}</p>\n                    <p><span>Qty: </span>{prod.quantity}</p>\n                    <br />\n                </React.Fragment>  \n            )}\n        </div>\n\n        <div className=\"pdf-btn\"\n          onClick={(e)=>handlePDFGenerate()}\n          >\n          Generate PDF\n        </div>\n      </>\n      }\n    </div>\n    </>\n  )\n}\n\nexport default DemandSlipCard","import React, { useEffect, useState } from 'react'\nimport jsPDF from 'jspdf'\nimport autoTable from 'jspdf-autotable'\nimport { FiEdit2 } from 'react-icons/fi'\n\nimport \"./DemandSlip.css\"\nimport QuickProdSearchForm from '../../components/Forms/QuickProdSearchForm'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getFilteredDemandSlips } from '../../features/orders/orderSlice'\nimport Loader from '../../components/Loader/Loader'\nimport LoginAgainModal from '../../components/Modals/LoginAgainModal'\nimport DemandSlipCard from '../../components/Cards/DemandSlipCard'\n\nfunction DemandSlip() {\n  const dispatch = useDispatch()\n\n  const {token} = useSelector((state)=>state.auth)\n  const { orderData, \n          pendingOrderList,\n          partialOrderList,\n          failedOrderList,\n          fulfilledOrderList,\n          isLoading } = useSelector((state)=>state.orders)\n\n  // const [pendingOrderList, setPendingOrderList] = useState(orderData?.filter((item)=>item.status===\"pending\"))\n  // const [partialOrderList, setPartialOrderList] = useState(orderData?.filter((item)=>item.status===\"partial\"))\n  // const [failedOrderList, setFailedOrderList] = useState(orderData?.filter((item)=>item.status===\"failed\"))\n  // const [fulfilledOrderList, setFulfilledOrderList] = useState(orderData?.filter((item)=>item.status===\"fulfilled\"))\n\n  const [createFlag, setCreateFlag] = useState(false)\n  const [allFlag, setAllFlag] = useState(true)\n  const [pendingFlag, setPendingFlag] = useState(false)\n  const [fulfilledFlag, setFulfilledFlag] = useState(false)\n  const [failedFlag, setFailedFlag] = useState(false)\n  const [partialFlag, setPartialFlag] = useState(false)\n\n  const testData = {\n    ticketID:\"00718082023\",\n    employeeId:\"\",\n    deliveryPartnerName:\"Suraj\",\n    distributorName:\"M K Auto\",\n    orderedProductList:{},\n  }\n\n  const date = testData.ticketID.slice(3,5)+\"-\"+testData.ticketID.slice(5,7)+\"-\"+testData.ticketID.slice(7) \n\n  const handleCreateClick=()=>{\n    setCreateFlag(true)\n\n    setAllFlag(false)\n    setFailedFlag(false)\n    setPartialFlag(false)\n    setPendingFlag(false)\n    setFulfilledFlag(false)\n  }\n\n  const handleAllClick=()=>{\n    setAllFlag(true)\n    \n    setCreateFlag(false)\n    setFailedFlag(false)\n    setPartialFlag(false)\n    setPendingFlag(false)\n    setFulfilledFlag(false)\n    \n  }\n\n  const handlePendingClick=()=>{\n    setPendingFlag(true)\n\n    setCreateFlag(false)\n    setAllFlag(false)\n    setFailedFlag(false)\n    setPartialFlag(false)\n    setFulfilledFlag(false)\n  }\n\n  const handlePartialClick=()=>{\n    setPartialFlag(true)\n    \n    setCreateFlag(false)\n    setAllFlag(false)\n    setPendingFlag(false)\n    setFailedFlag(false)\n    setFulfilledFlag(false)\n  }\n\n  const handleFailedClick=()=>{\n    setFailedFlag(true)\n    \n    setCreateFlag(false)\n    setAllFlag(false)\n    setPendingFlag(false)\n    setPartialFlag(false)\n    setFulfilledFlag(false)\n  }\n\n  const handleFulfilledClick=()=>{\n    setFulfilledFlag(true)\n    \n    setCreateFlag(false)\n    setAllFlag(false)\n    setPendingFlag(false)\n    setFailedFlag(false)\n    setPartialFlag(false)\n  }\n\n  const addHeaderAndFooter = doc => {\n    const pageCount = doc.internal.getNumberOfPages()\n    doc.setFont('helvetica', 'normal')\n    for (var i = 1; i <= pageCount; i++) {\n      doc.setPage(i)\n      doc.setFontSize(17)\n      doc.text('Nilam Auto Spares',doc.internal.pageSize.width/2,40,{align:\"center\"})\n      \n      doc.setFontSize(10)\n      doc.text('Demand Reciept / Quotation',doc.internal.pageSize.width/2,55,{align:\"center\"})\n      \n      doc.text(20,75,`TID: ${testData.ticketID}`)\n    \n      doc.text(20,90,`Date: ${date}`)\n      \n      // doc.text(20,105,`Dist.: ${testData.distributorName}`)\n\n      doc.setFontSize(8)\n      \n      doc.text('Page ' + String(i) + ' of ' + String(pageCount), doc.internal.pageSize.width / 2,  doc.internal.pageSize.height - 20, {\n        align: 'center'\n      })\n      doc.text('This is an auto generated quotation', doc.internal.pageSize.width / 2,  doc.internal.pageSize.height - 10, {\n        align: 'center'\n      })\n    }\n  }\n\n  const handlePDFGenerate=()=>{\n\n    const headerData = [\"Product\",\"Qty\"]\n    const bodyData = [\n                  [\"DPD-ACC-SUZ-59300085000\",\"5\"],\n                  [\"SKR-ACT-HON-51400KWP902\",\"2\"],\n                  [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n                  [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n                  [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n                  [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n                  [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n                  [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n                  [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n                  [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n                  [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n                  [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n                  [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n                  [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n                  [\"SKR-ACT-HON-51400KWP902\",\"10\"],\n                ]\n\n    var doc = new jsPDF('p','pt',[201,470])\n\n    doc.setProperties({\n        title: `DemandSlip${testData.ticketID}`\n    });    \n    \n    autoTable(doc,{\n      startY:105,\n      margin:{left:20,top:105},\n      rowPageBreak:\"avoid\",\n      tableWidth:161,\n      theme:\"plain\",\n      headStyles:{halign:\"center\"},\n      // bodyStyles:{lineWidth:1},\n      columnStyles: { 1: { cellWidth:50, halign:'center'} },\n      head:[headerData],\n      body:bodyData})\n\n    addHeaderAndFooter(doc)\n\n    doc.output('dataurlnewwindow',{filename:`DemandSlip${testData.ticketID}`})\n    doc.save(`DemandSlip${testData.ticketID}`)\n  }\n\n  useEffect(()=>{\n    dispatch(getFilteredDemandSlips())\n  },[])\n\n  // useEffect(()=>{\n  //   if(allFlag){\n  //     setDisplayList(orderData)\n  //   }\n  //   else if(pendingFlag){\n  //     setDisplayList(pendingOrderList)\n  //   }else if(failedFlag){\n  //     setDisplayList(failedOrderList)\n  //   }else if(partialFlag){\n  //     setDisplayList(partialOrderList)\n  //   }else if(fulfilledFlag){\n  //     setDisplayList(fulfilledOrderList)\n  //   }\n\n  // },[allFlag, pendingFlag, failedFlag, partialFlag, fulfilledFlag, orderData])\n  \n  // useEffect(()=>{\n  //   console.log(`dL:${JSON.stringify(displayList,null,4)}`)\n  // },[displayList])\n\n\n  return (\n    <>\n    {!token && <LoginAgainModal />}\n    {isLoading && <Loader/>}\n    <div className='container' \n      style={{\n        // border:'1px solid red', \n        justifyContent:\"flex-start\",\n        \n      }}\n    >\n      <div className=\"ds-filter-container\">\n        \n        <div className={`ds-filter-btn ${createFlag?\"ds-filer-btn-active\":\"\"}`}\n          onClick={()=>handleCreateClick()}\n        >\n          Create          \n        </div>\n\n        <div className={`ds-filter-btn ${allFlag?\"ds-filer-btn-active\":\"\"}`}\n          onClick={()=>handleAllClick()}\n        >\n          All\n        </div>\n        \n        <div className={`ds-filter-btn ${pendingFlag?\"ds-filer-btn-active\":\"\"}`}\n          onClick={()=>handlePendingClick()}\n        >\n          Pending\n        </div>\n        \n        <div className={`ds-filter-btn ${partialFlag?\"ds-filer-btn-active\":\"\"}`}\n          onClick={()=>handlePartialClick()}\n        >\n          Partial\n        </div>\n\n        <div className={`ds-filter-btn ${failedFlag?\"ds-filer-btn-active\":\"\"}`}\n          onClick={()=>handleFailedClick()}\n        >\n          Failed\n        </div>\n        \n        <div className={`ds-filter-btn ${fulfilledFlag?\"ds-filer-btn-active\":\"\"}`}\n          onClick={()=>handleFulfilledClick()}\n        >\n          Fulfilled        \n        </div>\n\n\n      </div>\n\n      <div className=\"ds-filter-data-container\">\n        \n        {/* Create Demand Slip */}\n        {createFlag &&\n        <>\n        <div className=\"ds-content\"\n        >\n        <div className=\"ds-search-container\">\n            <QuickProdSearchForm setToggleFlag={setCreateFlag} passNextFlag={setPendingFlag} />\n        </div>\n        </div>\n\n        </>\n        }\n\n        {/* All Orders */}\n        {allFlag &&\n        <>\n        <div className=\"ds-content ds-card-content\">\n          {orderData.length>0?\n            orderData.map((order,key)=>{\n                return (\n                <div className=\"ds-slip-box\" key={key}>\n                  <p><span>Ticket Number: </span> {order.ticketNumber}</p>\n                  <p><span>Delivery Partner Name: </span>{order.deliveryPartnerName}</p>\n                  <p><span>Distributor Name: </span> {order.distributorName}</p>\n                  <p><span>Status: </span> {order.status}</p>\n                  <p><span>Total Cost: </span>{order.totalCost}</p>\n                  <p><span>Products: </span></p>\n                  <div className='ds-new-col'>\n                      {order.orderedProductList?.map((prod,i)=>\n                          <React.Fragment key={i}>\n                              <p><span>SKU: </span>{prod.sku}</p>\n                              <p><span>Full Name: </span>{prod.productFullName}</p>\n                              <p><span>Qty: </span>{prod.quantity}</p>\n                              <br />\n                          </React.Fragment>  \n                      )}\n                  </div>\n                </div>\n                )\n              })\n              :\n              <div style={{gridColumn:\"1/span 3\"}}>\n                <h1>No Orders Today</h1>\n              </div>\n            }\n          <br />\n          \n        </div>\n        </>\n\n        }\n\n        {/* Pending Orders */}\n        {pendingFlag &&\n        <>\n        <div className=\"ds-content ds-card-content\">\n            {pendingOrderList.length>0?\n            pendingOrderList.map((order,key)=>{\n                return (\n                  <React.Fragment key={key}>\n                    <DemandSlipCard info={order}/>\n                  </React.Fragment>\n                )\n              })\n            :\n            <div style={{gridColumn:\"1/span 3\"}}>\n              <h1>No Pending Orders</h1>\n            </div> \n            }\n          <br />\n          \n        </div>\n        </>\n        }\n\n        {/* Partial Orders */}\n        {partialFlag &&\n        <>\n        <div className=\"ds-content ds-card-content\">\n            {partialOrderList.length>0?\n            partialOrderList.map((order,key)=>{\n                return (\n                <div className=\"ds-slip-box\" key={key}>\n                  <p><span>Ticket Number: </span> {order.ticketNumber}</p>\n                  <p><span>Delivery Partner Name: </span>{order.deliveryPartnerName}</p>\n                  <p><span>Distributor Name: </span> {order.distributorName}</p>\n                  <p><span>Status: </span> {order.status}</p>\n                  <p><span>Total Cost: </span>{order.totalCost}</p>\n                  <p><span>Products: </span></p>\n                  <div className='ds-new-col'>\n                      {order.orderedProductList?.map((prod,i)=>\n                          <React.Fragment key={i}>\n                              <p><span>SKU: </span>{prod.sku}</p>\n                              <p><span>Full Name: </span>{prod.productFullName}</p>\n                              <p><span>Qty: </span>{prod.quantity}</p>\n                              <br />\n                          </React.Fragment>  \n                      )}\n                  </div>\n                </div>\n                )\n              })\n            :\n            <div style={{gridColumn:\"1/span 3\"}}>\n              <h1>No Partial Status Orders</h1>\n            </div> \n            }\n          <br />\n          \n        </div>\n        </>\n\n        }\n\n        {/* Failed Orders */}\n        {failedFlag &&\n        <>\n        <div className=\"ds-content ds-card-content\">\n            {failedOrderList.length>0?\n            failedOrderList.map((order,key)=>{\n                return (\n                <div className=\"ds-slip-box\" key={key}>\n                  <p><span>Ticket Number: </span> {order.ticketNumber}</p>\n                  <p><span>Delivery Partner Name: </span>{order.deliveryPartnerName}</p>\n                  <p><span>Distributor Name: </span> {order.distributorName}</p>\n                  <p><span>Status: </span> {order.status}</p>\n                  <p><span>Total Cost: </span>{order.totalCost}</p>\n                  <p><span>Products: </span></p>\n                  <div className='ds-new-col'>\n                      {order.orderedProductList?.map((prod,i)=>\n                          <React.Fragment key={i}>\n                              <p><span>SKU: </span>{prod.sku}</p>\n                              <p><span>Full Name: </span>{prod.productFullName}</p>\n                              <p><span>Qty: </span>{prod.quantity}</p>\n                              <br />\n                          </React.Fragment>  \n                      )}\n                  </div>\n                </div>\n                )\n              })\n              :\n              <div style={{gridColumn:\"1/span 3\"}}>\n                <h1>No Failed Status Orders</h1>\n              </div>\n            }\n          <br />\n          \n        </div>\n        </>\n\n        }\n\n        {/* Fulfilled Orders */}\n        {fulfilledFlag &&\n        <>\n        <div className=\"ds-content ds-card-content\">\n            {fulfilledOrderList.length>0?\n            fulfilledOrderList.map((order,key)=>{\n                return (\n                <div className=\"ds-slip-box\" key={key}>\n                  <p><span>Ticket Number: </span> {order.ticketNumber}</p>\n                  <p><span>Delivery Partner Name: </span>{order.deliveryPartnerName}</p>\n                  <p><span>Distributor Name: </span> {order.distributorName}</p>\n                  <p><span>Status: </span> {order.status}</p>\n                  <p><span>Total Cost: </span>{order.totalCost}</p>\n                  <p><span>Products: </span></p>\n                  <div className='ds-new-col'>\n                      {order.orderedProductList?.map((prod,i)=>\n                          <React.Fragment key={i}>\n                              <p><span>SKU: </span>{prod.sku}</p>\n                              <p><span>Full Name: </span>{prod.productFullName}</p>\n                              <p><span>Qty: </span>{prod.quantity}</p>\n                              <br />\n                          </React.Fragment>  \n                      )}\n                  </div>\n                </div>\n                )\n              })\n              :\n              <div style={{gridColumn:\"1/span 3\"}}>\n                <h1>No Fulfilled Status Orders</h1>\n              </div>\n            }\n          <br />\n          \n        </div>\n        </>\n\n        }\n\n\n        \n\n    \n      </div>\n\n    </div>\n    </>\n  )\n} \n\nexport default DemandSlip\n{/* {\n  <>\n\n  <div className=\"pdf-btn\"\n    onClick={(e)=>handlePDFGenerate()}\n    >\n    Generate PDF\n  </div>\n  </>\n} */}","import { BrowserRouter as Router, HashRouter, Routes, Route } from 'react-router-dom'\n\nimport Navbar from './components/Navbar/Navbar';\nimport QuickRes from './pages/IndiaMartRes/QuickRes';\nimport Products from './pages/Products/Products';\nimport Landing from './pages/Landing/Landing';\nimport Product from './pages/Products/Product';\nimport NotFound from './pages/NotFound/NotFound';\nimport Login from './pages/Login/Login';\nimport Users from './pages/UserManagement/Users';\n\nimport './App.css';\nimport Footer from './components/Footer/Footer';\nimport DemandSlip from './pages/DemandSlip/DemandSlip';\n\nfunction App() {\n  return (\n    <>\n    <HashRouter>\n\n    <div className=\"container\">\n      <Navbar />\n     \n      <Routes>\n        <Route path=\"/\" element={<Landing />} />\n        <Route path='/login' element={<Login />} />\n        <Route path=\"/indiamart-templates\" element={<QuickRes />} />\n        <Route path=\"/products\" element={<Products />} />\n        <Route path='/products/:sku' element={<Product /> }/> \n        <Route path='/user-management' element={<Users />} />\n        <Route path='/demand-slip-generator' element={<DemandSlip />} />\n\n        <Route path='*' element={<NotFound /> } />\n      </Routes>\n\n      <Footer />\n    </div>\n    \n    </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store';\nimport App from './App';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}